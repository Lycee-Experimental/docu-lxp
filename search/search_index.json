{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Accueil","text":""},{"location":"#bienvenues-sur-baclxp","title":"Bienvenu\u00b7e\u00b7s sur BacLXP","text":"<p>Ce site centralise des ressources pour se pr\u00e9parer au Bac au Lyc\u00e9e Exp\u00e9rimental de Saint-Nazaire.</p> <p> Acc\u00e9der \u00e0 la biblio</p> <p> Acc\u00e9der \u00e0 la vid\u00e9o</p> <p>Dans certaines parties en lien avec la pr\u00e9paration au bac, le code couleur suivant est utilis\u00e9</p> <p>\ud83d\udd34 Terminale</p> <p>\ud83d\udfe1 Premi\u00e8re</p> <p>\ud83d\udfe2 D\u00e9ter</p> Comment s'inscrit-on au bac au LXP ? <p>Le bac est l\u2019un des choix de formation propos\u00e9 au Lyc\u00e9e Exp\u00e9rimental, c\u2019est un cheminement qu\u2019il est pr\u00e9f\u00e9rable d\u2019envisager sur un temps long (3 ou 4 ans).  </p> <p>L\u2019inscription aux \u00e9preuves du bac repr\u00e9sente un engagement vis \u00e0 vis de l\u2019ext\u00e9rieur, des \u00e9valuateur.ices se d\u00e9placent parfois de loin pour venir au centre d\u2019examen.  </p> <p>Il est donc n\u00e9cessaire de d\u00e9cider son maintien aux \u00e9preuves du bac selon le calendrier suivant\u00a0:</p> <ul> <li> <p>D\u00e8s la P1 : Les \u00e9l\u00e8ves doivent \u00eatre pr\u00e9sents en groupe de niveau pour d\u00e9cider des SP\u00c9s qu\u2019ils font faire ( #BaseSi\u00e8cle).  Iels y prennent connaissance du calendrier de l\u2019ann\u00e9e, s\u2019y organisent pour comprendre o\u00f9 se passent les temps de formations de tronc commun et de sp\u00e9 (ateliers/activit\u00e9s), constituent des groupes de travail, r\u00e9cup\u00e8rent les productions r\u00e9alis\u00e9es pendant les temps de gestion... </p> </li> <li> <p>En P2 :</p> <ul> <li>En octobre\u00a0: choix d\u00e9finitif des Sp\u00e9 + Langues Vivantes (#Cyclades)</li> <li>En d\u00e9cembre\u00a0: un bilan est fait en groupe de niveau sur l\u2019inscription dans les faits dans le projet bac\u00a0: fr\u00e9quentation groupe de niveau / ateliers / activit\u00e9s. Le GN tient inform\u00e9 les groupes de base d\u2019\u00e9ventuels \u00e9l\u00e8ves qui auraient abandonn\u00e9 le projet bac en \u00e9tant absent\u00b7e du GN.  Ce constat peut \u00eatre repris en groupe de suivi pour les bilan de mi-ann\u00e9e. S\u2019ensuit une discussion avec le MEE de suivi pour de faire le point et de questionner le projet au regard de la coh\u00e9rence implication/ choix projet. En cas de d\u00e9saccord sur le constat, le MEE de suivi rencontre le jeune avec sa famille pour discuter de la coh\u00e9rence du parcours.</li> </ul> </li> <li>En P3\u00a0: Suite au bilan de mi-ann\u00e9e les \u00e9l\u00e8ves sont invit\u00e9s \u00e0 confirmer au groupe de niveau leur maintien \u00e0 l\u2019inscription aux \u00e9preuves. Les MEEs du GN ne courent pas apr\u00e8s les jeunes, \u00e0 elles/eux d\u2019\u00eatre en groupe de niveau pour avoir les infos et finaliser leurs d\u00e9marches d\u2019inscription. </li> <li>Fin P3\u00a0: Le GN indique aux GB les \u00e9l\u00e8ves qui n\u2019ont pas fait le n\u00e9cessaire pour s\u2019inscrire au bac, pour qu\u2019ils r\u00e9fl\u00e9chissent \u00e0 leur orientation et fassent au besoin le lien avec les familles. </li> <li>En mars : dernier recours pour annuler l\u2019inscription bac.</li> </ul> <p>Important</p> <p>L\u2019inscription dans un projet bac n\u00e9cessite une participation aux groupes de niveau.</p> Calendrier des \u00e9preuves Premi\u00e8reTerminale <ul> <li>Fran\u00e7ais :<ul> <li>\u00c9preuve \u00e9crite : vendredi 14 juin 2024 matin ;</li> <li>\u00c9preuve orale : du lundi 24 juin au vendredi 5 juillet au plus tard.</li> <li>Rattrapages : vendredi 13 septembre 2024.</li> </ul> </li> <li>Tronc commun et Sp\u00e9 abandonn\u00e9e : Fin mai, d\u00e9but juin.</li> </ul> <ul> <li>Philosophie : mardi 18 juin matin ;</li> <li>\u00c9preuves \u00e9crites de sp\u00e9cialit\u00e9 : mercredi 19, jeudi 20 et vendredi 21 juin (une journ\u00e9e par sp\u00e9cialit\u00e9)</li> <li>Grand oral : du lundi 24 juin au mercredi 3 juillet au plus tard.</li> <li>Tronc commun et Sp\u00e9 abandonn\u00e9e : Fin mai, d\u00e9but juin.</li> <li>Rattrapages : du mardi 10 au vendredi 13 septembre 2024.</li> </ul> <p>Coefficients des \u00e9preuves</p> <p>{ \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.json\", \"description\": \"A simple radial chart with embedded data.\", \"background\": \"transparent\", \"data\": {     \"values\": [     {\"Mati\u00e8re\": \"Spe1\", \"Coef\": 16, \"Ann\u00e9e de passage\": \"Terminale\"},     {\"Mati\u00e8re\": \"Sp\u00e92\", \"Coef\": 16, \"Ann\u00e9e de passage\": \"Terminale\"},     {\"Mati\u00e8re\": \"Fran\u00e7ais\", \"Coef\": 10, \"Ann\u00e9e de passage\": \"Premi\u00e8re\"},     {\"Mati\u00e8re\": \"Philo\", \"Coef\": 8, \"Ann\u00e9e de passage\": \"Terminale\"},     {\"Mati\u00e8re\": \"Sp\u00e93\", \"Coef\": 8, \"Ann\u00e9e de passage\": \"Premi\u00e8re\"},     {\"Mati\u00e8re\": \"EMC\", \"Coef\": 2, \"Ann\u00e9e de passage\": \"Terminale\"},     {\"Mati\u00e8re\": \"Grand Oral\", \"Coef\": 10, \"Ann\u00e9e de passage\": \"Terminale\"},     {\"Mati\u00e8re\": \"EPS\", \"Coef\": 6, \"Ann\u00e9e de passage\": \"Terminale\"},     {\"Mati\u00e8re\": \"Hist-G\u00e9o\", \"Coef\": 6, \"Ann\u00e9e de passage\": \"1\u00e8re et Term\"},     {\"Mati\u00e8re\": \"LVA\", \"Coef\": 6, \"Ann\u00e9e de passage\": \"1\u00e8re et Term\"},     {\"Mati\u00e8re\": \"LVB\", \"Coef\": 6, \"Ann\u00e9e de passage\": \"1\u00e8re et Term\"},     {\"Mati\u00e8re\": \"Sciences\", \"Coef\": 6, \"Ann\u00e9e de passage\": \"1\u00e8re et Term\"}     ]     },     \"layer\": [     {\"mark\": {\"type\": \"arc\", \"innerRadius\": 20, \"stroke\": \"#fff\"}},      {\"mark\": {\"type\": \"text\", \"radiusOffset\": 30},\"encoding\": {\"text\": {\"field\": \"Mati\u00e8re\", \"type\": \"nominal\"}}},     {\"mark\": {\"type\": \"text\", \"radiusOffset\": -10},\"encoding\": {\"text\": {\"field\": \"Coef\", \"type\": \"nominal\"},\"fill\": {\"value\": \"#000\"}}}            ],     \"encoding\": {     \"tooltip\": [{\"field\": \"Mati\u00e8re\", \"type\": \"nominal\" }, { \"field\": \"Coef\", \"type\": \"quantitative\"}, {\"field\": \"Ann\u00e9e de passage\", \"type\": \"nominal\" }],     \"theta\": {\"field\": \"Coef\", \"type\": \"quantitative\", \"stack\": true},     \"radius\": {\"field\": \"Coef\", \"scale\": {\"type\": \"sqrt\", \"zero\": true, \"rangeMin\": 20}},     \"color\": {\"field\": \"Coef\", \"type\": \"nominal\", \"legend\": null}     } }</p> <p>A bient\u00f4t en activit\u00e9 !</p>"},{"location":"assets/sujets/nsi/term/pratique/01_1/correction/","title":"Correction","text":"<pre><code>def verifie(tab):\nfor i in range(1, len(tab)):\nif tab[i] &lt; tab[i-1]:\nreturn False\nreturn True\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/01_1/enonce/","title":"Enonce","text":"<p>Programmer la fonction <code>verifie</code> qui prend en param\u00e8tre un tableau de valeurs num\u00e9riques non vide et qui renvoie <code>True</code> si ce tableau est tri\u00e9 dans l\u2019ordre croissant, <code>False</code> sinon.</p> <p>Exemples :</p> <pre><code>Exemples :\n&gt;&gt;&gt; verifie([0, 5, 8, 8, 9])\nTrue\n&gt;&gt;&gt; verifie([8, 12, 4])\nFalse\n&gt;&gt;&gt; verifie([-1, 4])\nTrue\n&gt;&gt;&gt; verifie([5])\nTrue\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/01_2/correction/","title":"Correction","text":"<pre><code>urne = ['A', 'A', 'A', 'B', 'C', 'B', 'C', 'B', 'C', 'B']\ndef depouille(urne):\nresultat = {}\nfor bulletin in urne:\nif bulletin in resultat:\nresultat[bulletin] = resultat[bulletin] + 1\nelse:\nresultat[bulletin] = 1\nreturn resultat\ndef vainqueur(election):\nvainqueur = '' #(1)\nnmax = 0\nfor candidat in election:\nif election[candidat] &gt; nmax :\nnmax = election[candidat]\nvainqueur = candidat #(2)\nliste_finale = [nom for nom in election if election[nom] == nmax]\nreturn liste_finale\n</code></pre> <ol> <li>Il est pourtant tr\u00e8s d\u00e9conseill\u00e9 de nommer une variable avec le m\u00eame nom que la fonction qui la contient...</li> <li>Cette variable <code>vainqueur</code> est inutile, on ne s'en sert pas dans l'\u00e9laboration de la liste finale.</li> </ol>"},{"location":"assets/sujets/nsi/term/pratique/01_2/enonce/","title":"Enonce","text":"<p>Les r\u00e9sultats d'un vote ayant trois issues possibles 'A', 'B' et 'C' sont stock\u00e9s dans un tableau.</p> <p>Exemple :</p> <pre><code>urne = ['A', 'A', 'A', 'B', 'C', 'B', 'C', 'B', 'C', 'B']\n</code></pre> <p>La fonction <code>depouille</code> doit permettre de compter le nombre de votes exprim\u00e9s pour chaque artiste. Elle prend en param\u00e8tre un tableau et renvoie le r\u00e9sultat dans un dictionnaire dont les cl\u00e9s sont les noms des artistes et les valeurs le nombre de votes en leur faveur.</p> <p>La fonction vainqueur doit d\u00e9signer le nom du ou des gagnants. Elle prend en param\u00e8tre un dictionnaire dont la structure est celle du dictionnaire renvoy\u00e9 par la fonction <code>depouille</code> et renvoie un tableau. Ce tableau peut donc contenir plusieurs \u00e9l\u00e9ments s\u2019il y a des artistes ex- aequo. Compl\u00e9ter les fonctions <code>depouille</code> et vainqueur ci-apr\u00e8s pour qu\u2019elles renvoient les r\u00e9sultats attendus.</p> <pre><code>urne = ['A', 'A', 'A','B', 'C', 'B', 'C','B', 'C', 'B']\ndef depouille(urne):\nresultat = ...\nfor bulletin in urne:\nif ...:\nresultat[bulletin] = resultat[bulletin] + 1\nelse:\n...\nreturn resultat\ndef vainqueur(election):\nvainqueur = ''\nnmax = 0\nfor candidat in election:\nif ... &gt; ... :\nnmax = ...\nvainqueur = candidat\nliste_finale = [nom for nom in election if election[nom] == ...]\nreturn ...\n</code></pre> <p>Exemples d\u2019utilisation :</p> <pre><code>&gt;&gt;&gt; election = depouille(urne)\n&gt;&gt;&gt; election\n{'A': 3, 'B': 4, 'C': 3}\n&gt;&gt;&gt; vainqueur(election)\n['B']\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/02_1/correction/","title":"Correction","text":"<pre><code>def indices_maxi(tab):\nval_max = tab[0]\nind_max = []\nfor i in range(len(tab)):\nif tab[i] &gt; val_max:\nval_max = tab[i]\nfor i in range(len(tab)):\nif tab[i] == val_max:\nind_max.append(i)\nreturn (val_max, ind_max)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/02_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>indices_maxi</code> qui prend en param\u00e8tre une liste <code>tab</code>, non vide, de nombres entiers et renvoie un couple donnant d\u2019une part le plus grand \u00e9l\u00e9ment de cette liste et d\u2019autre part la liste des indices de la liste <code>tab</code> o\u00f9 appara\u00eet ce plus grand \u00e9l\u00e9ment.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; indices_maxi([1, 5, 6, 9, 1, 2, 3, 7, 9, 8])\n(9, [3, 8])\n&gt;&gt;&gt; indices_maxi([7])\n(7, [0])\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/02_2/correction/","title":"Correction","text":"<pre><code>def positif(pile):\npile_1 = list(pile)\npile_2 = []\nwhile pile_1 != []:\nx = pile_1.pop()\nif x &gt;= 0:\npile_2.append(x)\nwhile pile_2 != []:\nx = pile_2.pop()\npile_1.append(x)\nreturn pile_1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/02_2/enonce/","title":"Enonce","text":"<p>Cet exercice utilise des piles qui seront repr\u00e9sent\u00e9es en Python par des listes (type <code>list</code>).</p> <p>On rappelle que l\u2019expression <code>liste_1 = list(liste)</code> fait une copie de <code>liste</code>ind\u00e9pendante de <code>liste</code>, que l\u2019expression <code>x = liste.pop()</code> enl\u00e8ve le sommet de la pile <code>liste</code> et le place dans la variable <code>x</code> et, enfin, que l\u2019expression <code>liste.append(v)</code> place la valeur <code>v</code> au sommet de la pile <code>liste</code>.</p> <p>Compl\u00e9ter le code Python de la fonction <code>positif</code> ci-dessous qui prend une pile <code>liste</code> de nombres entiers en param\u00e8tre et qui renvoie la pile des entiers positifs dans le m\u00eame ordre, sans modifier la variable <code>liste</code>.</p> <pre><code>def positif(pile):\npile_1 = ...(pile)\npile_2 = ...\nwhile pile_1 != []:\nx = ...\nif ... &gt;= 0:\npile_2.append(...)\nwhile pile_2 != ...:\nx = pile_2.pop()\n...\nreturn pile_1\n</code></pre> <p>Exemple : </p><pre><code>&gt;&gt;&gt; positif([-1, 0, 5, -3, 4, -6, 10, 9, -8])\n[0, 5, 4, 10, 9]\n&gt;&gt;&gt; positif([-2])\n[]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/03_1/correction/","title":"Correction","text":"<pre><code>def moyenne(tab):\nsomme = 0\ncoeffs = 0\nfor couple in tab:\nsomme += couple[0] * couple[1]\ncoeffs += couple[1]\nif coeffs == 0:\nreturn None\nreturn somme / coeffs\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/03_1/enonce/","title":"Enonce","text":"<p>Dans cet exercice, les nombres sont des entiers ou des flottants.</p> <p>\u00c9crire une fonction <code>moyenne</code> renvoyant la moyenne pond\u00e9r\u00e9e d\u2019une liste non vide, pass\u00e9e en param\u00e8tre, de tuples \u00e0 deux \u00e9l\u00e9ments de la forme (<code>valeur</code>, <code>coefficient</code>) o\u00f9 <code>valeur</code> et <code>coefficient</code> sont des nombres positifs ou nuls. Si la somme des coefficients est nulle, la fonction renvoie <code>None</code>, si la somme des coefficients est non nulle, la fonction renvoie, sous forme de flottant, la moyenne des valeurs affect\u00e9es de leur coefficient.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; moyenne([(8, 2), (12, 0), (13.5, 1), (5, 0.5)])\n9.142857142857142\n&gt;&gt;&gt; moyenne([(3, 0), (5, 0)])\nNone\n</code></pre> <p>Dans le premier exemple la moyenne est calcul\u00e9e par la formule :</p> <p>\\(\\dfrac{8 \\times 2 + 12 \\times 0 + 13,5 \\times 1 + 5 \\times 0,5}{2+0+1+0,5}\\)</p>"},{"location":"assets/sujets/nsi/term/pratique/03_2/correction/","title":"Correction","text":"<pre><code>coeur = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], \\\n        [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], \\\n        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \\\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], \\\n        [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\ndef affiche(dessin):\n''' affichage d'une grille : les 1 sont repr\u00e9sent\u00e9s par \n    des \" *\" , les 0 par deux espaces \"  \" '''\nfor ligne in dessin:\nfor col in ligne:\nif col == 1:\nprint(' *',end='')\nelse:\nprint('  ',end='')\nprint()\ndef zoomListe(liste_depart, k):\n'''renvoie une liste contenant k fois chaque \n    \u00e9l\u00e9ment de liste_depart'''\nliste_zoom = []\nfor elt in liste_depart:\nfor i in range(k):\nliste_zoom.append(elt)\nreturn liste_zoom\ndef zoomDessin(grille, k):\n'''renvoie une grille o\u00f9 les lignes sont zoom\u00e9es k fois \n    ET r\u00e9p\u00e9t\u00e9es k fois'''\ngrille_zoom = []\nfor elt in grille:\nliste_zoom = zoomListe(elt, k)\nfor i in range(k):\ngrille_zoom.append(liste_zoom)\nreturn grille_zoom\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/03_2/enonce/","title":"Enonce","text":"<p> On travaille sur des dessins en noir et blanc obtenu \u00e0 partir de pixels noirs et blancs : La figure \u00ab c\u0153ur \u00bb ci-dessus va servir d\u2019exemple. On la repr\u00e9sente par une grille de nombres, c\u2019est-\u00e0-dire par une liste compos\u00e9e de sous-listes de m\u00eame longueurs. Chaque sous-liste repr\u00e9sentera donc une ligne du dessin.</p> <p>Dans le code ci-dessous, la fonction <code>affiche</code> permet d\u2019afficher le dessin. Les pixels noirs (1 dans la grille) seront repr\u00e9sent\u00e9s par le caract\u00e8re \"*\" et les blancs (0 dans la grille) par deux espaces.</p> <p>La fonction <code>zoomListe</code> prend en argument une liste <code>liste_depart</code> et un entier <code>k</code>. Elle renvoie une liste o\u00f9 chaque \u00e9l\u00e9ment de <code>liste_depart</code> est dupliqu\u00e9 <code>k</code> fois.</p> <p>La fonction <code>zoomDessin</code> prend en argument la grille <code>dessin</code> et renvoie une grille o\u00f9 toutes les lignes de <code>dessin</code> sont zoom\u00e9es <code>k</code> fois et r\u00e9p\u00e9t\u00e9es <code>k</code> fois.</p> <p>Soit le code ci-dessous :</p> <pre><code>coeur = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], \\\n        [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], \\\n        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \\\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], \\\n        [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\ndef affiche(dessin):\n''' affichage d'une grille : les 1 sont repr\u00e9sent\u00e9s par \n        des \" *\" , les 0 par deux espaces \"  \" '''\nfor ligne in dessin:\nfor col in ligne:\nif col == 1:\nprint(\" *\", end=\"\")\nelse:\nprint(\"  \", end=\"\")\nprint()\ndef zoomListe(liste_depart,k):\n'''renvoie une liste contenant k fois chaque \n    \u00e9l\u00e9ment de liste_depart'''\nliste_zoom = ...\nfor elt in ... :\nfor i in range(k):\n...\nreturn liste_zoom\ndef zoomDessin(grille,k):\n'''renvoie une grille o\u00f9 les lignes sont zoom\u00e9es k fois \n    ET r\u00e9p\u00e9t\u00e9es k fois'''\ngrille_zoom=[]\nfor elt in grille:\nliste_zoom = ...\nfor i in range(k):\n... .append(...)\nreturn grille_zoom\n</code></pre> <p>R\u00e9sultats \u00e0 obtenir :</p> <p></p><pre><code>&gt;&gt;&gt; affiche(coeur)\n</code></pre> <pre><code>&gt;&gt;&gt; affiche(zoomDessin(coeur,3))\n</code></pre> <pre><code>            * * * * * *                   * * * * * *                  \n            * * * * * *                   * * * * * *                  \n            * * * * * *                   * * * * * *                  \n      * * *             * * *       * * *             * * *            \n      * * *             * * *       * * *             * * *            \n      * * *             * * *       * * *             * * *            \n* * *                         * * *                         * * *      \n* * *                         * * *                         * * *      \n* * *                         * * *                         * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n      * * *                                           * * *            \n      * * *                                           * * *            \n      * * *                                           * * *            \n            * * *                               * * *                  \n            * * *                               * * *                  \n            * * *                               * * *                  \n                  * * *                   * * *                        \n                  * * *                   * * *                        \n                  * * *                   * * *                        \n                        * * *       * * *                              \n                        * * *       * * *                              \n                        * * *       * * *                              \n                              * * *                                    \n                              * * *                                    \n                              * * *\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/04_1/correction/","title":"Correction","text":"<pre><code>def a_doublon(lst):\nfor i in range(len(lst)-1):\nif lst[i] == lst[i+1]:\nreturn True\nreturn False\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/04_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>a_doublon</code> qui prend en param\u00e8tre une liste tri\u00e9e de nombres et renvoie <code>True</code> si la liste contient au moins deux nombres identiques, <code>False</code> sinon.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; a_doublon([])\nFalse\n&gt;&gt;&gt; a_doublon([1])\nFalse\n&gt;&gt;&gt; a_doublon([1, 2, 4, 6, 6])\nTrue\n&gt;&gt;&gt; a_doublon([2, 5, 7, 7, 7, 9])\nTrue\n&gt;&gt;&gt; a_doublon([0, 2, 3])\nFalse\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/04_2/correction/","title":"Correction","text":"<pre><code>def voisinage(n, ligne, colonne):\n\"\"\" Renvoie la liste des coordonn\u00e9es des voisins de la case\n    (ligne, colonne) en g\u00e9rant les cases sur les bords. \"\"\"\nvoisins = []\nfor l in range(max(0,ligne-1), min(n, ligne+2)):\nfor c in range(max(0, colonne-1), min(n, colonne+2)):\nif (l, c) != (ligne, colonne):\nvoisins.append((l,c))\nreturn voisins\ndef incremente_voisins(grille, ligne, colonne):\n\"\"\" Incr\u00e9mente de 1 toutes les cases voisines d'une bombe.\"\"\"\nvoisins = voisinage(len(grille), ligne, colonne)\nfor l, c in voisins:\nif grille[l][c] != -1: # si ce n'est pas une bombe\ngrille[l][c] += 1  # on ajoute 1 \u00e0 sa valeur\ndef genere_grille(bombes):\n\"\"\" Renvoie une grille de d\u00e9mineur de taille nxn o\u00f9 n est\n    le nombre de bombes, en pla\u00e7ant les bombes \u00e0 l'aide de\n    la liste bombes de coordonn\u00e9es (tuples) pass\u00e9e en\n    param\u00e8tre. \"\"\"\nn = len(bombes)\n# Initialisation d'une grille nxn remplie de 0\ngrille = [[0 for colonne in range(n)] for ligne in range(n)]\n# Place les bombes et calcule les valeurs des autres cases\nfor ligne, colonne in bombes:\ngrille[ligne][colonne] = -1 # place la bombe\nincremente_voisins(grille, ligne, colonne) # incr\u00e9mente ses voisins\nreturn grille\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/04_2/enonce/","title":"Enonce","text":"<p>On souhaite g\u00e9n\u00e9rer des grilles du jeu de d\u00e9mineur \u00e0 partir de la position des bombes \u00e0 placer. On se limite \u00e0 la g\u00e9n\u00e9ration de grilles carr\u00e9es de taille \\(n \\times n\\) o\u00f9 \\(n\\) est le nombre de bombes du jeu.  </p> <p>Dans le jeu du d\u00e9mineur, chaque case de la grille contient soit une bombe, soit une valeur qui correspond aux nombres de bombes situ\u00e9es dans le voisinage direct de la case (au- dessus, en dessous, \u00e0 droite, \u00e0 gauche ou en diagonale : chaque case a donc 8 voisins si elle n'est pas situ\u00e9e au bord de la grille).</p> <p>Voici un exemple de grille \\(5 \\times 5\\) de d\u00e9mineur dans laquelle la bombe est repr\u00e9sent\u00e9e par une \u00e9toile :</p> <p></p> <p>On utilise une liste de listes pour repr\u00e9senter la grille et on choisit de coder une bombe par la valeur -1.</p> <p>L'exemple ci-contre sera donc cod\u00e9 par la liste :</p> <pre><code>[[1, 1, 1, 0, 0],\n[1, -1, 1, 1, 1],\n[2, 2, 3, 2, -1],\n[1, -1, 2, -1, 3],\n[1, 1, 2, 2, -1]]\n</code></pre> <p>Compl\u00e9ter le code suivant afin de g\u00e9n\u00e9rer des grilles de d\u00e9mineur, on pourra v\u00e9rifier que l\u2019instruction <code>genere_grille([(1, 1), (2, 4), (3, 1), (3, 3), (4, 4)])</code> produit bien la liste donn\u00e9e en exemple.</p> <pre><code>def voisinage(n, ligne, colonne):\n\"\"\" Renvoie la liste des coordonn\u00e9es des voisins de la case\n    (ligne, colonne) en g\u00e9rant les cases sur les bords. \"\"\"\nvoisins = []\nfor l in range(max(0,ligne-1), min(n, ligne+2)):\nfor c in range(max(0, colonne-1), min(n, colonne+2)):\nif (l, c) != (ligne, colonne):\nvoisins.append((l,c))\nreturn voisins\ndef incremente_voisins(grille, ligne, colonne):\n\"\"\" Incr\u00e9mente de 1 toutes les cases voisines d'une bombe.\"\"\"\nvoisins = ...\nfor l, c in voisins:\nif grille[l][c] != ...: # si ce n'est pas une bombe\n...  # on ajoute 1 \u00e0 sa valeur\ndef genere_grille(bombes):\n\"\"\" Renvoie une grille de d\u00e9mineur de taille nxn o\u00f9 n est\n    le nombre de bombes, en pla\u00e7ant les bombes \u00e0 l'aide de\n    la liste bombes de coordonn\u00e9es (tuples) pass\u00e9e en\n    param\u00e8tre. \"\"\"\nn = len(bombes)\n# Initialisation d'une grille nxn remplie de 0\ngrille = [[0 for colonne in range(n)] for ligne in range(n)]\n# Place les bombes et calcule les valeurs des autres cases\nfor ligne, colonne in bombes:\ngrille[ligne][colonne] = ... # place la bombe\n... # incr\u00e9mente ses voisins\nreturn grille\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/05_1/correction/","title":"Correction","text":"<pre><code>from random import randint\ndef lancer(n):\nreturn [randint(1,6) for _ in range(n)]\ndef paire_6(tab):\nnb = 0\nfor elt in tab:\nif elt == 6:\nnb += 1\nif nb &gt;=2 :\nreturn True\nelse:\nreturn False\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/05_1/enonce/","title":"Enonce","text":"<p>\u00c9crire en python deux fonctions :</p> <ul> <li> <p><code>lancer</code> de param\u00e8tre <code>n</code>, un entier positif, qui renvoie un tableau de type <code>list</code> de <code>n</code> entiers obtenus al\u00e9atoirement entre 1 et 6 (1 et 6 inclus) ;</p> </li> <li> <p><code>paire_6</code> de param\u00e8tre <code>tab</code>, un tableau de type <code>list</code> de <code>n</code> entiers entre 1 et 6 obtenus al\u00e9atoirement, qui renvoie un bool\u00e9en \u00e9gal \u00e0 <code>True</code> si le nombre de 6 est sup\u00e9rieur ou \u00e9gal \u00e0 2, <code>False</code> sinon.</p> </li> </ul> <p>On pourra utiliser la fonction <code>randint(a,b)</code> du module <code>random</code> pour laquelle la documentation officielle est la suivante :</p> <p><code>Renvoie un entier al\u00e9atoire N tel que a &lt;=N &lt;= b.</code></p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; lancer1 = lancer(5)\n[5, 6, 6, 2, 2]\n&gt;&gt;&gt; paire_6(lancer1)\nTrue\n&gt;&gt;&gt; lancer2 = lancer(5)\n[6, 5, 1, 6, 6]\n&gt;&gt;&gt; paire_6(lancer2)\nTrue\n&gt;&gt;&gt; lancer3 = lancer(3)\n[2, 2, 6]\n&gt;&gt;&gt; paire_6(lancer3)\nFalse\n&gt;&gt;&gt; lancer4 = lancer(0)\n[]\n&gt;&gt;&gt; paire_6(lancer4)\nFalse\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/05_2/correction/","title":"Correction","text":"<pre><code>def nbLig(image):\n'''renvoie le nombre de lignes de l'image'''\nreturn len(image)\ndef nbCol(image):\n'''renvoie la largeur de l'image'''\nreturn len(image[0])\ndef negatif(image):\n'''renvoie le negatif de l'image sous la forme\n       d'une liste de listes'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(nbCol(image)):\nL[i][j] = 255 - image[i][j]\nreturn L\ndef binaire(image, seuil):\n'''renvoie une image binarisee de l'image sous la forme\n       d'une liste de listes contenant des 0 si la valeur\n       du pixel est strictement inferieure au seuil\n       et 1 sinon'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(nbCol(image)):\nif image[i][j] &lt; seuil :\nL[i][j] = 0\nelse:\nL[i][j] = 1\nreturn L\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/05_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re une image en 256 niveaux de gris que l\u2019on repr\u00e9sente par une grille de nombres, c\u2019est-\u00e0-dire une liste compos\u00e9e de sous-listes toutes de longueurs identiques.</p> <p>La largeur de l\u2019image est donc la longueur d\u2019une sous-liste et la hauteur de l\u2019image est le nombre de sous-listes.</p> <p>Chaque sous-liste repr\u00e9sente une ligne de l\u2019image et chaque \u00e9l\u00e9ment des sous-listes est un entier compris entre 0 et 255, repr\u00e9sentant l\u2019intensit\u00e9 lumineuse du pixel.</p> <p>Le n\u00e9gatif d\u2019une image est l\u2019image constitu\u00e9e des pixels <code>x_n</code> tels que <code>x_n + x_i = 255</code> o\u00f9 <code>x_i</code> est le pixel correspondant de l\u2019image initiale.</p> <p>Compl\u00e9ter le programme suivant : </p><pre><code>def nbLig(image):\n'''renvoie le nombre de lignes de l'image'''\nreturn ...\ndef nbCol(image):\n'''renvoie la largeur de l'image'''\nreturn ...\ndef negatif(image):\n'''renvoie le negatif de l'image sous la forme\n       d'une liste de listes'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(...):\nL[i][j] = ...\nreturn L\ndef binaire(image, seuil):\n'''renvoie une image binarisee de l'image sous la forme\n       d'une liste de listes contenant des 0 si la valeur\n       du pixel est strictement inferieure au seuil\n       et 1 sinon'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(...):\nif image[i][j] &lt; ... :\nL[i][j] = ...\nelse:\nL[i][j] = ...\nreturn L\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; img=[[20, 34, 254, 145, 6], [23, 124, 237, 225, 69], [197, 174,\n207, 25, 87], [255, 0, 24, 197, 189]]\n&gt;&gt;&gt; nbLig(img)\n4\n&gt;&gt;&gt; nbCol(img)\n5\n&gt;&gt;&gt; negatif(img)\n[[235, 221, 1, 110, 249], [232, 131, 18, 30, 186], [58, 81, 48, 230,\n168], [0, 255, 231, 58, 66]]\n&gt;&gt;&gt; binaire(img,120)\n[[0, 0, 1, 1, 0], [0, 1, 1, 1, 0], [1, 1, 1, 0, 0], [1, 0, 0, 1, 1]]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/06_1/correction/","title":"Correction","text":"<pre><code>def recherche(tab, n):\nindice_solution = len(tab)\nfor i in range(len(tab)):\nif tab[i] == n:\nindice_solution = i\nreturn indice_solution\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/06_1/enonce/","title":"Enonce","text":"<p>Programmer la fonction <code>recherche</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples </p><pre><code>&gt;&gt;&gt; recherche([5, 3],1)\n2\n&gt;&gt;&gt; recherche([2,4],2)\n0\n&gt;&gt;&gt; recherche([2,3,5,2,4],2)\n3\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/06_2/correction/","title":"Correction","text":"<pre><code>from math import sqrt\ndef distance(point1, point2):\n\"\"\" Calcule et renvoie la distance entre deux points. \"\"\"\nreturn sqrt((point1[0] - point2[0])**2 + ((point1[1] - point2[1]))**2)\ndef plus_courte_distance(tab, depart):\n\"\"\" Renvoie le point du tableau tab se trouvant \u00e0 la plus courte distance du point depart.\"\"\"\npoint = tab[0]\nmin_dist = distance(point, depart)\nfor i in range (1, len(tab)):\nif distance(tab[i], depart) &lt; min_dist:\npoint = tab[i]\nmin_dist = distance(tab[i], depart)\nreturn point\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/06_2/enonce/","title":"Enonce","text":"<p>On souhaite programmer une fonction donnant la distance la plus courte entre un point de d\u00e9part et une liste de points. Les points sont tous \u00e0 coordonn\u00e9es enti\u00e8res. Les points sont donn\u00e9s sous la forme d'un tuple de deux entiers. La liste des points \u00e0 traiter est donc un tableau de tuples.</p> <p>On rappelle que la distance entre deux points du plan de coordonn\u00e9es \\((x;y)\\) et \\((x';y')\\) est donn\u00e9e par la formule :</p> \\[d=\\sqrt{(x-x')^2+(y-y')^2}\\] <p>On importe pour cela la fonction racine carr\u00e9e (<code>sqrt</code>) du module <code>math</code> de Python.</p> <p>Compl\u00e9ter le code des fonctions <code>distance</code> et <code>plus_courte_distance</code> fournies ci-dessous pour qu\u2019elles r\u00e9pondent \u00e0 leurs sp\u00e9cifications.</p> <pre><code>from math import sqrt     # import de la fonction racine carr\u00e9e\ndef distance(point1, point2):\n\"\"\" Calcule et renvoie la distance entre deux points. \"\"\"\nreturn sqrt((...)**2 + (...)**2)\ndef plus_courte_distance(tab, depart):\n\"\"\" Renvoie le point du tableau tab se trouvant \u00e0 la plus courte distance du point depart.\"\"\"\npoint = tab[0]\nmin_dist = ...\nfor i in range (1, ...):\nif distance(tab[i], depart)...:\npoint = ...\nmin_dist = ...\nreturn point\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; distance((1, 0), (5, 3))\n5.0\n&gt;&gt;&gt; distance((1, 0), (0, 1))\n1.4142135623730951\n&gt;&gt;&gt; plus_courte_distance([(7, 9), (2, 5), (5, 2)], (0, 0))\n(2, 5)\n&gt;&gt;&gt; plus_courte_distance([(7, 9), (2, 5), (5, 2)], (5, 2))\n(5, 2)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/07_1/correction/","title":"Correction","text":"<pre><code>def fusion(tab1, tab2):\ntab_fusion = []\ni1 = 0\ni2 = 0\nwhile i1 &lt; len(tab1) and i2 &lt; len(tab2):\nif tab1[i1] &lt; tab2[i2]:\ntab_fusion.append(tab1[i1])\ni1 += 1\nelse:\ntab_fusion.append(tab2[i2])\ni2 += 1\nif i1 == len(tab1):\nwhile i2 &lt; len(tab2):\ntab_fusion.append(tab2[i2])\ni2 += 1\nelse:\nwhile i1 &lt; len(tab1):\ntab_fusion.append(tab1[i1])\ni1 += 1        \nreturn tab_fusion\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/07_1/enonce/","title":"Enonce","text":"<p>Programmer la fonction <code>fusion</code> prenant en param\u00e8tres deux tableaux non vides <code>tab1</code> et <code>tab2</code> (type <code>list</code>) d'entiers, chacun dans l\u2019ordre croissant, et renvoyant un tableau tri\u00e9 dans l\u2019ordre croissant et contenant l\u2019ensemble des valeurs de <code>tab1</code> et <code>tab2</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; fusion([3, 5], [2, 5])\n[2, 3, 5, 5]\n&gt;&gt;&gt; fusion([-2, 4], [-3, 5, 10])\n[-3, -2, 4, 5, 10]\n&gt;&gt;&gt; fusion([4], [2, 6])\n[2, 4, 6]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/07_2/correction/","title":"Correction","text":"<pre><code>romains = {\"I\":1, \"V\":5, \"X\":10, \"L\":50, \"C\":100, \"D\":500, \"M\":1000}\ndef traduire_romain(nombre):\n\"\"\" Renvoie l\u2019\u00e9criture d\u00e9cimale du nombre donn\u00e9 en chiffres\n    romains \"\"\"\nif len(nombre) == 1:\nreturn romains[nombre]\nelif romains[nombre[0]] &gt;= romains[nombre[1]]:\nreturn romains[nombre[0]] + traduire_romain(nombre[1:])\nelse:\nreturn traduire_romain(nombre[1:]) - romains[nombre[0]]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/07_2/enonce/","title":"Enonce","text":"<p>Le but de cet exercice est d\u2019\u00e9crire une fonction r\u00e9cursive <code>traduire_romain</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8res, non vide, repr\u00e9sentant un nombre \u00e9crit en chiffres romains et qui renvoie son \u00e9criture d\u00e9cimale.</p> <p>Les chiffres romains consid\u00e9r\u00e9s sont : I, V, X, L, C, D et M. Ils repr\u00e9sentent respectivement les nombres 1, 5, 10, 50, 100, 500, et 1000 en base dix.</p> <p>On dispose d\u2019un dictionnaire <code>romains</code> dont les cl\u00e9s sont les caract\u00e8res apparaissant dans l\u2019\u00e9criture en chiffres romains et les valeurs sont les nombres entiers associ\u00e9s en \u00e9criture d\u00e9cimale :</p> <p><code>romains = {\"I\":1, \"V\":5, \"X\":10, \"L\":50, \"C\":100, \"D\":500, \"M\":1000}</code></p> <p>Le code de la fonction <code>traduire_romain</code> fournie repose sur le principe suivant :</p> <ul> <li> <p>la valeur d\u2019un caract\u00e8re est ajout\u00e9e \u00e0 la valeur du reste de la cha\u00eene si ce caract\u00e8re a une valeur sup\u00e9rieure (ou \u00e9gale) \u00e0 celle du caract\u00e8re qui le suit ;</p> </li> <li> <p>la valeur d\u2019un caract\u00e8re est retranch\u00e9e \u00e0 la valeur du reste de la cha\u00eene si ce caract\u00e8re a une valeur strictement inf\u00e9rieure \u00e0 celle du caract\u00e8re qui le suit.</p> </li> </ul> <p>Ainsi, XIV correspond au nombre 10 + 5 - 1 puisque :</p> <ul> <li> <p>la valeur de X (10) est sup\u00e9rieure \u00e0 celle de I (1), on ajoute donc 10 \u00e0 la valeur du reste de la cha\u00eene, c\u2019est-\u00e0-dire IV ;</p> </li> <li> <p>la valeur de I (1) est strictement inf\u00e9rieure \u00e0 celle de V (5), on soustrait donc 1 \u00e0 la valeur du reste de la cha\u00eene, c\u2019est-\u00e0-dire V.</p> </li> </ul> <p>On rappelle que pour priver une cha\u00eene de caract\u00e8res de son premier caract\u00e8re, on utilisera l\u2019instruction :</p> <p><code>nom_de_variable[1:]</code></p> <p>Par exemple, si la variable <code>mot</code> contient la cha\u00eene <code>\"CDI\"</code>, <code>mot[1:]</code> renvoie <code>\"DI\"</code>.</p> <pre><code>romains = {\"I\":1, \"V\":5, \"X\":10, \"L\":50, \"C\":100, \"D\":500, \"M\":1000}\ndef traduire_romain(nombre):\n\"\"\" Renvoie l\u2019\u00e9criture d\u00e9cimale du nombre donn\u00e9 en chiffres\n    romains \"\"\"\nif len(nombre) == 1:\nreturn ...\nelif romains[nombre[0]] &gt;= ...\nreturn romains[nombre[0]] + ...\nelse:\nreturn ...\n</code></pre> <p>Compl\u00e9ter le code de la fonction <code>traduire_romain</code> et le tester.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; traduire_romain(\"XIV\")\n14\n&gt;&gt;&gt; traduire_romain(\"CXLII\")\n142\n&gt;&gt;&gt; traduire_romain(\"MMXXIII\")\n2023\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/08_1/correction/","title":"Correction","text":"<pre><code>def max_dico(dico):\ncle_max = ''\nval_max = 0\nfor cle in dico:\nif dico[cle] &gt; val_max:\nval_max = dico[cle]\ncle_max = cle\nreturn (cle_max, val_max)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/08_1/enonce/","title":"Enonce","text":"<p>Sur le r\u00e9seau social TipTop, on s\u2019int\u00e9resse au nombre de \u00ab like \u00bb des abonn\u00e9s. Les donn\u00e9es sont stock\u00e9es dans des dictionnaires o\u00f9 les cl\u00e9s sont les pseudos et les valeurs correspondantes sont les nombres de \u00ab like \u00bb comme ci-dessous :</p> <p><code>{'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50}</code></p> <p>\u00c9crire une fonction <code>max_dico</code> qui :</p> <ul> <li>Prend en param\u00e8tre un dictionnaire <code>dico</code> non vide dont les cl\u00e9s sont des cha\u00eenes de caract\u00e8res et les valeurs associ\u00e9es sont des entiers ;</li> <li>Renvoie un tuple dont :<ul> <li>La premi\u00e8re valeur est la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale ;</li> <li>La seconde valeur est la premi\u00e8re valeur maximale pr\u00e9sente dans le dictionnaire.</li> </ul> </li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; max_dico({'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50})\n('Ada', 201)\n&gt;&gt;&gt; max_dico({'Alan': 222, 'Ada': 201, 'Eve': 220, 'Tim': 50})\n('Alan', 222)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/08_2/correction/","title":"Correction","text":"<pre><code>class Pile:\n\"\"\"Classe d\u00e9finissant une structure de pile.\"\"\"\ndef __init__(self):\nself.contenu = []\ndef est_vide(self):\n\"\"\"Renvoie le bool\u00e9en True si la pile est vide, False sinon.\"\"\"\nreturn self.contenu == []\ndef empiler(self, v):\n\"\"\"Place l'\u00e9l\u00e9ment v au sommet de la pile\"\"\"\nself.contenu.append(v)\ndef depiler(self):\n\"\"\"\n        Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile,\n        si la pile n\u2019est pas vide.\n        \"\"\"\nif not self.est_vide():\nreturn self.contenu.pop()\ndef eval_expression(tab):\np = Pile()\nfor element in tab:\nif element != '+' and element != '*':\np.empiler(element)\nelse:\nif element == '+':\nresultat = p.depiler() + p.depiler()\nelse:\nresultat = p.depiler() * p.depiler()\np.empiler(resultat)\nreturn p.depiler()\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/08_2/enonce/","title":"Enonce","text":"<p>Nous avons l\u2019habitude de noter les expressions arithm\u00e9tiques avec des parenth\u00e8ses comme par exemple : (2 + 3) \u00d7 5. </p> <p>Il existe une autre notation utilis\u00e9e par certaines calculatrices, appel\u00e9e notation postfixe, qui n\u2019utilise pas de parenth\u00e8ses. L\u2019expression arithm\u00e9tique pr\u00e9c\u00e9dente est alors obtenue en saisissant successivement 2, puis 3, puis l\u2019op\u00e9rateur +, puis 5, et enfin l\u2019op\u00e9rateur \u00d7. On mod\u00e9lise cette saisie par le tableau [2, 3, '+', 5, '*']. </p> <p>Autre exemple, la notation postfixe de 3 \u00d7 2 + 5 est mod\u00e9lis\u00e9e par le tableau : </p> <p>[3, 2, '*', 5, '+']. </p> <p>D\u2019une mani\u00e8re plus g\u00e9n\u00e9rale, la valeur associ\u00e9e \u00e0 une expression arithm\u00e9tique en notation postfixe est d\u00e9termin\u00e9e \u00e0 l\u2019aide d\u2019une pile en parcourant l\u2019expression arithm\u00e9tique de gauche \u00e0 droite de la fa\u00e7on suivante :</p> <ul> <li>Si l\u2019\u00e9l\u00e9ment parcouru est un nombre, on le place au sommet de la pile ;</li> <li>Si l\u2019\u00e9l\u00e9ment parcouru est un op\u00e9rateur, on r\u00e9cup\u00e8re les deux \u00e9l\u00e9ments situ\u00e9s au sommet de la pile et on leur applique l\u2019op\u00e9rateur. On place alors le r\u00e9sultat au sommet de la pile.</li> <li>\u00c0 la fin du parcours, il reste alors un seul \u00e9l\u00e9ment dans la pile qui est le r\u00e9sultat de l\u2019expression arithm\u00e9tique.</li> </ul> <p>Dans le cadre de cet exercice, on se limitera aux op\u00e9rations \u00d7 et +.</p> <p>Pour cet exercice, on dispose d\u2019une classe <code>Pile</code> qui impl\u00e9mente les m\u00e9thodes de base sur la structure de pile.</p> <p>Compl\u00e9ter le script de la fonction <code>eval_expression</code> qui re\u00e7oit en param\u00e8tre une liste python repr\u00e9sentant la notation postfixe d\u2019une expression arithm\u00e9tique et qui renvoie sa valeur associ\u00e9e.</p> <pre><code>class Pile:\n\"\"\"Classe d\u00e9finissant une structure de pile.\"\"\"\ndef __init__(self):\nself.contenu = []\ndef est_vide(self):\n\"\"\"Renvoie le bool\u00e9en True si la pile est vide, False sinon.\"\"\"\nreturn self.contenu == []\ndef empiler(self, v):\n\"\"\"Place l'\u00e9l\u00e9ment v au sommet de la pile\"\"\"\nself.contenu.append(v)\ndef depiler(self):\n\"\"\"\n        Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile,\n        si la pile n\u2019est pas vide.\n        \"\"\"\nif not self.est_vide():\nreturn self.contenu.pop()\ndef eval_expression(tab):\np = Pile()\nfor ... in tab:\nif element != '+' ... element != '*':\np.empiler(...)\nelse:\nif element == ...:\nresultat = p.depiler() + ...\nelse:\nresultat = ...\np.empiler(...)\nreturn ...\n</code></pre> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; eval_expression([2, 3, '+', 5, '*'])\n25\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/09_1/correction/","title":"Correction","text":"<pre><code>def multiplication(n1, n2):\nif n1 &lt; 0:\nreturn -multiplication(-n1, n2)\nif n2 &lt; 0:\nreturn -multiplication(n1, -n2)\nresultat = 0\nfor _ in range(n2):\nresultat += n1\nreturn resultat\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/09_1/enonce/","title":"Enonce","text":"<p>Programmer la fonction <code>multiplication</code>, prenant en param\u00e8tres deux nombres entiers <code>n1</code> et <code>n2</code>, et qui renvoie le produit de ces deux nombres. Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. </p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; multiplication(3,5)\n15\n&gt;&gt;&gt; multiplication(-4,-8)\n32\n&gt;&gt;&gt; multiplication(-2,6)\n-12\n&gt;&gt;&gt; multiplication(-2,0)\n0\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/09_2/correction/","title":"Correction","text":"<pre><code>def chercher(tab, n, i, j):\nif i &lt; 0 or j &gt; len(tab) :\nreturn None\nif i &gt; j :\nreturn None\nm = (i + j) // 2\nif tab[m] &lt; n :\nreturn chercher(tab, n, m+1 , j)\nelif tab[m] &gt; n :\nreturn chercher(tab, n, i , m-1 )\nelse :\nreturn m\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/09_2/enonce/","title":"Enonce","text":"<p>Soit <code>tab</code> un tableau non vide d'entiers tri\u00e9s dans l'ordre croissant et <code>n</code> un entier.</p> <p>La fonction <code>chercher</code> ci-dessous doit renvoyer un indice o\u00f9 la valeur <code>n</code> appara\u00eet dans <code>tab</code> si cette valeur y figure et <code>None</code> sinon. </p> <p>Les param\u00e8tres de la fonction sont :</p> <ul> <li><code>tab</code>, le tableau dans lequel s'effectue la recherche ;</li> <li><code>n</code>, l'entier \u00e0 chercher dans le tableau ;</li> <li><code>i</code>, l'indice de d\u00e9but de la partie du tableau o\u00f9 s'effectue la recherche ;</li> <li><code>j</code>, l'indice de fin de la partie du tableau o\u00f9 s'effectue la recherche.</li> </ul> <p>L\u2019algorithme demand\u00e9 est une recherche dichotomique r\u00e9cursive.</p> <p>Recopier et compl\u00e9ter le code de la fonction <code>chercher</code> suivante :</p> <pre><code>def chercher(tab, n, i, j):\nif i &lt; 0 or j &gt; len(tab) :\nreturn None\nif i &gt; j :\nreturn None\nm = (i + j) // ...\nif ... &lt; n :\nreturn chercher(tab, n, ... , ...)\nelif ... &gt; n :\nreturn chercher(tab, n, ... , ... )\nelse :\nreturn ...\n</code></pre> <p>L'ex\u00e9cution du code doit donner : </p><pre><code>&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 7, 0, 10)\n&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 7, 0, 5)\n&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 9, 0, 5)\n4\n&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 6, 0, 5)\n2\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/10_1/correction/","title":"Correction","text":"<pre><code>def maxliste(tab):\nmaximum = tab[0]\nfor element in tab:\nif element &gt; maximum:\nmaximum = element\nreturn maximum\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/10_1/enonce/","title":"Enonce","text":"<p>\u00c9crire la fonction <code>maxliste</code>, prenant en param\u00e8tre un tableau non vide de nombres <code>tab</code> (de type <code>list</code>) et renvoyant le plus grand \u00e9l\u00e9ment de ce tableau.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; maxliste([98, 12, 104, 23, 131, 9])\n131\n&gt;&gt;&gt; maxliste([-27, 24, -3, 15])\n24\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/10_2/correction/","title":"Correction","text":"<pre><code>class Pile:\n\"\"\" Classe d\u00e9finissant une pile \"\"\"\ndef __init__(self):\nself.valeurs = []\ndef est_vide(self):\n\"\"\"Renvoie True si la pile est vide, False sinon\"\"\"\nreturn self.valeurs == []\ndef empiler(self, c):\n\"\"\"Place l\u2019\u00e9l\u00e9ment c au sommet de la pile\"\"\"\nself.valeurs.append(c)\ndef depiler(self):\n\"\"\"Supprime l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, \u00e0 condition qu\u2019elle soit non vide\"\"\"\nif self.est_vide() == False:\nself.valeurs.pop()\ndef parenthesage(ch):\n\"\"\"Renvoie True si la cha\u00eene ch est bien parenth\u00e9s\u00e9e et False sinon\"\"\"\np = Pile()\nfor c in ch:\nif c == '(':\np.empiler(c)\nelif c == ')':\nif p.est_vide():\nreturn False\nelse:\np.depiler()\nreturn p.est_vide()\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/10_2/enonce/","title":"Enonce","text":"<p>On dispose de cha\u00eenes de caract\u00e8res contenant uniquement des parenth\u00e8ses ouvrantes et fermantes. </p> <p>Un parenth\u00e9sage est correct si :</p> <ul> <li>le nombre de parenth\u00e8ses ouvrantes de la cha\u00eene est \u00e9gal au nombre de parenth\u00e8ses fermantes.</li> <li>en parcourant la cha\u00eene de gauche \u00e0 droite, le nombre de parenth\u00e8ses d\u00e9j\u00e0 ouvertes doit \u00eatre, \u00e0 tout moment, sup\u00e9rieur ou \u00e9gal au nombre de parenth\u00e8ses d\u00e9j\u00e0 ferm\u00e9es.</li> </ul> <p>Ainsi, <code>((()())(()))</code> est un parenth\u00e9sage correct. </p> <p>Les parenth\u00e9sages <code>())(()</code> et <code>(())(()</code> sont, eux, incorrects.</p> <p>On dispose du code de la classe <code>Pile</code> suivant :</p> <pre><code>class Pile:\n\"\"\" Classe d\u00e9finissant une pile \"\"\"\ndef __init__(self):\nself.valeurs = []\ndef est_vide(self):\n\"\"\"Renvoie True si la pile est vide, False sinon\"\"\"\nreturn self.valeurs == []\ndef empiler(self, c):\n\"\"\"Place l\u2019\u00e9l\u00e9ment c au sommet de la pile\"\"\"\nself.valeurs.append(c)\ndef depiler(self):\n\"\"\"Supprime l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, \u00e0 condition qu\u2019elle soit non vide\"\"\"\nif self.est_vide() == False:\nself.valeurs.pop()\n</code></pre> <p>On souhaite programmer une fonction parenthesage qui prend en param\u00e8tre une cha\u00eene de caract\u00e8res <code>ch</code> form\u00e9e de parenth\u00e8ses et renvoie <code>True</code> si la cha\u00eene est bien parenth\u00e9s\u00e9e et <code>False</code> sinon.</p> <p>Cette fonction utilise une pile et suit le principe suivant : en parcourant la cha\u00eene de gauche \u00e0 droite, si on trouve une parenth\u00e8se ouvrante, on l\u2019empile au sommet de la pile et si on trouve une parenth\u00e8se fermante, on d\u00e9pile (si possible) la parenth\u00e8se ouvrante stock\u00e9e au sommet de la pile. </p> <p>La cha\u00eene est alors bien parenth\u00e9s\u00e9e si, \u00e0 la fin du parcours, la pile est vide. </p> <p>Elle est, par contre, mal parenth\u00e9s\u00e9e : </p> <ul> <li>si dans le parcours, on trouve une parenth\u00e8se fermante, alors que la pile est vide ;</li> <li>ou si, \u00e0 la fin du parcours, la pile n\u2019est pas vide.</li> </ul> <pre><code>def parenthesage(ch):\n\"\"\"Renvoie True si la cha\u00eene ch est bien parenth\u00e9s\u00e9e et False sinon\"\"\"\np = Pile()\nfor c in ch:\nif c == ...:\np.empiler(c)\nelif c == ...:\nif p.est_vide():\nreturn ...\nelse:\n...\nreturn p.est_vide()\n</code></pre> <p>Compl\u00e9ter le code de la fonction <code>parenthesage</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; parenthesage(\"((()())(()))\")\nTrue\n&gt;&gt;&gt; parenthesage(\"())(()\")\nFalse\n&gt;&gt;&gt; parenthesage(\"(())(()\")\nFalse\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/11_1/correction/","title":"Correction","text":"<pre><code>def convertir(tab):\npuissance = 0\ntotal = 0\nfor i in range(len(tab)-1, -1, -1):\ntotal += tab[i]*(2**puissance)\npuissance += 1\nreturn total\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/11_1/enonce/","title":"Enonce","text":"<p>On mod\u00e9lise la repr\u00e9sentation binaire d'un entier non sign\u00e9 par un tableau d'entiers dont les \u00e9l\u00e9ments sont 0 ou 1. Par exemple, le tableau <code>[1, 0, 1, 0, 0, 1, 1]</code> repr\u00e9sente l'\u00e9criture binaire de l'entier dont l'\u00e9criture d\u00e9cimale est <code>2**6 + 2**4 + 2**1 + 2**0 = 83</code>.</p> <p>\u00c0 l'aide d'un parcours s\u00e9quentiel, \u00e9crire la fonction <code>convertir</code> r\u00e9pondant aux sp\u00e9cifications suivantes :</p> <p></p><pre><code>def convertir(tab):\n\"\"\"\n    tab est un tableau d'entiers, dont les \u00e9l\u00e9ments sont 0 ou 1 et\n    repr\u00e9sentant un entier \u00e9crit en binaire. Renvoie l'\u00e9criture\n    d\u00e9cimale de l'entier positif dont la repr\u00e9sentation binaire\n    est donn\u00e9e par le tableau tab\n    \"\"\"\n</code></pre> Exemple : <pre><code>&gt;&gt;&gt; convertir([1, 0, 1, 0, 0, 1, 1])\n83\n&gt;&gt;&gt; convertir([1, 0, 0, 0, 0, 0, 1, 0])\n130\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/11_2/correction/","title":"Correction","text":"<pre><code>def tri_insertion(tab):\nn = len(tab)\nfor i in range(1, n):\nvaleur_insertion = tab[i]\n# la variable j sert \u00e0 d\u00e9terminer o\u00f9 placer la valeur \u00e0 ranger\nj = i\n# tant qu'on a pas trouv\u00e9 la place de l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer\n# on d\u00e9cale les valeurs du tableau vers la droite\nwhile j &gt; 0 and valeur_insertion &lt; tab[j-1]:\ntab[j] = tab[j-1]\nj = j - 1\ntab[j] = valeur_insertion\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/11_2/enonce/","title":"Enonce","text":"<p>La fonction <code>tri_insertion</code> suivante prend en argument une liste <code>tab</code> et trie cette liste en utilisant la m\u00e9thode du tri par insertion. Compl\u00e9ter cette fonction pour qu'elle r\u00e9ponde \u00e0 la sp\u00e9cification demand\u00e9e.</p> <p>On rappelle le principe du tri par insertion : on consid\u00e8re les \u00e9l\u00e9ments \u00e0 trier un par un, le premier \u00e9l\u00e9ment constituant, \u00e0 lui tout seul, une liste tri\u00e9e de longueur 1. On range ensuite le second \u00e9l\u00e9ment pour constituer une liste tri\u00e9e de longueur 2, puis on range le troisi\u00e8me \u00e9l\u00e9ment pour avoir une liste tri\u00e9e de longueur 3 et ainsi de suite\u2026 A chaque \u00e9tape, le premier \u00e9l\u00e9ment de la sous-liste non tri\u00e9e est plac\u00e9 dans la sous-liste des \u00e9l\u00e9ments d\u00e9j\u00e0 tri\u00e9s de sorte que cette sous-liste demeure tri\u00e9e.  </p> <p>Le principe du tri par insertion est donc d'ins\u00e9rer \u00e0 la n-i\u00e8me it\u00e9ration, le n-i\u00e8me \u00e9l\u00e9ment \u00e0 la bonne place.</p> <pre><code>def tri_insertion(tab):\nn = len(tab)\nfor i in range(1, n):\nvaleur_insertion = tab[...]\n# la variable j sert \u00e0 d\u00e9terminer o\u00f9 placer la valeur \u00e0 ranger\nj = ...\n# tant qu'on a pas trouv\u00e9 la place de l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer\n# on d\u00e9cale les valeurs du tableau vers la droite\nwhile j &gt; ... and valeur_insertion &lt; tab[...]:\ntab[j] = tab[j-1]\nj = ...\ntab[j] = ...\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; liste = [9, 5, 8, 4, 0, 2, 7, 1, 10, 3, 6]\n&gt;&gt;&gt; tri_insertion(liste)\n&gt;&gt;&gt; liste\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/12_1/correction/","title":"Correction","text":"<pre><code>def ajoute(cle, a): \nif a is None:\na = ABR(None, cle, None)\nelif cle &gt; a.cle:\na.droit = ajoute(cle, a.droit)\nelif cle &lt; a.cle:\na.gauche = ajoute(cle, a.gauche)\nreturn a\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/12_1/enonce/","title":"Enonce","text":"<p>On consid\u00e8re la classe <code>ABR</code>, dont le constructeur est le suivant :</p> <pre><code>class ABR:\ndef __init__(self, g0, v0, d0):\nself.gauche = g0\nself.cle = v0\nself.droit = d0\ndef __repr__(self):\nif self is None:\nreturn ''\nelse:\nreturn '(' + (self.gauche).__repr__() + ',' + str(self.cle) + ',' +(self.droit).__repr__() + ')'\n</code></pre> <p></p> <p>Ainsi, l\u2019arbre binaire de recherche <code>abr1</code> ci- contre est cr\u00e9\u00e9 par le code python ci- dessous</p> <pre><code>n0 = ABR(None, 0, None)\nn3 = ABR(None, 3, None)\nn2 = ABR(None, 2, n3)\nn3 = ABR(n0, 1, n2)\n</code></pre> <p>Dans tout le code, <code>None</code> correspondra \u00e0 un arbre vide.</p> <p>La classe <code>ABR</code> dispose aussi d\u2019une m\u00e9thode de repr\u00e9sentation (<code>__repr__</code> ), qui affiche entre parenth\u00e8ses le contenu du sous arbre gauche, puis la cl\u00e9 de l\u2019arbre, et enfin le contenu du sous arbre droit. Elle s\u2019utilise en console de la mani\u00e8re suivante :</p> <pre><code>&gt;&gt;&gt; abr1\n((None,0,None),1,(None,2,(None,3,None)))\n</code></pre> <p>\u00c9crire une fonction r\u00e9cursive <code>ajoute(cle, a)</code> qui prend en param\u00e8tres une cl\u00e9 <code>cle</code> et un arbre binaire de recherche <code>a</code>  , et qui renvoie un arbre binaire de recherche dans lequel <code>cle</code> a \u00e9t\u00e9 ins\u00e9r\u00e9e. Dans le cas o\u00f9 <code>cle</code> est d\u00e9j\u00e0 pr\u00e9sente dans <code>a</code>, la fonction renvoie l\u2019arbre <code>a</code> inchang\u00e9.</p> <p>R\u00e9sultats \u00e0 obtenir :</p> <pre><code>&gt;&gt;&gt; a = ajoute(4, abr1)\n&gt;&gt;&gt; a\n((None,0,None),1,(None,2,(None,3,(None,4,None))))\n&gt;&gt;&gt; ajoute(-5, abr1)\n(((None,-5,None),0,None),1,(None,2,(None,3,None)))\n&gt;&gt;&gt; ajoute(2, abr1)\n((None,0,None),1,(None,2,(None,3,None)))\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/12_2/correction/","title":"Correction","text":"<pre><code>def empaqueterR(liste_masses, c):\nn = len(liste_masses)\nnb_boites = 0\nboites = [0]*n\nfor masse in liste_masses :\ni = 0\nwhile i &lt;= nb_boites and boites[i] + masse &gt; c:\ni = i + 1\nif i == nb_boites + 1:\nnb_boites = nb_boites + 1\nboites[i] = boites[i] + masse\nreturn nb_boites + 1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/12_2/enonce/","title":"Enonce","text":"<p>On dispose d\u2019un ensemble d\u2019objets dont on conna\u00eet, pour chacun, la masse. On souhaite ranger l\u2019ensemble de ces objets dans des boites identiques de telle mani\u00e8re que la somme des masses des objets contenus dans une bo\u00eete ne d\u00e9passe pas la capacit\u00e9 <code>c</code> de la bo\u00eete. On souhaite utiliser le moins de bo\u00eetes possibles pour ranger cet ensemble d\u2019objets.</p> <p>Pour r\u00e9soudre ce probl\u00e8me, on utilisera un algorithme glouton consistant \u00e0 placer chacun des objets dans la premi\u00e8re bo\u00eete o\u00f9 cela est possible.</p> <p>Par exemple, pour ranger dans des bo\u00eetes de capacit\u00e9 <code>c = 5</code> un ensemble de trois objets dont les masses sont repr\u00e9sent\u00e9es en Python par la liste <code>[1, 5, 2]</code>, on proc\u00e8de de la fa\u00e7on suivante :</p> <ul> <li>Le premier objet, de masse 1, va dans une premi\u00e8re boite.</li> <li>Le deuxi\u00e8me objet, de masse 5, ne peut pas aller dans la m\u00eame boite que le premier objet car cela d\u00e9passerait la capacit\u00e9 de la boite. On place donc cet objet dans une deuxi\u00e8me bo\u00eete.</li> <li>Le troisi\u00e8me objet, de masse 2, va dans la premi\u00e8re bo\u00eete.</li> </ul> <p>On a donc utilis\u00e9 deux bo\u00eetes de capacit\u00e9 <code>c = 5</code> pour ranger les 3 objets.</p> <p>Compl\u00e9ter la fonction Python <code>empaqueter(liste_masses, c)</code> suivante pour qu\u2019elle renvoie le nombre de bo\u00eetes de capacit\u00e9 c n\u00e9cessaires pour empaqueter un ensemble d\u2019objets dont les masses sont contenues dans la liste <code>liste_masses</code>.</p> <pre><code>def empaqueter(liste_masses, c):\nn = len(liste_masses)\nnb_boites = 0\nboites = [0]*n\nfor masse in ... :\ni = 0\nwhile i &lt;= nb_boites and boites[i] + ... &gt; C:\ni = i + 1\nif i == nb_boites + 1:\n...\nboites[i] = ...\nreturn ...\n</code></pre> <p>Tester ensuite votre fonction : </p><pre><code>&gt;&gt;&gt; empaqueter([7, 6, 3, 4, 8, 5, 9, 2], 11)\n5\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/13_1/correction/","title":"Correction","text":"<pre><code>def recherche(a, tab):\nnb = 0\nfor element in tab:\nif element == a:\nnb += 1\nreturn nb\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/13_1/enonce/","title":"Enonce","text":"<p>\u00c9crire en langage Python une fonction <code>recherche</code> prenant comme param\u00e8tres une variable <code>a</code> de type num\u00e9rique (<code>float</code> ou <code>int</code>) et un tableau <code>tab</code> (type <code>list</code>) et qui renvoie le nombre d'occurrences de <code>a</code> dans <code>tab</code>.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche(5, [])\n0\n&gt;&gt;&gt; recherche(5, [-2, 3, 4, 8])\n0\n&gt;&gt;&gt; recherche(5, [-2, 3, 1, 5, 3, 7, 4])\n1\n&gt;&gt;&gt; recherche(5, [-2, 5, 3, 5, 4, 5])\n3\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/13_2/correction/","title":"Correction","text":"<pre><code>def rendu_monnaie(somme_due, somme_versee):\npieces = [1, 2, 5, 10, 20, 50, 100, 200]\nrendu = []\na_rendre = somme_versee - somme_due\ni = len(pieces) - 1\nwhile a_rendre &gt; 0 :\nif pieces[i] &lt;= a_rendre :\nrendu.append(pieces[i])\na_rendre = a_rendre - pieces[i]\nelse :\ni = i - 1\nreturn rendu\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/13_2/enonce/","title":"Enonce","text":"<p>La fonction <code>rendu_monnaie</code> prend en param\u00e8tres deux nombres entiers positifs <code>somme_due</code> et <code>somme_versee</code> et elle permet de proc\u00e9der au rendu de monnaie de la diff\u00e9rence <code>somme_versee \u2013 somme_due</code> pour des achats effectu\u00e9s avec le syst\u00e8me de pi\u00e8ces de la zone Euro. On utilise pour cela un algorithme glouton qui commence par rendre le maximum de pi\u00e8ces de plus grandes valeurs et ainsi de suite. Par la suite, on assimilera les billets \u00e0 des pi\u00e8ces.</p> <p>La fonction <code>rendu_monnaie</code> renvoie un tableau de type <code>list</code> contenant les pi\u00e8ces qui composent le rendu.</p> <p>Toutes les sommes sont exprim\u00e9es en euros. Les valeurs possibles pour les pi\u00e8ces sont donc <code>[1, 2, 5, 10, 20, 50, 100, 200]</code>.</p> <p>Ainsi, l\u2019instruction <code>rendu_monnaie(452, 500)</code> renvoie le tableau <code>[20, 20, 5, 2, 1]</code>.</p> <p>En effet, la somme \u00e0 rendre est de <code>48</code> euros soit <code>20 + 20 + 5 + 2 + 1</code>.</p> <p>Le code de la fonction <code>rendu_monnaie</code> est donn\u00e9 ci-dessous :</p> <pre><code>def rendu_monnaie(somme_due, somme_versee):\npieces = [1, 2, 5, 10, 20, 50, 100, 200]\nrendu = ...\na_rendre = ...\ni = len(pieces) - 1\nwhile a_rendre &gt; ... :\nif pieces[i] &lt;= a_rendre :\nrendu.append(...)\na_rendre = ...\nelse :\ni = ...\nreturn rendu\n</code></pre> <p>Compl\u00e9ter ce code et le tester : </p><pre><code>&gt;&gt;&gt; rendu_monnaie(700,700)\n[]\n&gt;&gt;&gt; rendu_monnaie(102,500)\n[200, 100, 50, 20, 20, 5, 2, 1]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/14_1/correction/","title":"Correction","text":"<pre><code>def recherche(elt, tab):\n'''\n    renvoie l\u2019indice de la premi\u00e8re occurrence de\n    elt dans tab si elt est dans tab et -1 sinon. \n    '''\nassert tab != [], \"le tableau est vide\"\nfor i in range(len(tab)):\nif tab[i] == elt:\nreturn i        \nreturn -1         \n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/14_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres <code>elt</code> un nombre entier et <code>tab</code> un tableau de nombres entiers, et qui renvoie l\u2019indice de la premi\u00e8re occurrence de <code>elt</code> dans <code>tab</code> si <code>elt</code> est dans <code>tab</code> et <code>-1</code> sinon.</p> <p>Ne pas oublier d\u2019ajouter au corps de la fonction une documentation et une ou plusieurs assertions pour v\u00e9rifier les pr\u00e9-conditions.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche(1, [2, 3, 4])\n-1\n&gt;&gt;&gt; recherche(1, [10, 12, 1, 56])\n2\n&gt;&gt;&gt; recherche(50, [1, 50, 1])\n1\n&gt;&gt;&gt; recherche(15, [8, 9, 10, 15])\n3\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/14_2/correction/","title":"Correction","text":"<pre><code>def insere(a, tab):\n\"\"\"\n    Ins\u00e8re l'\u00e9l\u00e9ment a (int) dans le tableau tab (list)\n    tri\u00e9 par ordre croissant \u00e0 sa place et renvoie le\n    nouveau tableau.\n    \"\"\"\nl = list(tab) #l contient les m\u00eames \u00e9l\u00e9ments que tab\nl.append(a)\ni = len(l) - 2\nwhile a &lt; l[i] and i &gt;= 0:\nl[i+1] = l[i]\nl[i] = a\ni = i - 1\nreturn l\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/14_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re la fonction <code>insere</code> ci-dessous qui prend en argument un entier <code>a</code> et un tableau <code>tab</code> d'entiers tri\u00e9s par ordre croissant. Cette fonction cr\u00e9e et renvoie un nouveau tableau \u00e0 partir de celui fourni en param\u00e8tre en y ins\u00e9rant la valeur <code>a</code> de sorte que le tableau renvoy\u00e9 soit encore tri\u00e9 par ordre croissant. Les tableaux seront repr\u00e9sent\u00e9s sous la forme de listes Python.</p> <pre><code>def insere(a, tab):\n\"\"\"\n    Ins\u00e8re l'\u00e9l\u00e9ment a (int) dans le tableau tab (list)\n    tri\u00e9 par ordre croissant \u00e0 sa place et renvoie le\n    nouveau tableau.\n    \"\"\"\nl = list(tab) #l contient les m\u00eames \u00e9l\u00e9ments que tab\nl.append(a)\ni = ...\nwhile a &lt; ... and i &gt;= 0:\nl[i+1] = ...\nl[i] = a\ni = ...\nreturn l\n</code></pre> <p>Compl\u00e9ter la fonction <code>insere</code> ci-dessus.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; insere(3, [1, 2, 4, 5])\n[1, 2, 3, 4, 5]\n&gt;&gt;&gt; insere(30, [1, 2, 7, 12, 14, 25])\n[1, 2, 7, 12, 14, 25, 30]\n&gt;&gt;&gt; insere(1, [2, 3, 4])\n[1, 2, 3, 4]\n&gt;&gt;&gt; insere(1, [])\n[1]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/15_1/correction/","title":"Correction","text":"<pre><code>t_moy = [14.9, 13.3, 13.1, 12.5, 13.0, 13.6, 13.7]\nannees = [2013, 2014, 2015, 2016, 2017, 2018, 2019]\ndef mini(releve, date):\ntemp_mini = releve[0]\ndate_mini = date[0]\nfor i in range(len(releve)):\nif releve[i] &lt; temp_mini:\ntemp_mini = releve[i]\ndate_mini = date[i]\nreturn temp_mini, date_mini\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/15_1/enonce/","title":"Enonce","text":"<p>On a relev\u00e9 les valeurs moyennes annuelles des temp\u00e9ratures \u00e0 Paris pour la p\u00e9riode allant de 2013 \u00e0 2019. Les r\u00e9sultats ont \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9s sous la forme de deux listes : l\u2019une pour les temp\u00e9ratures, l\u2019autre pour les ann\u00e9es : </p><pre><code>t_moy = [14.9, 13.3, 13.1, 12.5, 13.0, 13.6, 13.7]\nannees = [2013, 2014, 2015, 2016, 2017, 2018, 2019]\n</code></pre> <p>\u00c9crire la fonction <code>mini</code> qui prend en param\u00e8tres un tableau <code>releve</code> des relev\u00e9s et un tableau <code>date</code> des dates et qui renvoie la plus petite valeur relev\u00e9e au cours de la p\u00e9riode et l\u2019ann\u00e9e correspondante. On suppose que la temp\u00e9rature minimale est atteinte une seule fois.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; mini(t_moy, annees)\n(12.5, 2016)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/15_2/correction/","title":"Correction","text":"<pre><code>def inverse_chaine(chaine):\nresult = ''\nfor caractere in chaine:\nresult = caractere + result\nreturn result\ndef est_palindrome(chaine):\ninverse = inverse_chaine(chaine)\nreturn chaine == inverse\ndef est_nbre_palindrome(nbre):\nchaine = str(nbre)\nreturn est_palindrome(chaine)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/15_2/enonce/","title":"Enonce","text":"<p>Un mot palindrome peut se lire de la m\u00eame fa\u00e7on de gauche \u00e0 droite ou de droite \u00e0 gauche : bob, radar, et non sont des mots palindromes.</p> <p>De m\u00eame certains nombres sont eux aussi des palindromes : 33, 121, 345543.</p> <p>L\u2019objectif de cet exercice est d\u2019obtenir un programme Python permettant de tester si un nombre est un nombre palindrome.</p> <p>Pour remplir cette t\u00e2che, on vous demande de compl\u00e9ter le code des trois fonctions ci- dessous sachant que la fonction <code>est_nbre_palindrome</code> s\u2019appuiera sur la fonction <code>est_palindrome</code> qui elle-m\u00eame s\u2019appuiera sur la fonction <code>inverse_chaine</code>.</p> <p>La fonction <code>inverse_chaine</code> inverse l'ordre des caract\u00e8res d'une cha\u00eene de caract\u00e8res <code>chaine</code> et renvoie la cha\u00eene invers\u00e9e.</p> <p>La fonction <code>est_palindrome</code> teste si une chaine de caract\u00e8res <code>chaine</code> est un palindrome. Elle renvoie <code>True</code> si c\u2019est le cas et <code>False</code> sinon. Cette fonction s\u2019appuie sur la fonction pr\u00e9c\u00e9dente.</p> <p>La fonction <code>est_nbre_palindrome</code> teste si un nombre <code>nbre</code> est un palindrome. Elle renvoie <code>True</code> si c\u2019est le cas et <code>False</code> sinon. Cette fonction s\u2019appuie sur la fonction pr\u00e9c\u00e9dente.</p> <p>Compl\u00e9ter le code des trois fonctions ci-dessous.</p> <p></p><pre><code>def inverse_chaine(chaine):\nresult = ...\nfor caractere in chaine:\nresult = ...\nreturn result\ndef est_palindrome(chaine):\ninverse = inverse_chaine(chaine)\nreturn ...\ndef est_nbre_palindrome(nbre):\nchaine = ...\nreturn est_palindrome(chaine)\n</code></pre> Exemples : <pre><code>&gt;&gt;&gt; inverse_chaine('bac')\n'cab'\n&gt;&gt;&gt; est_palindrome('NSI')\nFalse\n&gt;&gt;&gt; est_palindrome('ISN-NSI')\nTrue\n&gt;&gt;&gt; est_nbre_palindrome(214312)\nFalse\n&gt;&gt;&gt; est_nbre_palindrome(213312)\nTrue\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/16_1/correction/","title":"Correction","text":"<pre><code>def recherche_indices_classement(elt, tab):\nind_inf = []\nind_egal = []\nind_sup = [] \nfor i in range(len(tab)):\nif tab[i] &lt; elt:\nind_inf.append(i)\nelif tab[i] &gt; elt:\nind_sup.append(i)\nelse:\nind_egal.append(i)\nreturn (ind_inf, ind_egal, ind_sup)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/16_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>recherche_indices_classement</code> qui prend en param\u00e8tres un entier <code>elt</code> et une liste d\u2019entiers <code>tab</code>, et qui renvoie trois listes :</p> <ul> <li>la premi\u00e8re liste contient les indices des valeurs de la liste <code>tab</code> strictement inf\u00e9rieures \u00e0 <code>elt</code> ;</li> <li>la deuxi\u00e8me liste contient les indices des valeurs de la liste <code>tab</code> \u00e9gales \u00e0 <code>elt</code> ;</li> <li>la troisi\u00e8me liste contient les indices des valeurs de la liste <code>tab</code> strictement sup\u00e9rieures \u00e0 <code>elt</code>.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; recherche_indices_classement(3, [1, 3, 4, 2, 4, 6, 3, 0])\n([0, 3, 7], [1, 6], [2, 4, 5])\n&gt;&gt;&gt; recherche_indices_classement(3, [1, 4, 2, 4, 6, 0])\n([0, 2, 5], [], [1, 3, 4])\n&gt;&gt;&gt;recherche_indices_classement(3, [1, 1, 1, 1])\n([0, 1, 2, 3], [], [])\n&gt;&gt;&gt; recherche_indices_classement(3, [])\n([], [], [])\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/16_2/correction/","title":"Correction","text":"<pre><code>def moyenne(nom, dico_result):\nif nom in dico_result:\nnotes = dico_result[nom]\ntotal_points = 0.\ntotal_coefficients = 0\nfor valeurs  in notes.values():\nnote, coefficient = valeurs\ntotal_points = total_points + note * coefficient\ntotal_coefficients = total_coefficients + coefficient\nreturn round( total_points / total_coefficients, 1 )\nelse:\nreturn -1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/16_2/enonce/","title":"Enonce","text":"<p>Un professeur de NSI d\u00e9cide de g\u00e9rer les r\u00e9sultats de sa classe sous la forme d\u2019un dictionnaire :</p> <ul> <li>les clefs sont les noms des \u00e9l\u00e8ves ;</li> <li>les valeurs sont des dictionnaires dont les clefs sont les types d\u2019\u00e9preuves sous forme de cha\u00eene de caract\u00e8res et les valeurs sont les notes obtenues associ\u00e9es \u00e0 leurs coefficients dans une liste.</li> </ul> <p>Avec :</p> <pre><code>resultats = {'Dupont': {\n'DS1': [15.5, 4],\n'DM1': [14.5, 1],\n'DS2': [13, 4],\n'PROJET1': [16, 3],\n'DS3': [14, 4]\n},\n'Durand': {\n'DS1': [6 , 4],\n'DM1': [14.5, 1],\n'DS2': [8, 4],\n'PROJET1': [9, 3],\n'IE1': [7, 2],\n'DS3': [8, 4],\n'DS4':[15, 4]\n}\n}\n</code></pre> <p>L\u2019\u00e9l\u00e8ve dont le nom est Durand a ainsi obtenu au DS2 la note de 8 avec un coefficient 4.</p> <p>Le professeur cr\u00e9e une fonction <code>moyenne</code> qui prend en param\u00e8tre le nom d\u2019un de ses \u00e9l\u00e8ves et renvoie sa moyenne arrondie au dixi\u00e8me.</p> <p>Compl\u00e9ter le code du professeur ci-dessous :</p> <pre><code>def moyenne(nom, dico_result):\nif nom in ...:\nnotes = dico_result[nom]\ntotal_points = ...\ntotal_coefficients = ...\nfor ...  in notes.values():\nnote, coefficient = valeurs\ntotal_points = total_points + ... * coefficient\ntotal_coefficients = ... + coefficient\nreturn round( ... / total_coefficients, 1 )\nelse:\nreturn -1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/17_1/correction/","title":"Correction","text":"<pre><code>def moyenne(liste_notes):\nsomme_notes = 0\nsomme_coeffs = 0\nfor devoir in liste_notes:\nnote = devoir[0]\ncoeff = devoir[1]\nsomme_notes += note * coeff\nsomme_coeffs += coeff\nreturn somme_notes / somme_coeffs\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/17_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>moyenne(liste_notes)</code> qui renvoie la moyenne pond\u00e9r\u00e9e des r\u00e9sultats contenus dans la liste <code>liste_notes</code>, non vide, donn\u00e9e en param\u00e8tre. Cette liste contient des couples <code>(note, coefficient)</code> dans lesquels :</p> <ul> <li><code>note</code> est un nombre de type flottant (<code>float</code>) compris entre 0 et 20 ;</li> <li><code>coefficient</code> est un nombre entier strictement positif.</li> </ul> <p>Ainsi l\u2019expression <code>moyenne([(15,2),(9,1),(12,3)])</code> devra renvoyer <code>12.5</code>.</p> <p>\\(\\dfrac{2 \\times 15 + 1 \\times 9 + 3 \\times 12 }{2+1+3}=12,5\\)</p>"},{"location":"assets/sujets/nsi/term/pratique/17_2/correction/","title":"Correction","text":"<pre><code>def pascal(n):\ntriangle = [[1]]\nfor k in range(1, n+1):\nligne_k = [1]\nfor i in range(1, k):\nligne_k.append(triangle[k-1][i-1] + triangle[k-1][i])\nligne_k.append(1)\ntriangle.append(ligne_k)\nreturn triangle\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/17_2/enonce/","title":"Enonce","text":"<p>On cherche \u00e0 d\u00e9terminer les valeurs du triangle de Pascal (Figure 1).</p> <p>Dans le triangle de Pascal, chaque ligne commence et se termine par le nombre 1. Comme l\u2019illustre la Figure 2, on additionne deux valeurs successives d\u2019une ligne pour obtenir la valeur qui se situe sous la deuxi\u00e8me valeur.</p> <p></p> <p>Compl\u00e9ter la fonction <code>pascal</code> ci-apr\u00e8s prenant en param\u00e8tre un entier <code>n</code> sup\u00e9rieur ou \u00e9gal \u00e0 2. Cette fonction doit renvoyer une liste correspondant au triangle de Pascal de la ligne 0 \u00e0 la ligne <code>n</code>. Le tableau repr\u00e9sentant le triangle de Pascal sera contenu dans la variable <code>triangle</code>.</p> <pre><code>def pascal(n):\ntriangle = [[1]]\nfor k in range(1,...):\nligne_k = [...]\nfor i in range(1,k):\nligne_k.append(triangle[...][i-1]+triangle[...][...])\nligne_k.append(...)\ntriangle.append(ligne_k)\nreturn triangle\n</code></pre> <p>Pour <code>n = 4</code>, voici ce qu'on devra obtenir : </p><pre><code>&gt;&gt;&gt; pascal(4)\n[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n</code></pre> Pour <code>n = 5</code>, voici ce qu'on devra obtenir : <pre><code>&gt;&gt;&gt; pascal(5)\n[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/18_1/correction/","title":"Correction","text":"<pre><code>def max_et_indice(tab):\n'''\n    renvoie la valeur du plus grand \u00e9l\u00e9ment de cette liste ainsi\n    que l\u2019indice de sa premi\u00e8re apparition dans cette liste.\n    '''\nassert tab != [], 'le tableau est vide'\nval_max = tab[0]\nind_max = 0\nfor i in range(len(tab)):\nif tab[i] &gt; val_max:\nval_max = tab[i]\nind_max = i\nreturn (val_max, ind_max)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/18_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>max_et_indice</code> qui prend en param\u00e8tre une liste non vide <code>tab</code> de nombres entiers et qui renvoie la valeur du plus grand \u00e9l\u00e9ment de cette liste ainsi que l\u2019indice de sa premi\u00e8re apparition dans cette liste.</p> <p>L\u2019utilisation de la fonction native <code>max</code> n\u2019est pas autoris\u00e9e.</p> <p>Ne pas oublier d\u2019ajouter au corps de la fonction une documentation et une ou plusieurs assertions pour v\u00e9rifier les pr\u00e9-conditions.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; max_et_indice([1, 5, 6, 9, 1, 2, 3, 7, 9, 8])\n(9, 3)\n&gt;&gt;&gt; max_et_indice([-2])\n(-2, 0)\n&gt;&gt;&gt; max_et_indice([-1, -1, 3, 3, 3])\n(3, 2)\n&gt;&gt;&gt; max_et_indice([1, 1, 1, 1])\n(1, 0)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/18_2/correction/","title":"Correction","text":"<pre><code>def est_un_ordre(tab):\n'''\n    Renvoie True si tab est de longueur n et contient tous les entiers\n    de 1 \u00e0 n, False sinon\n    '''\nfor i in range(1, len(tab)+1):\nif i not in tab:\nreturn False\nreturn True\ndef nombre_points_rupture(ordre):\n'''\n    Renvoie le nombre de point de rupture de ordre qui repr\u00e9sente un ordre\n    de g\u00e8nes de chromosome\n    '''\nassert est_un_ordre(ordre) # ordre n'est pas un ordre de g\u00e8nes\nn = len(ordre)\nnb = 0\nif ordre[0] != 1: # le premier n'est pas 1\nnb = nb + 1\ni = 0\nwhile i &lt; n-1:\nif ordre[i+1] - ordre[i] not in [-1, 1]: # l'\u00e9cart n'est pas 1\nnb = nb + 1\ni = i + 1\nif ordre[n-1] != n: # le dernier n'est pas n\nnb = nb + 1\nreturn nb\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/18_2/enonce/","title":"Enonce","text":"<p>L\u2019ordre des g\u00e8nes sur un chromosome est repr\u00e9sent\u00e9 par un tableau <code>ordre</code> de <code>n</code> cases d\u2019entiers distincts deux \u00e0 deux et compris entre 1 et <code>n</code>.</p> <p>Par exemple, <code>ordre = [5, 4, 3, 6, 7, 2, 1, 8, 9]</code> dans le cas <code>n = 9</code>.</p> <p>On dit qu\u2019il y a un point de rupture dans <code>ordre</code> dans chacune des situations suivantes :</p> <ul> <li>la premi\u00e8re valeur de <code>ordre</code> n\u2019est pas 1 ;</li> <li>l\u2019\u00e9cart entre deux g\u00e8nes cons\u00e9cutifs n\u2019est pas \u00e9gal \u00e0 1 ;</li> <li>la derni\u00e8re valeur de <code>ordre</code> n\u2019est pas n.</li> </ul> <p>Par exemple, si <code>ordre = [5, 4, 3, 6, 7, 2, 1, 8, 9]</code> avec <code>n = 9</code>, on a</p> <ul> <li>un point de rupture au d\u00e9but car 5 est diff\u00e9rent de 1</li> <li>un point de rupture entre 3 et 6 (l\u2019\u00e9cart est de 3)</li> <li>un point de rupture entre 7 et 2 (l\u2019\u00e9cart est de 5)</li> <li>un point de rupture entre 1 et 8 (l\u2019\u00e9cart est de 7)</li> </ul> <p>Il y a donc 4 points de rupture.</p> <p>Compl\u00e9ter les fonctions Python <code>est_un_ordre</code> et <code>nombre_points_rupture</code> propos\u00e9es \u00e0 la page suivante pour que :</p> <ul> <li> <p>la fonction <code>est_un_ordre</code> renvoie <code>True</code> si le tableau pass\u00e9 en param\u00e8tre repr\u00e9sente bien un ordre de g\u00e8nes de chromosome et <code>False</code> sinon ;</p> </li> <li> <p>la fonction <code>nombre_points_rupture</code> renvoie le nombre de points de rupture d\u2019un tableau pass\u00e9 en param\u00e8tre repr\u00e9sentant l\u2019ordre de g\u00e8nes d\u2019un chromosome.</p> </li> </ul> <pre><code>def est_un_ordre(tab):\n'''\n    Renvoie True si tab est de longueur n et contient tous les entiers\n    de 1 \u00e0 n, False sinon\n    '''\nfor i in range(1,...):\nif ...:\nreturn False\nreturn True\ndef nombre_points_rupture(ordre):\n'''\n    Renvoie le nombre de point de rupture de ordre qui repr\u00e9sente un ordre\n    de g\u00e8nes de chromosome\n    '''\nassert ... # ordre n'est pas un ordre de g\u00e8nes\nn = len(ordre)\nnb = 0\nif ordre[...] != 1: # le premier n'est pas 1\nnb = nb + 1\ni = 0\nwhile i &lt; ...:\nif ... not in [-1, 1]: # l'\u00e9cart n'est pas 1\nnb = nb + 1\ni = i + 1\nif ordre[...] != n: # le dernier n'est pas n\nnb = nb + 1\nreturn nb\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; est_un_ordre([1, 6, 2, 8, 3, 7])\nFalse\n&gt;&gt;&gt; est_un_ordre([5, 4, 3, 6, 7, 2, 1, 8, 9])\nTrue\n&gt;&gt;&gt; nombre_points_rupture([5, 4, 3, 6, 7, 2, 1, 8, 9])\n4\n&gt;&gt;&gt; nombre_points_rupture([1, 2, 3, 4, 5])\n0\n&gt;&gt;&gt; nombre_points_rupture([1, 6, 2, 8, 3, 7, 4, 5])\n7\n&gt;&gt;&gt; nombre_points_rupture([2, 1, 3, 4])\n2\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/19_1/correction/","title":"Correction","text":"<pre><code>def recherche(tab, n):\nind_debut = 0\nind_fin = len(tab) - 1\nwhile ind_debut &lt;= ind_fin:\nind_milieu = (ind_debut + ind_fin) // 2\nif tab[ind_milieu] == n:\nreturn ind_milieu\nelif tab[ind_milieu] &lt; n:\nind_debut = ind_milieu + 1\nelse:\nind_fin = ind_milieu - 1\nreturn -1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/19_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres un tableau <code>tab</code> de nombres entiers tri\u00e9s par ordre croissant et un nombre entier <code>n</code>, et qui effectue une recherche dichotomique du nombre entier <code>n</code> dans le tableau non vide <code>tab</code>.</p> <p>Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, <code>-1</code> sinon.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche([2, 3, 4, 5, 6], 5)\n3\n&gt;&gt;&gt; recherche([2, 3, 4, 6, 7], 5)\n-1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/19_2/correction/","title":"Correction","text":"<pre><code>ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\ndef position_alphabet(lettre):\nreturn ord(lettre) - ord('A')\ndef cesar(message, decalage):\nresultat = ''\nfor c in message:\nif 'A' &lt;= c and c &lt;= 'Z':\nindice = (position_alphabet(c) + decalage) % 26\nresultat = resultat + ALPHABET[indice]\nelse:\nresultat = resultat + c\nreturn resultat\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/19_2/enonce/","title":"Enonce","text":"<p>Le codage de C\u00e9sar transforme un message en changeant chaque lettre en la d\u00e9calant dans l\u2019alphabet. Par exemple, avec un d\u00e9calage de 3, le A se transforme en D, le B en E, ..., le X en A, le Y en B et le Z en C. Les autres caract\u00e8res (\u2018!\u2019,\u2019 ?\u2019 ...) ne sont pas cod\u00e9s.</p> <p>La fonction <code>position_alphabet</code> ci-dessous prend en param\u00e8tre un caract\u00e8re <code>lettre</code> et renvoie la position de <code>lettre</code> dans la cha\u00eene de caract\u00e8res <code>ALPHABET</code> s\u2019il s\u2019y trouve.</p> <p>La fonction <code>cesar</code> prend en param\u00e8tre une cha\u00eene de caract\u00e8res <code>message</code> et un nombre entier <code>decalage</code> et renvoie le nouveau message cod\u00e9 avec le codage de C\u00e9sar utilisant le d\u00e9calage <code>decalage</code>.</p> <pre><code>ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\ndef position_alphabet(lettre):\nreturn ord(lettre) - ord('A')\ndef cesar(message, decalage):\nresultat = ''\nfor ... in message:\nif 'A' &lt;= c and c &lt;= 'Z':\nindice = ( ... ) % 26\nresultat = resultat + ALPHABET[indice]\nelse:\nresultat = ...\nreturn resultat\n</code></pre> <p>Compl\u00e9ter la fonction <code>cesar</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; cesar('BONJOUR A TOUS. VIVE LA MATIERE NSI !', 4)\n'FSRNSYV E XSYW. ZMZI PE QEXMIVI RWM !'\n&gt;&gt;&gt; cesar('GTSOTZW F YTZX. ANAJ QF RFYNJWJ SXN !', -5)\n'BONJOUR A TOUS. VIVE LA MATIERE NSI !'\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/20_1/correction/","title":"Correction","text":"<pre><code>def ajoute_dictionnaires(d1, d2):\nfor cle in d2:\nif cle in d1:\nd1[cle] += d2[cle]\nelse:\nd1[cle] = d2[cle]\nreturn d1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/20_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>ajoute_dictionnaires</code> qui prend en param\u00e8tres deux dictionnaires <code>d1</code> et <code>d2</code> dont les cl\u00e9s sont des nombres et renvoie le dictionnaire <code>d</code> d\u00e9fini de la fa\u00e7on suivante :</p> <ul> <li>Les cl\u00e9s de <code>d</code> sont celles de <code>d1</code> et celles de <code>d2</code> r\u00e9unies.</li> <li>Si une cl\u00e9 est pr\u00e9sente dans les deux dictionnaires <code>d1</code> et <code>d2</code>, sa valeur associ\u00e9e dans le dictionnaire d est la somme de ses valeurs dans les dictionnaires <code>d1</code> et <code>d2</code>.</li> <li>Si une cl\u00e9 n\u2019est pr\u00e9sente que dans un des deux dictionnaires, sa valeur associ\u00e9e dans le dictionnaire <code>d</code> est la m\u00eame que sa valeur dans le dictionnaire o\u00f9 elle est pr\u00e9sente.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; ajoute_dictionnaires({1: 5, 2: 7}, {2: 9, 3: 11})\n{1: 5, 2: 16, 3: 11}\n&gt;&gt;&gt; ajoute_dictionnaires({}, {2: 9, 3: 11})\n{2: 9, 3: 11}\n&gt;&gt;&gt; ajoute_dictionnaires({1: 5, 2: 7}, {})\n{1: 5, 2: 7}\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/20_2/correction/","title":"Correction","text":"<pre><code>from random import randint\ndef nbre_coups():\nn = 0\ncases_vues = [0]\ncase_en_cours = 0\nnbre_cases = 12\nwhile len(cases_vues) &lt; nbre_cases:\nx = randint(1, 6)\ncase_en_cours = (case_en_cours + x) % nbre_cases\nif case_en_cours not in cases_vues:\ncases_vues.append(case_en_cours)\nn = n + 1\nreturn n\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/20_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re une piste carr\u00e9e qui contient 4 cases par c\u00f4t\u00e9. Les cases sont num\u00e9rot\u00e9es de 0 inclus \u00e0 12 exclu comme ci-dessous :</p> <p></p> <p>L\u2019objectif de l\u2019exercice est d\u2019impl\u00e9menter le jeu suivant :</p> <p>Au d\u00e9part, le joueur place son pion sur la case 0. A chaque coup, il lance un d\u00e9 \u00e9quilibr\u00e9 \u00e0 six faces et avance son pion d\u2019autant de cases que le nombre indiqu\u00e9 par le d\u00e9 (entre 1 et 6 inclus) dans le sens des aiguilles d\u2019une montre.</p> <p>Par exemple, s\u2019il obtient 2 au premier lancer, il pose son pion sur la case 2 puis s\u2019il obtient 6 au deuxi\u00e8me lancer, il le pose sur la case 8, puis s\u2019il obtient \u00e0 nouveau 6, il pose le pion sur la case 2.</p> <p>Le jeu se termine lorsque le joueur a pos\u00e9 son pion sur toutes les cases de la piste.</p> <p>Compl\u00e9ter la fonction <code>nbre_coups</code> ci-dessous de sorte qu\u2019elle renvoie le nombre de lancers al\u00e9atoires n\u00e9cessaires pour terminer le jeu.</p> <p>Proposer ensuite quelques tests pour en v\u00e9rifier le fonctionnement.</p> <pre><code>from random import randint\ndef nbre_coups():\nn = ...\ncases_vues = [0]\ncase_en_cours = 0\nnbre_cases = 12\nwhile ... &lt; ...:\nx = randint(1, 6)\ncase_en_cours = (case_en_cours + ...) % ...\nif ...:\ncases_vues.append(case_en_cours)\nn = ...\nreturn n\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/21_1/correction/","title":"Correction","text":"<pre><code>def delta(tab):\ndiff = [tab[0]]\nfor i in range(1, len(tab)):\ndiff.append(tab[i] - tab[i-1])\nreturn diff\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/21_1/enonce/","title":"Enonce","text":"<p>Le codage par diff\u00e9rence (delta encoding en anglais) permet de compresser un tableau de donn\u00e9es en indiquant pour chaque donn\u00e9e, sa diff\u00e9rence avec la pr\u00e9c\u00e9dente (plut\u00f4t que la donn\u00e9e elle-m\u00eame). On se retrouve alors avec un tableau de donn\u00e9es plus petit, n\u00e9cessitant moins de place en m\u00e9moire. Cette m\u00e9thode se r\u00e9v\u00e8le efficace lorsque les valeurs cons\u00e9cutives sont proches. </p> <p>Programmer la fonction <code>delta(liste)</code> qui prend en param\u00e8tre un tableau non vide de nombres entiers et qui renvoie un tableau contenant les valeurs enti\u00e8res compress\u00e9es \u00e0 l\u2019aide cette technique.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; delta([1000, 800, 802, 1000, 1003])\n[1000, -200, 2, 198, 3]\n&gt;&gt;&gt; delta([42])\n[42] \n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/21_2/correction/","title":"Correction","text":"<pre><code>class Noeud:\n'''\n    classe impl\u00e9mentant un noeud d'arbre binaire\n    '''\ndef __init__(self, g, v, d):\n'''\n        un objet Noeud poss\u00e8de 3 attributs :\n        - gauche : le sous-arbre gauche,\n        - valeur : la valeur de l'\u00e9tiquette,\n        - droit : le sous-arbre droit.\n        '''\nself.gauche = g\nself.valeur = v\nself.droit = d\ndef __str__(self):\n'''\n        renvoie la repr\u00e9sentation du noeud en chaine de caract\u00e8res\n        '''\nreturn str(self.valeur)\ndef est_une_feuille(self):\n'''\n        renvoie True si et seulement si le noeud est une feuille\n        '''\nreturn self.gauche is None and self.droit is None\ndef expression_infixe(e):\ns = ''\nif e.gauche is not None:\ns = '(' + s + expression_infixe(e.gauche)\ns = s + str(e.valeur)\nif e.droit is not None:\ns = s + expression_infixe(e.droit) + ')'\nreturn s\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/21_2/enonce/","title":"Enonce","text":"<p>Une expression arithm\u00e9tique ne comportant que les quatre op\u00e9rations +, \u2212, \u00d7, \u00f7 peut \u00eatre repr\u00e9sent\u00e9e sous forme d\u2019arbre binaire. Les n\u0153uds internes sont des op\u00e9rateurs et les feuilles sont des nombres. Dans un tel arbre, la disposition des n\u0153uds joue le r\u00f4le des parenth\u00e8ses que nous connaissons bien.  </p> <p></p> <p>En parcourant en profondeur infixe l\u2019arbre binaire ci-dessus, on retrouve l\u2019expression not\u00e9e habituellement :  </p> \\[(3 \\times (8 + 7)) \u2212 (2 + 1)\\] <p>La classe <code>Noeud</code> ci-apr\u00e8s permet d\u2019impl\u00e9menter une structure d\u2019arbre binaire.</p> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>expression_infixe</code> qui prend en param\u00e8tre un objet de la classe <code>Noeud</code> et qui renvoie l\u2019expression arithm\u00e9tique repr\u00e9sent\u00e9e par l\u2019arbre binaire pass\u00e9 en param\u00e8tre, sous forme d\u2019une cha\u00eene de caract\u00e8res contenant des parenth\u00e8ses.  </p> <p>R\u00e9sultat attendu avec l\u2019arbre ci-dessus :</p> <pre><code>&gt;&gt;&gt; e = Noeud(Noeud(Noeud(None, 3, None), '*', Noeud(Noeud(None, 8, None),\n'+', Noeud(None, 7, None))), '-', Noeud(Noeud(None, 2, None), '+',\nNoeud(None, 1, None)))\n&gt;&gt;&gt; expression_infixe(e)\n'((3*(8+7))-(2+1))'\n</code></pre> <pre><code>class Noeud:\n'''\n    classe impl\u00e9mentant un noeud d'arbre binaire\n    '''\ndef __init__(self, g, v, d):\n'''\n        un objet Noeud poss\u00e8de 3 attributs :\n        - gauche : le sous-arbre gauche,\n        - valeur : la valeur de l'\u00e9tiquette,\n        - droit : le sous-arbre droit.\n        '''\nself.gauche = g\nself.valeur = v\nself.droit = d\ndef __str__(self):\n'''\n        renvoie la repr\u00e9sentation du noeud en chaine de caract\u00e8res\n        '''\nreturn str(self.valeur)\ndef est_une_feuille(self):\n'''\n        renvoie True si et seulement si le noeud est une feuille\n        '''\nreturn self.gauche is None and self.droit is None\ndef expression_infixe(e):\ns = ...\nif e.gauche is not None:\ns = '(' + s + expression_infixe(...)\ns = s + ...\nif ... is not None:\ns = s + ... + ...\nreturn s\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/22_1/correction/","title":"Correction","text":"<pre><code>def liste_puissances(a,n):\npuissances = [a]\nfor i in range(n-1):\npuissances.append(puissances[-1] * a)\nreturn puissances\ndef liste_puissances_borne(a, borne):\nlst = []\nval = a\nwhile val &lt; borne:\nlst.append(val)\nval = val * a\nreturn lst\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/22_1/enonce/","title":"Enonce","text":"<p>On rappelle que :</p> <ul> <li>le nombre \\(a^n\\) est le nombre \\(a \\times a \\times a \\times \\dots \\times a\\), o\u00f9 le facteur \\(a\\) appara\u00eet \\(n\\) fois,</li> <li>en langage Python, l\u2019instruction <code>t[-1]</code> permet d\u2019acc\u00e9der au dernier \u00e9l\u00e9ment du tableau <code>t</code>.</li> </ul> <p>Dans cet exercice, l\u2019op\u00e9rateur <code>**</code>  et la fonction <code>pow</code> ne sont pas autoris\u00e9s.</p> <p>Programmer en langage Python une fonction <code>liste_puissances</code> qui prend en argument un nombre entier <code>a</code>, un entier strictement positif <code>n</code> et qui renvoie la liste de ses puissances \\(\\rm{[a^1, a^2, ..., a^n]}\\).</p> <p>Programmer \u00e9galement une fonction <code>liste_puisssances_borne</code> qui prend en argument un nombre entier <code>a</code> sup\u00e9rieur ou \u00e9gal \u00e0 2 et un entier <code>borne</code>, et qui renvoie la liste de ses puissances, \u00e0 l\u2019exclusion de \\(\\rm{a^0}\\), strictement inf\u00e9rieures \u00e0 <code>borne</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; liste_puissances(3, 5)\n[3, 9, 27, 81, 243]\n&gt;&gt;&gt; liste_puissances(-2, 4)\n[-2, 4, -8, 16]\n&gt;&gt;&gt; liste_puissances_borne(2, 16)\n[2, 4, 8]\n&gt;&gt;&gt; liste_puissances_borne(2, 17)\n[2, 4, 8, 16]\n&gt;&gt;&gt; liste_puissances_borne(5, 5)\n[]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/22_2/correction/","title":"Correction","text":"<pre><code>dico = {\"A\": 1, \"B\": 2, \"C\": 3, \"D\": 4, \"E\": 5, \"F\": 6,\n\"G\": 7, \"H\": 8, \"I\": 9, \"J\": 10, \"K\": 11, \"L\": 12,\n\"M\": 13, \"N\": 14, \"O\": 15, \"P\": 16, \"Q\": 17,\n\"R\": 18, \"S\": 19, \"T\": 20, \"U\": 21, \"V\": 22,\n\"W\": 23, \"X\": 24, \"Y\": 25, \"Z\": 26}\ndef est_parfait(mot):\n# mot est une cha\u00eene de caract\u00e8res (en lettres majuscules)\ncode_concatene = \"\"\ncode_additionne = 0\nfor c in mot:\ncode_concatene = code_concatene + str(dico[c])\ncode_additionne = code_additionne + dico[c]\ncode_concatene = int(code_concatene)\nif code_concatene % code_additionne == 0:\nmot_est_parfait = True\nelse:\nmot_est_parfait = False\nreturn code_additionne, code_concatene, mot_est_parfait\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/22_2/enonce/","title":"Enonce","text":"<p>On affecte \u00e0 chaque lettre de l'alphabet un code selon le tableau ci-dessous :</p> A B C D E F G H I J K L M 1 2 3 4 5 6 7 8 9 10 11 12 13 N O P Q R S T U V W X Y Z 14 15 16 17 18 19 20 21 22 23 24 25 26 <p>Pour un mot donn\u00e9, on d\u00e9termine d\u2019une part son code alphab\u00e9tique concat\u00e9n\u00e9, obtenu par la juxtaposition des codes de chacun de ses caract\u00e8res, et d\u2019autre part, son code additionn\u00e9, qui est la somme des codes de chacun de ses caract\u00e8res.</p> <p>Par ailleurs, on dit que ce mot est \u00ab parfait \u00bb si le code additionn\u00e9 divise le code concat\u00e9n\u00e9.</p> <p>Exemples :</p> <ul> <li> <p>Pour le mot <code>\"PAUL\"</code>, le code concat\u00e9n\u00e9 est la cha\u00eene <code>'1612112'</code>, soit l\u2019entier 1 612 112. Son code additionn\u00e9 est l\u2019entier 50 car 16 + 1 + 21 + 12 = 50. 50 ne divise pas l\u2019entier 1 612 112 ; par cons\u00e9quent, le mot <code>\"PAUL\"</code> n\u2019est pas parfait.</p> </li> <li> <p>Pour le mot <code>\"ALAIN\"</code>, le code concat\u00e9n\u00e9 est la cha\u00eene <code>'1121914'</code>, soit l\u2019entier 1 121 914. Le code additionn\u00e9 est l\u2019entier 37 car 1 + 12 + 1 + 9 + 14 = 37. 37 divise l\u2019entier 1 121 914 ; par cons\u00e9quent, le mot <code>\"ALAIN\"</code> est parfait.</p> </li> </ul> <p>Compl\u00e9ter la fonction <code>est_parfait</code> ci-dessous qui prend comme argument une cha\u00eene de caract\u00e8res <code>mot</code> (en lettres majuscules) et qui renvoie le code alphab\u00e9tique concat\u00e9n\u00e9, le code additionn\u00e9 de <code>mot</code>, ainsi qu\u2019un bool\u00e9en qui indique si <code>mot</code> est parfait ou pas.</p> <pre><code>dico = {\"A\": 1, \"B\": 2, \"C\": 3, \"D\": 4, \"E\": 5, \"F\": 6,\n\"G\": 7, \"H\": 8, \"I\": 9, \"J\": 10, \"K\": 11, \"L\": 12,\n\"M\": 13, \"N\": 14, \"O\": 15, \"P\": 16, \"Q\": 17,\n\"R\": 18, \"S\": 19, \"T\": 20, \"U\": 21, \"V\": 22,\n\"W\": 23, \"X\": 24, \"Y\": 25, \"Z\": 26}\ndef est_parfait(mot):\n# mot est une cha\u00eene de caract\u00e8res (en lettres majuscules)\ncode_concatene = \"\"\ncode_additionne = ...\nfor c in mot:\ncode_concatene = code_concatene + ...\ncode_additionne = ...\ncode_concatene = int(code_concatene)\nif ... :\nmot_est_parfait = True\nelse:\nmot_est_parfait = False\nreturn code_additionne, code_concatene, mot_est_parfait\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; est_parfait(\"PAUL\")\n(50, 1612112, False)\n&gt;&gt;&gt; est_parfait(\"ALAIN\")\n(37, 1121914, True)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/23_1/correction/","title":"Correction","text":"<pre><code>def selection_enclos(table_animaux, num_enclos):\ntable = []\nfor animal in table_animaux:\nif animal['enclos'] == num_enclos:\ntable.append(animal)\nreturn table\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/23_1/enonce/","title":"Enonce","text":"<p>On consid\u00e8re des tables (des tableaux de dictionnaires) qui contiennent des enregistrements relatifs \u00e0 des animaux h\u00e9berg\u00e9s dans un refuge. Les attributs des enregistrements sont <code>'nom'</code>, <code>'espece'</code>, <code>'age'</code>, <code>'enclos'</code>. Voici un exemple d'une telle table :</p> <pre><code>animaux = [ {'nom':'Medor', 'espece':'chien', 'age':5, 'enclos':2},\n{'nom':'Titine', 'espece':'chat', 'age':2, 'enclos':5},\n{'nom':'Tom', 'espece':'chat', 'age':7, 'enclos':4},\n{'nom':'Belle', 'espece':'chien', 'age':6, 'enclos':3},\n{'nom':'Mirza', 'espece':'chat', 'age':6, 'enclos':5}]\n</code></pre> <p>Programmer une fonction <code>selection_enclos</code> qui :</p> <ul> <li>prend en param\u00e8tres :<ul> <li>une table <code>table_animaux</code> contenant des enregistrements relatifs \u00e0 des animaux (comme dans l'exemple ci-dessus),</li> <li>un num\u00e9ro d'enclos <code>num_enclos</code> ;</li> </ul> </li> <li>renvoie une table contenant les enregistrements de <code>table_animaux</code> dont l'attribut <code>'enclos'</code> est <code>num_enclos</code>.</li> </ul> <p>Exemples avec la table <code>animaux</code> ci-dessus :</p> <pre><code>&gt;&gt;&gt; selection_enclos(animaux, 5)\n[{'nom':'Titine', 'espece':'chat', 'age':2, 'enclos':5},\n{'nom':'Mirza', 'espece':'chat', 'age':6, 'enclos':5}]\n&gt;&gt;&gt; selection_enclos(animaux, 2)\n[{'nom':'Medor', 'espece':'chien', 'age':5, 'enclos':2}]\n&gt;&gt;&gt; selection_enclos(animaux, 7)\n[]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/23_2/correction/","title":"Correction","text":"<pre><code>def trouver_intrus(tab, g, d):\n'''\n    Renvoie la valeur de l'intrus situ\u00e9 entre les indices g et d \n    dans la liste tab o\u00f9 :\n    tab v\u00e9rifie les conditions de l'exercice,\n    g et d sont des multiples de 3.\n    '''\nif g == d:\nreturn tab[g]\nelse:\nnombre_de_triplets = (d - g) // 3\nindice = g + 3 * (nombre_de_triplets // 2)\nif tab[indice] != tab[indice + 1] :\nreturn trouver_intrus(tab, g, indice)\nelse:\nreturn trouver_intrus(tab, indice + 3, d)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/23_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re des tableaux de nombres dont tous les \u00e9l\u00e9ments sont pr\u00e9sents exactement trois fois et \u00e0 suivre, sauf un \u00e9l\u00e9ment qui est pr\u00e9sent une unique fois et que l'on appelle \u00ab l'intrus \u00bb. Voici quelques exemples :</p> <p></p><pre><code>tab_a = [3, 3, 3, 9, 9, 9, 1, 1, 1, 7, 2, 2, 2, 4, 4, 4, 8, 8, 8, 5, 5, 5]\n#l'intrus est 7\ntab_b = [8, 5, 5, 5, 9, 9, 9, 18, 18, 18, 3, 3, 3]\n#l'intrus est 8\ntab_c = [5, 5, 5, 1, 1, 1, 0, 0, 0, 6, 6, 6, 3, 8, 8, 8]\n#l'intrus est 3\n</code></pre> On remarque qu'avec de tels tableaux : <ul> <li>pour les indices multiples de 3 situ\u00e9s strictement avant l'intrus, l'\u00e9l\u00e9ment correspondant et son voisin de droite sont \u00e9gaux,</li> <li>pour les indices multiples de 3 situ\u00e9s apr\u00e8s l'intrus, l'\u00e9l\u00e9ment correspondant et son voisin de droite - s'il existe - sont diff\u00e9rents.</li> </ul> <p>Ce que l'on peut observer ci-dessous en observant les valeurs des paires de voisins marqu\u00e9es par des caract\u00e8res ^ :</p> <pre><code>[3, 3, 3, 9, 9, 9, 1, 1, 1, 7, 2, 2, 2, 4, 4, 4, 8, 8, 8, 5, 5, 5]\n^  ^     ^  ^     ^  ^     ^  ^     ^  ^     ^  ^     ^  ^     ^\n0        3        6        9        12       15       18       21\n</code></pre> <p>Dans des listes comme celles ci-dessus, un algorithme r\u00e9cursif pour trouver l'intrus consiste alors \u00e0 choisir un indice <code>i</code> multiple de 3 situ\u00e9 approximativement au milieu des indices parmi lesquels se trouve l'intrus. </p> <p>Puis, en fonction des valeurs de l'\u00e9l\u00e9ment d'indice <code>i</code> et de son voisin de droite, \u00e0 appliquer r\u00e9cursivement l'algorithme \u00e0 la moiti\u00e9 droite ou \u00e0 la moiti\u00e9 gauche des indices parmi lesquels se trouve l'intrus. </p> <p>Par exemple, si on s\u2019int\u00e9resse \u00e0 l\u2019indice 12, on voit les valeurs 2 et 4 qui sont diff\u00e9rentes : l\u2019intrus est donc \u00e0 gauche de l\u2019indice 12 (indice 12 compris)</p> <p>En revanche, si on s\u2019int\u00e9resse \u00e0 l\u2019indice 3, on voit les valeurs 9 et 9 qui sont identiques : l\u2019intrus est donc \u00e0 droite des indices 3-4-5, donc \u00e0 partir de l\u2019indice 6.</p> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>trouver_intrus</code> propos\u00e9e page suivante qui met en \u0153uvre cet algorithme.</p> <pre><code>def trouver_intrus(tab, g, d):\n'''\n    Renvoie la valeur de l'intrus situ\u00e9 entre les indices g et d \n    dans la liste tab o\u00f9 :\n    tab v\u00e9rifie les conditions de l'exercice,\n    g et d sont des multiples de 3.\n    '''\nif g == d:\nreturn ...\nelse:\nnombre_de_triplets = (d - g) // ...\nindice = g + 3 * (nombre_de_triplets // 2)\nif ... :\nreturn ...\nelse:\nreturn ...\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; trouver_intrus([3, 3, 3, 9, 9, 9, 1, 1, 1, 7, 2, 2, 2, 4, 4, 4, 8, 8,\n8, 5, 5, 5], 0, 21)\n7\n&gt;&gt;&gt; trouver_intrus([8, 5, 5, 5, 9, 9, 9, 18, 18, 18, 3, 3, 3], 0, 12)\n8\n&gt;&gt;&gt; trouver_intrus([5, 5, 5, 1, 1, 1, 0, 0, 0, 6, 6, 6, 3, 8, 8, 8], 0, 15)\n3\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/24_1/correction/","title":"Correction","text":"<pre><code>def nbr_occurrences(chaine):\nnb_occ = {}\nfor caractere in chaine:\nif caractere in nb_occ:\nnb_occ[caractere] += 1\nelse:\nnb_occ[caractere] = 1\nreturn nb_occ\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/24_1/enonce/","title":"Enonce","text":"<p>Le nombre d\u2019occurrences d\u2019un caract\u00e8re dans une cha\u00eene de caract\u00e8re est le nombre d\u2019apparitions de ce caract\u00e8re dans la cha\u00eene.</p> <p>Exemples :</p> <ul> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018o\u2019 dans \u2018bonjour\u2019 est 2 ;</li> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018b\u2019 dans \u2018B\u00e9b\u00e9\u2019 est 1 ;</li> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018B\u2019 dans \u2018B\u00e9b\u00e9\u2019 est 1 ;</li> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018 \u2018 dans \u2018Hello world !\u2019 est 2.</li> </ul> <p>On cherche les occurrences des caract\u00e8res dans une phrase. On souhaite stocker ces occurrences dans un dictionnaire dont les clefs seraient les caract\u00e8res de la phrase et les valeurs l\u2019occurrence de ces caract\u00e8res.</p> <p>Par exemple : avec la phrase 'Hello world !' le dictionnaire est le suivant :</p> <p><code>{'H': 1,'e': 1,'l': 3,'o': 2,' ': 2,'w': 1,'r': 1,'d': 1,'!': 1}</code></p> <p>L\u2019ordre des clefs n\u2019a pas d\u2019importance.</p> <p>\u00c9crire une fonction <code>nbr_occurrences</code> prenant comme param\u00e8tre une cha\u00eene de caract\u00e8res <code>chaine</code> et renvoyant le dictionnaire des nombres d\u2019occurrences des caract\u00e8res de cette cha\u00eene.</p>"},{"location":"assets/sujets/nsi/term/pratique/24_2/correction/","title":"Correction","text":"<pre><code>def fusion(lst1, lst2):\nn1 = len(lst1)\nn2 = len(lst2)\nlst12 = [0] * (n1 + n2)\ni1 = 0\ni2 = 0\ni = 0\nwhile i1 &lt; n1 and i2 &lt; n2 :\nif lst1[i1] &lt; lst2[i2]:\nlst12[i] = lst1[i1]\ni1 = i1 + 1\nelse:\nlst12[i] = lst2[i2]\ni2 = i2 + 1\ni += 1\nwhile i1 &lt; n1:\nlst12[i] = lst1[i1]\ni1 = i1 + 1\ni = i + 1\nwhile i2 &lt; n2:\nlst12[i] = lst2[i2]\ni2 = i2 + 1\ni = i + 1\nreturn lst12\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/24_2/enonce/","title":"Enonce","text":"<p>La fonction <code>fusion</code> prend deux listes <code>lst1</code>, <code>lst2</code> d\u2019entiers tri\u00e9es par ordre croissant et les fusionne en une liste tri\u00e9e <code>lst12</code> qu\u2019elle renvoie.</p> <p>Le code Python de la fonction <code>fusion</code> est</p> <pre><code>def fusion(lst1,lst2):\nn1 = len(lst1)\nn2 = len(lst2)\nlst12 = [0] * (n1 + n2)\ni1 = 0\ni2 = 0\ni = 0\nwhile i1 &lt; n1 and ... :\nif lst1[i1] &lt; lst2[i2]:\nlst12[i] = ...\ni1 = ...\nelse:\nlst12[i] = lst2[i2]\ni2 = ...\ni += 1\nwhile i1 &lt; n1:\nlst12[i] = ...\ni1 = i1 + 1\ni = ...\nwhile i2 &lt; n2:\nlst12[i] = ...\ni2 = i2 + 1\ni = ...\nreturn lst12\n</code></pre> <p>Compl\u00e9ter le code.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; fusion([1, 6, 10],[0, 7, 8, 9])\n[0, 1, 6, 7, 8, 9, 10]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/25_1/correction/","title":"Correction","text":"<pre><code>def enumere(L):\nd = {}\nfor i in range(len(L)):\nif L[i] in d:\nd[L[i]].append(i)\nelse:\nd[L[i]] = [i]\nreturn d\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/25_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>enumere</code> qui prend en param\u00e8tre une liste <code>L</code> et renvoie un dictionnaire <code>d</code> dont les cl\u00e9s sont les \u00e9l\u00e9ments de <code>L</code> avec pour valeur associ\u00e9e la liste des indices de l\u2019\u00e9l\u00e9ment dans la liste <code>L</code>.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; enumere([1, 1, 2, 3, 2, 1])\n{1: [0, 1, 5], 2: [2, 4], 3: [3]}\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/25_2/correction/","title":"Correction","text":"<pre><code>def insere(arbre, cle):\n\"\"\" arbre est une instance de la classe Arbre qui impl\u00e9mente\n    un arbre binaire de recherche.\n\"\"\"\nif cle &lt; arbre.v:\nif arbre.fg is not None:\ninsere(arbre.fg, cle)\nelse:\narbre.fg = Arbre(cle)\nelse:\nif arbre.fd is not None:\ninsere(arbre.fd, cle)\nelse:\narbre.fd = Arbre(cle)\n</code></pre> <p>Tests :</p> <pre><code>&gt;&gt;&gt; a = Arbre(5)\n&gt;&gt;&gt; insere(a, 2)\n&gt;&gt;&gt; insere(a, 7)\n&gt;&gt;&gt; insere(a, 3)\n&gt;&gt;&gt; parcours(a, [])\n[2, 3, 5, 7]\n&gt;&gt;&gt; insere(a, 1)\n&gt;&gt;&gt; insere(a, 4)\n&gt;&gt;&gt; insere(a, 6)\n&gt;&gt;&gt; insere(a, 8)\n&gt;&gt;&gt; parcours(a, [])\n[1, 2, 3, 4, 5, 6, 7, 8]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/25_2/enonce/","title":"Enonce","text":"<p>Un arbre binaire est impl\u00e9ment\u00e9 par la classe <code>Arbre</code> donn\u00e9e ci-dessous. Les attributs <code>fg</code> et <code>fd</code> prennent pour valeurs des instances de la classe <code>Arbre</code> ou <code>None</code>.</p> <pre><code>class Arbre:\ndef __init__(self, etiquette):\nself.v = etiquette\nself.fg = None\nself.fd = None\ndef parcours(arbre, liste):\nif arbre != None:\nparcours(arbre.fg, liste)\nliste.append(arbre.v)\nparcours(arbre.fd, liste)\nreturn liste\n</code></pre> <p>La fonction r\u00e9cursive <code>parcours</code> renvoie la liste des \u00e9tiquettes des n\u0153uds de l\u2019arbre impl\u00e9ment\u00e9 par l\u2019instance <code>arbre</code> dans l\u2019ordre du parcours en profondeur infixe \u00e0 partir d\u2019une liste vide pass\u00e9e en argument.</p> <p>Compl\u00e9ter le code de la fonction <code>insere</code> qui ins\u00e8re un n\u0153ud d\u2019\u00e9tiquette <code>cle</code> en feuille de l\u2019arbre impl\u00e9ment\u00e9 par l\u2019instance <code>arbre</code> selon la sp\u00e9cification indiqu\u00e9e et de fa\u00e7on que l\u2019arbre ainsi compl\u00e9t\u00e9 soit encore un arbre binaire de recherche.</p> <p>Tester ensuite ce code en utilisant la fonction <code>parcours</code> et en ins\u00e9rant successivement des n\u0153uds d\u2019\u00e9tiquette 1, 4, 6 et 8 dans l\u2019arbre binaire de recherche repr\u00e9sent\u00e9 ci- dessous :</p> <p></p> <pre><code>def insere(arbre, cle):\n\"\"\" arbre est une instance de la classe Arbre qui impl\u00e9mente\n        un arbre binaire de recherche.\n    \"\"\"\nif ...:\nif ...:\ninsere(arbre.fg, cle)\nelse:\narbre.fg = Arbre(cle)\nelse:\nif ...:\ninsere(arbre.fd, cle)\nelse:\narbre.fd = Arbre(cle)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/26_1/correction/","title":"Correction","text":"<pre><code>def multiplication(n1, n2):\n# on se ram\u00e8ne d'abord au cas o\u00f9 n1 et n2 sont tous les deux positifs :\nif n1 &lt; 0:\nreturn -multiplication(-n1, n2)\nif n2 &lt; 0:\nreturn -multiplication(n1, -n2)\nresultat = 0\nfor _ in range(n2):\nresultat += n1\nreturn resultat\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/26_1/enonce/","title":"Enonce","text":"<p>Programmer la fonction <code>multiplication</code>, prenant en param\u00e8tres deux nombres entiers <code>n1</code> et <code>n2</code>, et qui renvoie le produit de ces deux nombres.</p> <p>Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. </p> <pre><code>&gt;&gt;&gt; multiplication(3, 5)\n15\n&gt;&gt;&gt; multiplication(-4, -8)\n32\n&gt;&gt;&gt; multiplication(-2, 6)\n-12\n&gt;&gt;&gt; multiplication(-2, 0)\n0\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/26_2/correction/","title":"Correction","text":"<pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau d\u2019entiers tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = (debut + fin) // 2\nif x == tab[m]:\nreturn True\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = m - 1\nreturn False\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/26_2/enonce/","title":"Enonce","text":"<p>Recopier et compl\u00e9ter sous Python la fonction suivante en respectant la sp\u00e9cification. On ne recopiera pas les commentaires.</p> <pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau d\u2019entiers tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = ...\nif x == tab[m]:\nreturn ...\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = ...\nreturn ...\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],28)\nTrue\n&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],27)\nFalse\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/27_1/correction/","title":"Correction","text":"<pre><code>def recherche_min(tab):\nindice_min = 0\nfor i in range(len(tab)):\nif tab[i] &lt; tab[indice_min]:\nindice_min = i\nreturn indice_min\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/27_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>recherche_min</code> qui prend en param\u00e8tre un tableau de nombres non tri\u00e9 <code>tab</code>, et qui renvoie l'indice de la premi\u00e8re occurrence du minimum de ce tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche_min([5])\n0\n&gt;&gt;&gt; recherche_min([2, 4, 1])\n2\n&gt;&gt;&gt; recherche_min([5, 3, 2, 2, 4])\n2\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/27_2/correction/","title":"Correction","text":"<pre><code>def separe(tab):\ngauche = 0\ndroite = len(tab) - 1\nwhile gauche &lt; droite :\nif tab[gauche] == 0 :\ngauche = gauche + 1\nelse :\ntab[gauche], tab[droite] = tab[droite], tab[gauche]\ndroite = droite - 1\nreturn tab\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/27_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re la fonction <code>separe</code> ci-dessous qui prend en argument un tableau <code>tab</code> dont les \u00e9l\u00e9ments sont des <code>0</code> et des <code>1</code> et qui s\u00e9pare les <code>0</code> des <code>1</code> en pla\u00e7ant les <code>0</code> en d\u00e9but de tableau et les <code>1</code> \u00e0 la suite.</p> <pre><code>def separe(tab):\ngauche = 0\ndroite = ...\nwhile gauche &lt; droite :\nif tab[gauche] == 0 :\ngauche = ...\nelse :\ntab[gauche], tab[droite] = ...\ndroite = ...\nreturn tab\n</code></pre> <p>Compl\u00e9ter la fonction <code>separe</code> ci-dessus.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; separe([1, 0, 1, 0, 1, 0, 1, 0])\n[0, 0, 0, 0, 1, 1, 1, 1]\n&gt;&gt;&gt; separe([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0])\n[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n</code></pre> <p>Description d\u2019\u00e9tapes effectu\u00e9es par la fonction separe sur le tableau ci-dessous : <code>tab = [1, 0, 1, 0, 1, 0, 1, 0]</code></p> <ul> <li> <p>Etape 1 : on regarde la premi\u00e8re case, qui contient un 1 : ce 1 va aller dans la seconde partie du tableau final et on l\u2019\u00e9change avec la derni\u00e8re case. Il est \u00e0 pr\u00e9sent bien positionn\u00e9 : on ne prend plus la derni\u00e8re case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> <li> <p>Etape 2 : on regarde \u00e0 nouveau la premi\u00e8re case, qui contient maintenant un 0 : ce 0 va aller dans la premi\u00e8re partie du tableau final et est bien positionn\u00e9 : on ne prend plus la premi\u00e8re case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> <li> <p>Etape 3 : on regarde la seconde case, qui contient un 0 : ce 0 va aller dans la premi\u00e8re partie du tableau final et est bien positionn\u00e9 : on ne prend plus la seconde case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> <li> <p>Etape 4 : on regarde la troisi\u00e8me case, qui contient un 1 : ce 1 va aller dans la seconde partie du tableau final et on l\u2019\u00e9change avec l\u2019avant-derni\u00e8re case. Il est \u00e0 pr\u00e9sent bien positionn\u00e9 : on ne prend plus l\u2019avant-derni\u00e8re case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> </ul> <p>Et ainsi de suite...</p> <p><code>tab = [0, 0, 0, 0, 1, 1, 1, 1]</code></p> <p>Compl\u00e9ter la fonction <code>separe</code> pr\u00e9sent\u00e9e \u00e0 la page pr\u00e9c\u00e9dente</p>"},{"location":"assets/sujets/nsi/term/pratique/28_1/correction/","title":"Correction","text":"<pre><code>def moyenne(tab):\n'''\n    moyenne(list) -&gt; float\n    Entr\u00e9e : un tableau non vide d'entiers\n    Sortie : nombre de type float\n    Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le\n    tableau\n    '''\nsomme = 0\nfor elt in tab:\nsomme += elt\nreturn somme / len(tab)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/28_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction qui prend en param\u00e8tre un tableau d'entiers non vide et qui renvoie la moyenne de ces entiers. La fonction est sp\u00e9cifi\u00e9e ci-apr\u00e8s et doit passer les assertions fournies. </p><pre><code>def moyenne (tab):\n'''\n    moyenne(list) -&gt; float\n    Entr\u00e9e : un tableau non vide d'entiers\n    Sortie : nombre de type float\n    Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le\n    tableau\n    '''\nassert moyenne([1]) == 1\nassert moyenne([1, 2, 3, 4, 5, 6, 7]) == 4\nassert moyenne([1, 2]) == 1.5\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/28_2/correction/","title":"Correction","text":"<pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\n# cas du tableau vide\nif tab == []:\nreturn False, 1\n# cas o\u00f9 x n'est pas compris entre les valeurs extr\u00eames\nif (x &lt; tab[0]) or (x &gt; tab[-1]):\nreturn False, 2\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = (debut + fin) // 2\nif x == tab[m]:\nreturn True\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = m - 1\nreturn False, 3\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/28_2/enonce/","title":"Enonce","text":"<p>Le but de l'exercice est de compl\u00e9ter une fonction qui d\u00e9termine si une valeur est pr\u00e9sente dans un tableau de valeurs tri\u00e9es dans l'ordre croissant.</p> <p>L'algorithme traite le cas du tableau vide et il est \u00e9crit pour que la recherche dichotomique ne se fasse que dans le cas o\u00f9 la valeur est comprise entre les valeurs extr\u00eames du tableau.</p> <p>On distingue les trois cas qui renvoient <code>False</code> en renvoyant <code>False, 1</code> , <code>False, 2</code> et <code>False, 3</code>.</p> <p>Compl\u00e9ter l'algorithme de dichotomie donn\u00e9 ci-apr\u00e8s.</p> <pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\n# cas du tableau vide\nif ...:\nreturn False, 1\n# cas o\u00f9 x n'est pas compris entre les valeurs extr\u00eames\nif (x &lt; tab[0]) or ...:\nreturn False, 2\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = ...\nif x == tab[m]:\nreturn ...\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = ...\nreturn ...\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],28)\nTrue\n&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],27)\n(False, 3)\n&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],1)\n(False, 2)\n&gt;&gt;&gt; dichotomie([],28)\n(False, 1)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/29_1/correction/","title":"Correction","text":"<pre><code>def taille(a):\nif a is None:\nreturn 0\nelse:\nreturn 1 + taille(a.fg) + taille(a.fd)\ndef hauteur(a):\nif a is None:\nreturn 0\nelse:\nreturn 1 + max(hauteur(a.fg), hauteur(a.fd))\n</code></pre> <p>Tests :</p> <pre><code>a = Arbre(0)\na.fg = Arbre(1)\na.fd = Arbre(2)\na.fg.fg = Arbre(3)\na.fd.fg = Arbre(4)\na.fd.fd = Arbre(5)\na.fd.fg.fd = Arbre(6)\n</code></pre> <pre><code>&gt;&gt;&gt; taille(a)\n7\n&gt;&gt;&gt; hauteur(a)\n4\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/29_1/enonce/","title":"Enonce","text":"<p>Un arbre binaire est impl\u00e9ment\u00e9 par la classe <code>Arbre</code> donn\u00e9e ci-dessous. Les attributs <code>fg</code> et <code>fd</code> prennent pour valeurs des instances de la classe <code>Arbre</code> ou <code>None</code>.</p> <pre><code>class Arbre:\ndef __init__(self, etiquette):\nself.v = etiquette\nself.fg = None\nself.fd = None\n</code></pre> <p></p> <p>L\u2019arbre ci-dessus sera donc impl\u00e9ment\u00e9 de la mani\u00e8re suivante : </p><pre><code>a = Arbre(1)\na.fg = Arbre(4)\na.fd = Arbre(0)\na.fd.fd = Arbre(7)\n</code></pre> <p>\u00c9crire une fonction r\u00e9cursive <code>taille</code> prenant en param\u00e8tre une instance <code>a</code> de la classe <code>Arbre</code> et qui renvoie la taille de l\u2019arbre que cette instance impl\u00e9mente.</p> <p>\u00c9crire de m\u00eame une fonction r\u00e9cursive <code>hauteur</code> prenant en param\u00e8tre une instance <code>a</code> de la classe <code>Arbre</code> et qui renvoie la hauteur de l\u2019arbre que cette instance impl\u00e9mente.</p> <p>Si un arbre a un seul n\u0153ud, sa taille et sa hauteur sont \u00e9gales \u00e0 1. S\u2019il est vide, sa taille et sa hauteur sont \u00e9gales \u00e0 0.</p> <p>Tester les deux fonctions sur l\u2019arbre repr\u00e9sent\u00e9 ci-dessous :</p> <p></p>"},{"location":"assets/sujets/nsi/term/pratique/29_2/correction/","title":"Correction","text":"<pre><code>def ajoute(indice, element, liste):\nnbre_elts = len(liste)\nL = [0 for i in range(nbre_elts + 1)]\nif indice &lt; nbre_elts:\nfor i in range(indice):\nL[i] = liste[i]\nL[indice] = element\nfor i in range(indice + 1, nbre_elts + 1):\nL[i] = liste[i-1]\nelse:\nfor i in range(nbre_elts):\nL[i] = liste[i]\nL[nbre_elts] = element \nreturn L\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/29_2/enonce/","title":"Enonce","text":"<p>La m\u00e9thode <code>insert</code> de la classe <code>list</code> permet d\u2019ins\u00e9rer un \u00e9l\u00e9ment dans une liste \u00e0 un <code>indice</code> donn\u00e9.</p> <p>Le but de cet exercice est, sans utiliser cette m\u00e9thode, d\u2019\u00e9crire une fonction <code>ajoute</code> r\u00e9alisant cette insertion en produisant une nouvelle liste.</p> <p>Cette fonction <code>ajoute</code> prend en param\u00e8tres trois variables <code>indice</code>, <code>element</code> et <code>liste</code> et renvoie une liste <code>L</code> dans laquelle les \u00e9l\u00e9ments sont ceux de la liste <code>liste</code> avec, en plus, l\u2019\u00e9l\u00e9ment <code>element</code> \u00e0 l\u2019indice <code>indice</code>. On consid\u00e8re que les variables <code>indice</code> et <code>element</code> sont des entiers positifs et que les \u00e9l\u00e9ments de <code>liste</code> sont \u00e9galement des entiers positifs. Les \u00e9l\u00e9ments de la liste <code>liste</code>, dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 <code>indice</code> apparaissent d\u00e9cal\u00e9s vers la droite dans la liste <code>L</code>. Si <code>indice</code> est sup\u00e9rieur ou \u00e9gal au nombre d\u2019\u00e9l\u00e9ments de la liste <code>liste</code>, l\u2019\u00e9l\u00e9ment element est ajout\u00e9 dans <code>L</code> apr\u00e8s tous les \u00e9l\u00e9ments de la liste <code>liste</code>.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; ajoute(1, 4, [7, 8, 9])\n[7, 4, 8, 9]\n&gt;&gt;&gt; ajoute(3, 4, [7, 8, 9])\n[7, 8, 9, 4]\n&gt;&gt;&gt; ajoute(4, 4, [7, 8, 9])\n[7, 8, 9, 4]\n</code></pre> <p>Compl\u00e9ter et tester le code ci-dessous :</p> <pre><code>def ajoute(indice, element, liste):\nnbre_elts = len(liste)\nL = [0 for i in range(nbre_elts + 1)]\nif ...:\nfor i in range(indice):\nL[i] = ...\nL[...] = ...\nfor i in range(indice + 1, nbre_elts + 1):\nL[i] = ...\nelse:\nfor i in range(nbre_elts):\nL[i] = ...\nL[...] = ...\nreturn L\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/30_1/correction/","title":"Correction","text":"<pre><code>def moyenne(tab):\nsomme = 0\nfor val in tab:\nsomme += val\nreturn somme / len(tab)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/30_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>moyenne</code> qui prend en param\u00e8tre un tableau non vide de nombres flottants et qui renvoie la moyenne des valeurs du tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; moyenne([1.0])\n1.0\n&gt;&gt;&gt; moyenne([1.0, 2.0, 4.0])\n2.3333333333333335\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/30_2/correction/","title":"Correction","text":"<pre><code>def binaire(a):\nbin_a = str(a%2)\na = a // 2\nwhile a != 0 :\nbin_a = str(a%2) + bin_a\na = a // 2\nreturn bin_a\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/30_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re la fonction <code>binaire</code> ci-dessous qui prend en param\u00e8tre un entier positif <code>a</code> en \u00e9criture d\u00e9cimale et qui renvoie son \u00e9criture binaire sous la forme d'une chaine de caract\u00e8res.</p> <p>L\u2019algorithme utilise la m\u00e9thode des divisions euclidiennes successives comme l\u2019illustre l\u2019exemple ci-apr\u00e8s.</p> <p></p> <p></p><pre><code>def binaire(a):\nbin_a = ...\na = a // 2\nwhile a ... :\nbin_a = ... + bin_a\na = ...\nreturn bin_a\n</code></pre> Compl\u00e9ter le code de la fonction <code>binaire</code>. <p>Exemples : </p><pre><code>&gt;&gt;&gt; binaire(83)\n'1010011'\n&gt;&gt;&gt; binaire(127)\n'1111111'\n&gt;&gt;&gt; binaire(0)\n'0'\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/31_1/correction/","title":"Correction","text":"<pre><code>def nb_repetitions(elt, tab):\nnb = 0\nfor element in tab:\nif element == elt:\nnb += 1\nreturn nb\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/31_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction Python appel\u00e9e <code>nb_repetitions</code> qui prend en param\u00e8tres un \u00e9l\u00e9ment <code>elt</code> et une liste <code>tab</code> et renvoie le nombre de fois o\u00f9 l\u2019\u00e9l\u00e9ment appara\u00eet dans la liste.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; nb_repetitions(5, [2, 5, 3, 5, 6, 9, 5])\n3\n&gt;&gt;&gt; nb_repetitions('A', ['B', 'A', 'B', 'A', 'R'])\n2\n&gt;&gt;&gt; nb_repetitions(12, [1, '!', 7, 21, 36, 44])\n0\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/31_2/correction/","title":"Correction","text":"<pre><code>def binaire(a):\nbin_a = str(a%2)\na = a // 2\nwhile a != 0 :\nbin_a = str(a%2) + bin_a\na = a // 2\nreturn bin_a\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/31_2/enonce/","title":"Enonce","text":"<p>Pour rappel, la conversion d\u2019un nombre entier positif en binaire peut s\u2019effectuer \u00e0 l\u2019aide des divisions successives comme illustr\u00e9 ici :</p> <p></p> <p>Voici une fonction Python bas\u00e9e sur la m\u00e9thode des divisions successives permettant de convertir un nombre entier positif en binaire :</p> <p></p><pre><code>def binaire(a):\nbin_a = str(...)\na = a // 2\nwhile a ... :\nbin_a = ...(a%2) + ...\na = ...\nreturn bin_a\n</code></pre> Compl\u00e9ter la fonction <code>binaire</code>. <p>Exemples :</p> <pre><code>&gt;&gt;&gt; binaire(0)\n'0'\n&gt;&gt;&gt; binaire(77)\n'1001101'\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/32_1/correction/","title":"Correction","text":"<pre><code>def min_et_max(tab):\nd = {}\nd['min'] = tab[0]\nd['max'] = tab[0]\nfor val in tab:\nif val &lt; d['min']:\nd['min'] = val\nif val &gt; d['max']:\nd['max'] = val\nreturn d\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/32_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>min_et_max</code> qui prend en param\u00e8tre un tableau de nombres <code>tab</code> non vide, et qui renvoie la plus petite et la plus grande valeur du tableau sous la forme d\u2019un dictionnaire \u00e0 deux cl\u00e9s <code>min</code> et <code>max</code>.</p> <p>Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>L\u2019utilisation des fonctions natives <code>min</code>, <code>max</code> et <code>sorted</code>, ainsi que la m\u00e9thode <code>sort</code> n\u2019est pas autoris\u00e9e.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; min_et_max([0, 1, 4, 2, -2, 9, 3, 1, 7, 1])\n{'min': -2, 'max': 9}\n&gt;&gt;&gt; min_et_max([0, 1, 2, 3])\n{'min': 0, 'max': 3}\n&gt;&gt;&gt; min_et_max([3])\n{'min': 3, 'max': 3}\n&gt;&gt;&gt; min_et_max([1, 3, 2, 1, 3])\n{'min': 1, 'max': 3}\n&gt;&gt;&gt; min_et_max([-1, -1, -1, -1, -1])\n{'min': -1, 'max': -1}\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/32_2/correction/","title":"Correction","text":"<pre><code>class Carte:\ndef __init__(self, c, v):\n\"\"\" Initialise les attributs couleur (entre 1 et 4), et valeur (entre 1 et 13). \"\"\"\nself.couleur = c\nself.valeur = v\ndef get_valeur(self):\n\"\"\" Renvoie la valeur de la carte : As, 2, ..., 10, Valet, Dame, Roi \"\"\"\nvaleurs = ['As','2', '3', '4', '5', '6', '7', '8', '9', '10', 'Valet', 'Dame', 'Roi']\nreturn valeurs[self.valeur - 1]\ndef get_couleur(self):\n\"\"\" Renvoie la couleur de la carte (parmi pique, coeur, carreau, tr\u00e8fle). \"\"\"\ncouleurs = ['pique', 'coeur', 'carreau', 'tr\u00e8fle']\nreturn couleurs[self.couleur - 1]\nclass Paquet_de_cartes:\ndef __init__(self):\n\"\"\" Initialise l'attribut contenu avec une liste des 52 objets Carte possibles\n            rang\u00e9s par valeurs croissantes en commen\u00e7ant par pique, puis coeur,\n            carreau et tr\u00e9fle. \"\"\"\nself.contenu = [Carte(c, v) for c in range(1, 5) for v in range(1, 14)]  \ndef get_carte(self, pos):\n\"\"\" Renvoie la carte qui se trouve \u00e0 la position pos (entier compris entre 0 et 51). \"\"\"\nassert 0 &lt;= pos &lt;= 51,  'param\u00e8tre pos invalide'\nreturn self.contenu[pos]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/32_2/enonce/","title":"Enonce","text":"<p>On dispose d\u2019une classe <code>Carte</code> permettant de cr\u00e9er des objets mod\u00e9lisant des cartes \u00e0 jouer.</p> <p>Compl\u00e9ter la classe <code>Paquet_de_cartes</code> suivante en respectant les sp\u00e9cifications donn\u00e9es dans les cha\u00eenes de documentation.</p> <p>Ajouter une assertion dans la m\u00e9thode <code>get_carte</code> afin de v\u00e9rifier que le param\u00e8tre <code>pos</code> est correct.</p> <pre><code>class Carte:\ndef __init__(self, c, v):\n\"\"\" Initialise les attributs couleur (entre 1 et 4), et valeur (entre 1 et 13). \"\"\"\nself.couleur = c\nself.valeur = v\ndef get_valeur(self):\n\"\"\" Renvoie la valeur de la carte : As, 2, ..., 10, Valet, Dame, Roi \"\"\"\nvaleurs = ['As','2', '3', '4', '5', '6', '7', '8', '9', '10', 'Valet', 'Dame', 'Roi']\nreturn valeurs[self.valeur - 1]\ndef get_couleur(self):\n\"\"\" Renvoie la couleur de la carte (parmi pique, coeur, carreau, tr\u00e8fle). \"\"\"\ncouleurs = ['pique', 'coeur', 'carreau', 'tr\u00e8fle']\nreturn couleurs[self.couleur - 1]\nclass Paquet_de_cartes:\ndef __init__(self):\n\"\"\" Initialise l'attribut contenu avec une liste des 52 objets Carte possibles\n            rang\u00e9s par valeurs croissantes en commen\u00e7ant par pique, puis coeur,\n            carreau et tr\u00e9fle. \"\"\"\n# A compl\u00e9ter\ndef get_carte(self, pos):\n\"\"\" Renvoie la carte qui se trouve \u00e0 la position pos (entier compris entre 0 et 51). \"\"\"\n# A compl\u00e9ter\n</code></pre> <p>Exemple :</p> <pre><code>Exemple :\n&gt;&gt;&gt; jeu = Paquet_de_cartes()\n&gt;&gt;&gt; carte1 = jeu.get_carte(20)\n&gt;&gt;&gt; print(carte1.get_valeur() + \" de \" + carte1.get_couleur())\n8 de coeur\n&gt;&gt;&gt; carte2 = jeu.get_carte(0)\n&gt;&gt;&gt; print(carte2.get_valeur() + \" de \" + carte2.get_couleur())\nAs de pique\n&gt;&gt;&gt; carte3 = jeu.get_carte(52)\nAssertionError : param\u00e8tre pos invalide\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/33_1/correction/","title":"Correction","text":"<pre><code>a = {'F':['B','G'], 'B':['A','D'], 'A':['',''], 'D':['C','E'], 'C':['',''], 'E':['',''], 'G':['','I'], 'I':['','H'], 'H':['','']}\ndef taille(arbre, lettre):\nfils_gauche = arbre[lettre][0]\nfils_droit = arbre[lettre][1]\nif fils_gauche != '' and fils_droit != '':\nreturn 1 + taille(arbre, fils_gauche) + taille(arbre, fils_droit)\nif fils_gauche != '' and fils_droit == '':\nreturn 1 + taille(arbre, fils_gauche)\nif fils_gauche == '' and fils_droit != '':\nreturn 1 + taille(arbre, fils_droit)\nelse:\nreturn 1\n</code></pre> <p>ou plus simplement :</p> <pre><code>def taille(arbre, lettre):\nif lettre == '':\nreturn 0\nreturn 1 + taille(arbre, arbre[lettre][0]) + taille(arbre, arbre[lettre][1])\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/33_1/enonce/","title":"Enonce","text":"<p>Dans cet exercice, un arbre binaire de caract\u00e8res est stock\u00e9 sous la forme d\u2019un dictionnaire o\u00f9 les clefs sont les caract\u00e8res des n\u0153uds de l\u2019arbre et les valeurs, pour chaque clef, la liste des caract\u00e8res des fils gauche et droit du n\u0153ud.</p> <p>Par exemple, l\u2019arbre</p> <p></p> <p>est stock\u00e9 dans</p> <pre><code>a = {'F':['B','G'], 'B':['A','D'], 'A':['',''], 'D':['C','E'], \\\n'C':['',''], 'E':['',''], 'G':['','I'], 'I':['','H'], \\\n'H':['','']}\n</code></pre> <p>\u00c9crire une fonction r\u00e9cursive <code>taille</code> prenant en param\u00e8tres un arbre binaire <code>arbre</code> sous la forme d\u2019un dictionnaire et un caract\u00e8re <code>lettre</code> qui est la valeur du sommet de l\u2019arbre, et qui renvoie la taille de l\u2019arbre \u00e0 savoir le nombre total de n\u0153uds.  </p> <p>On observe que, par exemple, <code>arbre[lettre][0]</code>, respectivement <code>arbre[lettre][1]</code>, permet d\u2019atteindre la cl\u00e9 du sous-arbre gauche, respectivement droit, de l\u2019arbre <code>arbre</code> de sommet <code>lettre</code>.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; taille(a, \u2019F\u2019)\n9\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/33_2/correction/","title":"Correction","text":"<pre><code>def tri_selection(tab):\nN = len(tab)\nfor k in range(N):\nimin = k\nfor i in range(k, N):\nif tab[i] &lt; tab[imin] :\nimin = i\ntab[k] , tab[imin] = tab[imin] , tab[k]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/33_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re l'algorithme de tri de tableau suivant : \u00e0 chaque \u00e9tape, on parcourt le sous- tableau des \u00e9l\u00e9ments non rang\u00e9s et on place le plus petit \u00e9l\u00e9ment en premi\u00e8re position de ce sous-tableau.</p> <p>Exemple avec le tableau : <code>t = [41, 55, 21, 18, 12, 6, 25]</code> </p> <ul> <li> <p>\u00c9tape 1 : on parcourt tous les \u00e9l\u00e9ments du tableau, on permute le plus petit \u00e9l\u00e9ment avec le premier. Le tableau devient <code>t = [6, 55, 21, 18, 12, 41, 25]</code></p> </li> <li> <p>\u00c9tape 2 : on parcourt tous les \u00e9l\u00e9ments sauf le premier, on permute le plus petit \u00e9l\u00e9ment trouv\u00e9 avec le second. Le tableau devient : <code>t = [6, 12, 21, 18, 55, 41, 25]</code> </p> </li> </ul> <p>Et ainsi de suite. </p> <p>La code de la fonction <code>tri_selection</code> qui impl\u00e9mente cet algorithme est donn\u00e9 ci- dessous.</p> <pre><code>def tri_selection(tab):\nN = len(tab)\nfor k in range(...):\nimin = ...\nfor i in range(... , N):\nif tab[i] &lt; ... :\nimin = i\n... , tab[imin] = tab[imin] , ...\n</code></pre> <p>Compl\u00e9ter le code de cette fonction de fa\u00e7on \u00e0 obtenir :</p> <pre><code>&gt;&gt;&gt; liste = [41, 55, 21, 18, 12, 6, 25]\n&gt;&gt;&gt; tri_selection(liste)\n&gt;&gt;&gt; liste\n[6, 12, 18, 21, 25, 41, 55]\n</code></pre> <p>On rappelle que l'instruction <code>a, b = b, a</code> \u00e9change les contenus de <code>a</code> et de <code>b</code>.</p>"},{"location":"assets/sujets/nsi/term/pratique/34_1/correction/","title":"Correction","text":"<pre><code>def moyenne(tab):\nif tab == []:\nprint('Le tableau donn\u00e9 est vide')\nreturn None\nelse:\nsomme = 0\nfor elt in tab:\nsomme += elt\nreturn somme / len(tab)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/34_1/enonce/","title":"Enonce","text":"<p>Programmer la fonction <code>moyenne</code>   prenant en param\u00e8tre un tableau d'entiers <code>tab</code> (de type <code>list</code>) qui renvoie la moyenne de ses \u00e9l\u00e9ments si le tableau est non vide. Proposer une fa\u00e7on de traiter le cas o\u00f9 le tableau pass\u00e9 en param\u00e8tre est vide.</p> <p>Dans cet exercice, on s\u2019interdira d\u2019utiliser la fonction Python <code>sum</code>.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; moyenne([5,3,8])\n5.333333333333333\n&gt;&gt;&gt; moyenne([1,2,3,4,5,6,7,8,9,10])\n5.5\n&gt;&gt;&gt; moyenne([])\n# Comportement diff\u00e9rent suivant le traitement propos\u00e9.\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/34_2/correction/","title":"Correction","text":"<pre><code>def tri(tab):\n# i est le premier indice de la zone non tri\u00e9e,\n# j est le dernier indice de cette zone non tri\u00e9e.\n# Au d\u00e9but, la zone non tri\u00e9e est le tableau complet.\ni = 0\nj = len(tab) - 1\nwhile i != j :\nif tab[i] == 0:\ni = i + 1\nelse :\nvaleur = tab[j]\ntab[j] = tab[i]\ntab[i] = valeur\nj = j - 1\nreturn tab\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/34_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re un tableau d'entiers <code>tab</code> (de type <code>list</code>) dont les \u00e9l\u00e9ments sont des <code>0</code> ou des <code>1</code>). On se propose de trier ce tableau selon l'algorithme suivant : \u00e0 chaque \u00e9tape du tri, le tableau est constitu\u00e9 de trois zones cons\u00e9cutives, la premi\u00e8re ne contenant que des <code>0</code>, la seconde n'\u00e9tant pas tri\u00e9e et la derni\u00e8re ne contenant que des <code>1</code>.</p> Zone de 0Zone non tri\u00e9eZone de 1 <p>Tant que la zone non tri\u00e9e n'est pas r\u00e9duite \u00e0 un seul \u00e9l\u00e9ment, on regarde son premier \u00e9l\u00e9ment :</p> <ul> <li>si cet \u00e9l\u00e9ment vaut 0, on consid\u00e8re qu'il appartient d\u00e9sormais \u00e0 la zone ne contenant que des 0 ;</li> <li>si cet \u00e9l\u00e9ment vaut 1, il est \u00e9chang\u00e9 avec le dernier \u00e9l\u00e9ment de la zone non tri\u00e9e et on consid\u00e8re alors qu\u2019il appartient \u00e0 la zone ne contenant que des 1.</li> </ul> <p>Dans tous les cas, la longueur de la zone non tri\u00e9e diminue de 1.</p> <p>Recopier sous Python en la compl\u00e9tant la fonction <code>tri</code> suivante :</p> <pre><code>def tri(tab):\n# i est le premier indice de la zone non tri\u00e9e,\n# j est le dernier indice de cette zone non tri\u00e9e.\n# Au d\u00e9but, la zone non tri\u00e9e est le tableau complet.\ni = ...\nj = ...\nwhile i != j:\nif tab[i]== 0:\ni = ...\nelse:\nvaleur = tab[j]\ntab[j] = ...\n...\nj = ...\n...\n</code></pre> <p>Exemple : </p><pre><code>&gt;&gt;&gt; tri([0,1,0,1,0,1,0,1,0])\n[0, 0, 0, 0, 0, 1, 1, 1, 1]       \n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/35_1/correction/","title":"Correction","text":"<pre><code>def ou_exclusif(tab1, tab2):\nresultat = []\ntaille = len(tab1)\nfor i in range(taille):\nresultat.append(tab1[i] ^ tab2[i])\nreturn resultat\n</code></pre> <p>Si on ne connait pas la fonction native ^ qui fait le \u00abou exclusif\u00bb de deux entiers en Python, on peut la recoder :</p> <pre><code>def ou_exc(a, b):\nif a == 0 and b == 0:\nreturn 0\nif a == 0 and b == 1:\nreturn 1\nif a == 1 and b == 0:\nreturn 1\nif a == 1 and b == 1:\nreturn 0\n</code></pre> <p>Le code devient alors :</p> <pre><code>def ou_exclusif(tab1, tab2):\nresultat = []\ntaille = len(tab1)\nfor i in range(taille):\nresultat.append(ou_exc(tab1[i],tab2[i]))\nreturn resultat\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/35_1/enonce/","title":"Enonce","text":"<p>L'op\u00e9rateur \u00ab ou exclusif \u00bb entre deux bits renvoie 0 si les deux bits sont \u00e9gaux et 1 s'ils sont diff\u00e9rents. Il est symbolis\u00e9 par le caract\u00e8re \u2295. Ainsi :</p> <ul> <li>0 \u2295 0 = 0</li> <li>0 \u2295 1 = 1</li> <li>1 \u2295 0 = 1</li> <li>1 \u2295 1 = 0  </li> </ul> <p>On repr\u00e9sente ici une suite de bits par un tableau contenant des 0 et des 1.</p> <p>Exemples :</p> <pre><code>a = [1, 0, 1, 0, 1, 1, 0, 1]\nb = [0, 1, 1, 1, 0, 1, 0, 0]\nc = [1, 1, 0, 1]\nd = [0, 0, 1, 1]\n</code></pre> <p>\u00c9crire la fonction <code>ou_exclusif</code> qui prend en param\u00e8tres deux tableaux de m\u00eame longueur et qui renvoie un tableau o\u00f9 l\u2019\u00e9l\u00e9ment situ\u00e9 \u00e0 position <code>i</code> est le r\u00e9sultat, par l\u2019op\u00e9rateur \u00ab ou exclusif \u00bb, des \u00e9l\u00e9ments \u00e0 la position <code>i</code> des tableaux pass\u00e9s en param\u00e8tres.</p> <p>En consid\u00e9rant les quatre exemples ci-dessus, cette fonction donne :</p> <pre><code>&gt;&gt;&gt; ou_exclusif(a, b)\n[1, 1, 0, 1, 1, 0, 0, 1])\n&gt;&gt;&gt; ou_exclusif(c, d)\n[1, 1, 1, 0]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/35_2/correction/","title":"Correction","text":"<pre><code>class Carre:\ndef __init__(self, liste, n):\nself.ordre = n\nself.tableau = [[liste[i + j * n] for i in range(n)] for j in range(n)]\ndef affiche(self):\n'''Affiche un carr\u00e9'''\nfor i in range(self.ordre):\nprint(self.tableau[i])\ndef somme_ligne(self, i):\n'''Calcule la somme des valeurs de la ligne i'''\nsomme = 0\nfor j in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef somme_col(self, j):\n'''Calcule la somme des valeurs de la colonne j'''\nsomme = 0\nfor i in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef est_semimagique(self):\ns = self.somme_ligne(0)\n#test de la somme de chaque ligne\nfor i in range(self.ordre):\nif self.somme_ligne(i) != s:\nreturn False\n#test de la somme de chaque colonne\nfor j in range(self.ordre):\nif self.somme_col(j) != s:\nreturn False\nreturn True\n</code></pre> <p>Tests avec :</p> <pre><code>lst_c2 = [1, 7, 7, 1]\nlst_c3 = [3, 4, 5, 4, 4, 4, 5, 4, 3]\nlst_c3bis = [2, 9, 4, 7, 0, 3, 6, 1, 8]\n</code></pre> <pre><code>&gt;&gt;&gt; c2 = Carre(lst_c2, 2)\n&gt;&gt;&gt; c2.est_semimagique()\nTrue\n&gt;&gt;&gt; c3 = Carre(lst_c3, 3)\n&gt;&gt;&gt; c3.est_semimagique()\nTrue\n&gt;&gt;&gt; c3bis = Carre(lst_c3bis, 2)\n&gt;&gt;&gt; c3bis.est_semimagique()\nFalse\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/35_2/enonce/","title":"Enonce","text":"<p>Dans cet exercice, on appelle carr\u00e9 d\u2019ordre \\(n\\) un tableau de \\(n\\) lignes et \\(n\\) colonnes dont chaque case contient un entier naturel.</p> <p>Exemples : </p> <p>Un carr\u00e9 est dit semimagique lorsque les sommes des \u00e9l\u00e9ments situ\u00e9s sur chaque ligne, chaque colonne sont \u00e9gales.</p> <ul> <li> <p>Ainsi c2 et c3 sont semimagiques car la somme de chaque ligne, chaque colonne et chaque diagonale est \u00e9gale \u00e0 8 pour c2 et 12 pour c3.</p> </li> <li> <p>Le carre c3bis n'est pas semimagique car la somme de la premi\u00e8re ligne est \u00e9gale \u00e0 15 alors que celle de la deuxi\u00e8me ligne est \u00e9gale \u00e0 10.</p> </li> </ul> <p>La classe <code>Carre</code> ci-apr\u00e8s contient des m\u00e9thodes qui permettent de manipuler des carr\u00e9s.</p> <ul> <li> <p>La m\u00e9thode constructeur cr\u00e9e un carr\u00e9 sous forme d\u2019un tableau \u00e0 deux dimensions \u00e0 partir d\u2019une liste d\u2019entiers, et d\u2019un ordre.</p> </li> <li> <p>La m\u00e9thode <code>affiche</code> permet d\u2019afficher le carr\u00e9 cr\u00e9\u00e9.</p> </li> </ul> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; liste = (3, 4, 5, 4, 4, 4, 5, 4, 3)\n&gt;&gt;&gt; c3 = Carre(liste, 3)\n&gt;&gt;&gt; c3.affiche()\n[3, 4, 5]\n[4, 4, 4]\n[5, 4, 3]\n</code></pre> <p>Compl\u00e9ter la m\u00e9thode <code>est_semimagique</code> qui renvoie <code>True</code> si le carr\u00e9 est semimagique, <code>False</code> sinon. Puis tester la fonction <code>est_semimagique</code> sur les carr\u00e9s c2, c3 et c3bis.</p> <pre><code>class Carre:\ndef __init__(self, liste, n):\nself.ordre = n\nself.tableau = [[liste[i + j * n] for i in range(n)] for j in range(n)]\ndef affiche(self):\n'''Affiche un carr\u00e9'''\nfor i in range(self.ordre):\nprint(self.tableau[i])\ndef somme_ligne(self, i):\n'''Calcule la somme des valeurs de la ligne i'''\nsomme = 0\nfor j in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef somme_col(self, j):\n'''Calcule la somme des valeurs de la colonne j'''\nsomme = 0\nfor i in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef est_semimagique(self):\ns = self.somme_ligne(0)\n#test de la somme de chaque ligne\nfor i in range(...):\nif ... != s:\nreturn ...\n#test de la somme de chaque colonne\nfor j in range(...):\nif ... != s:\nreturn ...\nreturn ...\n</code></pre> <p>Listes permettant de g\u00e9n\u00e9rer les carr\u00e9s c2, c3 et c3bis :</p> <pre><code>lst_c2 = [1, 7, 7, 1]\nlst_c3 = [3, 4, 5, 4, 4, 4, 5, 4, 3]\nlst_c3bis = [2, 9, 4, 7, 0, 3, 6, 1, 8]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/36_1/correction/","title":"Correction","text":"<pre><code>def couples_consecutifs(tab):\nsolution = []\nfor i in range(len(tab)-1):\nif tab[i] + 1 == tab[i+1]:\nsolution.append((tab[i], tab[i+1]))\nreturn solution\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/36_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>couples_consecutifs</code> qui prend en param\u00e8tre une liste de nombres entiers <code>tab</code> non vide, et qui renvoie la liste (\u00e9ventuellement vide) des couples d'entiers cons\u00e9cutifs successifs qu'il peut y avoir dans <code>tab</code>.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; couples_consecutifs([1, 4, 3, 5])\n[]\n&gt;&gt;&gt; couples_consecutifs([1, 4, 5, 3])\n[(4, 5)]\n&gt;&gt;&gt; couples_consecutifs([1, 1, 2, 4])\n[(1, 2)]\n&gt;&gt;&gt; couples_consecutifs([7, 1, 2, 5, 3, 4])\n[(1, 2), (3, 4)]\n&gt;&gt;&gt; couples_consecutifs([5, 1, 2, 3, 8, -5, -4, 7])\n[(1, 2), (2, 3), (-5, -4)]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/36_2/correction/","title":"Correction","text":"<pre><code>def propager(M, i, j, val):\nif M[i][j] == 1:\nM[i][j] = val\n# l'element en haut fait partie de la composante\nif i-1 &gt;= 0 and M[i-1][j] == 1:\npropager(M, i-1, j, val)\n# l'element en bas fait partie de la composante\nif i+1 &lt; len(M) and M[i+1][j] == 1:\npropager(M, i+1, j, val)\n# l'element \u00e0 gauche fait partie de la composante\nif j-1 &gt;= 0 and M[i][j-1] == 1:\npropager(M, i, j-1, val)\n# l'element \u00e0 droite fait partie de la composante\nif j+1 &lt; len(M[i]) and M[i][j+1] == 1:\npropager(M, i, j+1, val)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/36_2/enonce/","title":"Enonce","text":"<p>Soit une image binaire repr\u00e9sent\u00e9e dans un tableau \u00e0 2 dimensions. Les \u00e9l\u00e9ments <code>M[i][j]</code>, appel\u00e9s pixels, sont \u00e9gaux soit \u00e0 <code>0</code> soit \u00e0 <code>1</code>.</p> <p>Une composante d\u2019une image est un sous-ensemble de l\u2019image constitu\u00e9 uniquement de <code>1</code> et de <code>0</code> qui sont c\u00f4te \u00e0 c\u00f4te, soit horizontalement soit verticalement.</p> <p>Par exemple, les composantes de  sont </p> <p>On souhaite, \u00e0 partir d\u2019un pixel \u00e9gal \u00e0 <code>1</code> dans une image <code>M</code>, donner la valeur <code>val</code> \u00e0 tous les pixels de la composante \u00e0 laquelle appartient ce pixel.</p> <p>La fonction <code>propager</code> prend pour param\u00e8tre une image <code>M</code> (repr\u00e9sent\u00e9e par une liste de listes), deux entiers <code>i</code> et <code>j</code> et unevaleur enti\u00e8re <code>val</code>. Elle met \u00e0 la valeur <code>val</code> tous les pixels de la composante du pixel <code>M[i][j]</code> s\u2019il vaut <code>1</code> et ne fait rien s\u2019il vaut <code>0</code>.</p> <p>Par exemple, <code>propager(M, 2, 1, 3)</code> donne </p> <p>Compl\u00e9ter le code r\u00e9cursif de la fonction <code>propager</code> donn\u00e9 ci-dessous :</p> <pre><code>def propager(M, i, j, val):\nif M[i][j] == ...:\nM[i][j] = val\n# l'element en haut fait partie de la composante\nif i-1 &gt;= 0 and M[i-1][j] == ...:\npropager(M, i-1, j, val)\n# l'element en bas fait partie de la composante\nif ... &lt; len(M) and M[i+1][j] == 1:\npropager(M, ..., j, val)\n# l'element \u00e0 gauche fait partie de la composante\nif ... and M[i][j-1] == 1:\npropager(M, ..., ..., val)\n# l'element \u00e0 droite fait partie de la composante\nif ... and ...:\npropager(..., ..., ..., ...)\n</code></pre> <p>Exemple : </p><pre><code>&gt;&gt;&gt; M = [[0, 0, 1, 0], [0, 1, 0, 1], [1, 1, 1, 0], [0, 1, 1, 0]]\n&gt;&gt;&gt; propager(M, 2, 1, 3)\n&gt;&gt;&gt; M\n[[0, 0, 1, 0], [0, 3, 0, 1], [3, 3, 3, 0], [0, 3, 3, 0]]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/37_1/correction/","title":"Correction","text":"<pre><code>def recherche(elt, tab):\nfor i in range(len(tab)-1, -1, -1):\nif tab[i] == elt:\nreturn i\nreturn -1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/37_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres <code>elt</code> un nombre entier et <code>tab</code> un tableau de nombres entiers, et qui renvoie l\u2019indice de la derni\u00e8re occurrence de <code>elt</code> dans <code>tab</code> si <code>elt</code> est dans <code>tab</code> et <code>-1</code> sinon.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche(1, [2, 3, 4])\n-1\n&gt;&gt;&gt; recherche(1, [10, 12, 1, 56])\n2\n&gt;&gt;&gt; recherche(1, [1, 0, 42, 7])\n0\n&gt;&gt;&gt; recherche(1, [1, 50, 1])\n2\n&gt;&gt;&gt; recherche(1, [8, 1, 10, 1, 7, 1, 8])\n5\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/37_2/correction/","title":"Correction","text":"<pre><code>class AdresseIP:\ndef __init__(self, adresse):\nself.adresse = adresse\ndef liste_octet(self):\n\"\"\"renvoie une liste de nombres entiers,\n        la liste des octets de l'adresse IP\"\"\"\nreturn [int(i) for i in self.adresse.split(\".\")]\ndef est_reservee(self):\n\"\"\"renvoie True si l'adresse IP est une adresse\n        r\u00e9serv\u00e9e, False sinon\"\"\"\nreturn self.liste_octet()[3] == 0 or self.liste_octet()[3] == 255\ndef adresse_suivante(self):\n\"\"\"renvoie un objet de AdresseIP avec l'adresse\n        IP qui suit l\u2019adresse self\n        si elle existe et False sinon\"\"\"\nif self.liste_octet()[3] &lt; 254:\noctet_nouveau = self.liste_octet()[3] + 1\nreturn AdresseIP('192.168.0.' + str(octet_nouveau))\nelse:\nreturn False\nadresse1 = AdresseIP('192.168.0.1')\nadresse2 = AdresseIP('192.168.0.2')\nadresse3 = AdresseIP('192.168.0.0')\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/37_2/enonce/","title":"Enonce","text":"<p>On d\u00e9finit une classe g\u00e9rant une adresse IPv4.</p> <p>On rappelle qu\u2019une adresse IPv4 est une adresse de longueur 4 octets, not\u00e9e en d\u00e9cimale \u00e0 point, en s\u00e9parant chacun des octets par un point. On consid\u00e8re un r\u00e9seau priv\u00e9 avec une plage d\u2019adresses IP de <code>192.168.0.0</code> \u00e0 <code>192.168.0.255</code>.</p> <p>On consid\u00e8re que les adresses IP saisies sont valides.</p> <p>Les adresses IP <code>192.168.0.0</code> et <code>192.168.0.255</code> sont des adresses r\u00e9serv\u00e9es.</p> <p>Le code ci-dessous impl\u00e9mente la classe <code>AdresseIP</code>.</p> <p></p><pre><code>class AdresseIP:\ndef __init__(self, adresse):\nself.adresse = ...\ndef liste_octet(self):\n\"\"\"renvoie une liste de nombres entiers,\n        la liste des octets de l'adresse IP\"\"\"\nreturn [int(i) for i in self.adresse.split(\".\")]\ndef est_reservee(self):\n\"\"\"renvoie True si l'adresse IP est une adresse\n        r\u00e9serv\u00e9e, False sinon\"\"\"\nreturn ... or ...\ndef adresse_suivante(self):\n\"\"\"renvoie un objet de AdresseIP avec l'adresse\n        IP qui suit l\u2019adresse self\n        si elle existe et False sinon\"\"\"\nif ... &lt; 254:\noctet_nouveau = ... + ...\nreturn AdresseIP('192.168.0.' + ...)\nelse:\nreturn False\n</code></pre> Compl\u00e9ter le code ci-dessus et instancier trois objets : <code>adresse1</code>, <code>adresse2</code>, <code>adresse3</code> avec respectivement les arguments suivants : <p><code>'192.168.0.1'</code>, <code>'192.168.0.2'</code>, <code>'192.168.0.0'</code></p> <p>V\u00e9rifier que :  </p><pre><code>&gt;&gt;&gt; adresse1.est_reservee()\nFalse\n&gt;&gt;&gt; adresse3.est_reservee()\nTrue\n&gt;&gt;&gt; adresse2.adresse_suivante().adresse\n'192.168.0.3'\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/38_1/correction/","title":"Correction","text":"<pre><code>def correspond(mot, mot_a_trous):\nif len(mot) != len(mot_a_trous):\nreturn False\nfor i in range(len(mot)):\nif mot[i] != mot_a_trous[i] and mot_a_trous[i] != '*':\nreturn False\nreturn True\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/38_1/enonce/","title":"Enonce","text":"<p>On consid\u00e8re des mots \u00e0 trous : ce sont des cha\u00eenes de caract\u00e8res contenant uniquement des majuscules et des caract\u00e8res <code>*</code>. Par exemple <code>INFO*MA*IQUE</code>, <code>***I***E**</code> et <code>*S*</code> sont des mots \u00e0 trous.  </p> <p>Programmer une fonction <code>correspond</code> qui :</p> <ul> <li>prend en param\u00e8tres deux cha\u00eenes de caract\u00e8res <code>mot</code> et <code>mot_a_trous</code> o\u00f9 <code>mot_a_trous</code> est un mot \u00e0 trous comme indiqu\u00e9 ci-dessus, </li> <li>renvoie :<ul> <li><code>True</code> si on peut obtenir <code>mot</code> en rempla\u00e7ant convenablement les caract\u00e8res <code>'*'</code> de <code>mot_a_trous</code>.</li> <li><code>False</code> sinon.</li> </ul> </li> </ul> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; correspond('INFORMATIQUE', 'INFO*MA*IQUE')\nTrue\n&gt;&gt;&gt; correspond('AUTOMATIQUE', 'INFO*MA*IQUE')\nFalse\n&gt;&gt;&gt; correspond('STOP', 'S*')\nFalse\n&gt;&gt;&gt; correspond('AUTO', '*UT*')\nTrue\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/38_2/correction/","title":"Correction","text":"<pre><code>def est_cyclique(plan):\n'''\n    Prend en param\u00e8tre un dictionnaire `plan` correspondant \u00e0 un plan d'envoi de messages (ici entre les personnes A, B, C, D, E, F).\n    Renvoie True si le plan d'envoi de messages est cyclique et False sinon.\n    '''\nexpediteur = 'A'\ndestinataire = plan[expediteur]\nnb_destinaires = 1\nwhile destinataire != expediteur:\ndestinataire = plan[destinataire]\nnb_destinaires += 1\nreturn nb_destinaires == len(plan)\n#tests\nprint(est_cyclique({'A':'E', 'F':'A', 'C':'D', 'E':'B', 'B':'F', 'D':'C'}))\nprint(est_cyclique({'A':'E', 'F':'C', 'C':'D', 'E':'B', 'B':'F', 'D':'A'}))\nprint(est_cyclique({'A':'B', 'F':'C', 'C':'D', 'E':'A', 'B':'F', 'D':'E'}))\nprint(est_cyclique({'A':'B', 'F':'A', 'C':'D', 'E':'C', 'B':'F', 'D':'E'}))\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/38_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re au plus 26 personnes A, B, C, D, E, F ... qui peuvent s'envoyer des messages avec deux r\u00e8gles \u00e0 respecter :</p> <ul> <li>chaque personne ne peut envoyer des messages qu'\u00e0 une seule personne (\u00e9ventuellement elle-m\u00eame),</li> <li>chaque personne ne peut recevoir des messages qu'en provenance d'une seule personne (\u00e9ventuellement elle-m\u00eame).</li> </ul> <p>Voici un exemple - avec 6 personnes - de \u00ab plan d'envoi des messages \u00bb qui respecte les r\u00e8gles ci-dessus, puisque chaque personne est pr\u00e9sente une seule fois dans chaque colonne :</p> <ul> <li>A envoie ses messages \u00e0 E</li> <li>E envoie ses messages \u00e0 B</li> <li>B envoie ses messages \u00e0 F</li> <li>F envoie ses messages \u00e0 A</li> <li>C envoie ses messages \u00e0 D</li> <li>D envoie ses messages \u00e0 C</li> </ul> <p>Et le dictionnaire correspondant \u00e0 ce plan d'envoi est le suivant :</p> <p><code>plan_a = {'A':'E', 'B':'F', 'C':'D', 'D':'C', 'E':'B', 'F':'A'}</code></p> <p>Un cycle est une suite de personnes dans laquelle la derni\u00e8re est la m\u00eame que la premi\u00e8re.</p> <p>Sur le plan d'envoi <code>plan_a</code> des messages ci-dessus, il y a deux cycles distincts : un premier cycle avec A, E, B, F et un second cycle avec C et D.</p> <p>En revanche, le plan d\u2019envoi <code>plan_b</code> ci-dessous :</p> <p><code>plan_b = {'A':'C', 'B':'F', 'C':'E', 'D':'A', 'E':'B', 'F':'D'}</code></p> <p>comporte un unique cycle : A, C, E, B, F, D. Dans ce cas, lorsqu\u2019un plan d\u2019envoi comporte un unique cycle, on dit que le plan d\u2019envoi est cyclique.</p> <p>Pour savoir si un plan d'envoi de messages comportant N personnes est cyclique, on peut utiliser l'algorithme ci-dessous :</p> <ul> <li>on part d\u2019un exp\u00e9diteur (ici A) et on inspecte son destinataire dans le plan d'envoi,</li> <li>chaque destinataire devient \u00e0 son tour exp\u00e9diteur, selon le plan d\u2019envoi, tant qu\u2019on ne \u00ab retombe \u00bb pas sur l\u2019exp\u00e9diteur initial,</li> <li>le plan d\u2019envoi est cyclique si on l\u2019a parcouru en entier.</li> </ul> <p>Compl\u00e9ter la fonction <code>est_cyclique</code> en respectant la sp\u00e9cification.</p> <p>Remarque : la fonction python <code>len</code> permet d'obtenir la longueur d'un dictionnaire.</p> <pre><code>def est_cyclique(plan):\n'''\n    Prend en param\u00e8tre un dictionnaire `plan` correspondant \u00e0 un plan d'envoi de messages (ici entre les personnes A, B, C, D, E, F).\n    Renvoie True si le plan d'envoi de messages est cyclique et False sinon.\n    '''\nexpediteur = 'A'\ndestinataire = plan[ ... ]\nnb_destinaires = 1\nwhile destinataire != ...:\ndestinataire = plan[ ... ]\nnb_destinaires += ...\nreturn nb_destinaires == ...\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; est_cyclique({'A':'E', 'F':'A', 'C':'D', 'E':'B', 'B':'F', 'D':'C'})\nFalse\n&gt;&gt;&gt; est_cyclique({'A':'E', 'F':'C', 'C':'D', 'E':'B', 'B':'F', 'D':'A'})\nTrue\n&gt;&gt;&gt; est_cyclique({'A':'B', 'F':'C', 'C':'D', 'E':'A', 'B':'F', 'D':'E'})\nTrue\n&gt;&gt;&gt; est_cyclique({'A':'B', 'F':'A', 'C':'D', 'E':'C', 'B':'F', 'D':'E'})\nFalse\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/39_1/correction/","title":"Correction","text":"<p>Version r\u00e9cursive :</p> <pre><code>def fibonacci(n):\nif n == 0 :\nreturn 0   \nelif n == 1 :\nreturn 1\nelse :\nreturn fibonacci(n-1) + fibonacci(n-2)\n</code></pre> <p>Version imp\u00e9rative : </p><pre><code>def fibonacci(n):\na = 0\nb = 1\nfor k in range(n-1):\nt = b\nb = a + b\na = t\nreturn b\n</code></pre> <p>Version programmation dynamique :</p> <pre><code>def fibonacci(n):\nd = {}\nd[1] = 1\nd[2] = 1\nfor k in range(3, n+1):\nd[k] = d[k-1] + d[k-2]\nreturn d[n]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/39_1/enonce/","title":"Enonce","text":"<p>On s\u2019int\u00e9resse \u00e0 la suite d\u2019entiers d\u00e9finie par :</p> <ul> <li>les deux premiers termes sont \u00e9gaux \u00e0 1,</li> <li>ensuite, chaque terme est obtenu en faisant la somme des deux termes qui le pr\u00e9c\u00e8dent.</li> </ul> <p>En math\u00e9matiques, on le formule ainsi :</p> <p>\\(U_1 = 1\\), \\(U_2 = 1\\) et, pour tout entier naturel non nul \\(n\\), par \\(U_{n+2} = U_{n+1} + U_n\\).</p> <p>Cette suite est connue sous le nom de suite de Fibonacci. \u00c9crire en Python une fonction <code>fibonacci</code> qui prend en param\u00e8tre un entier <code>n</code> suppos\u00e9 strictement positif et qui renvoie le terme d\u2019indice <code>n</code> de cette suite.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; fibonacci(1)\n1\n&gt;&gt;&gt; fibonacci(2)\n1\n&gt;&gt;&gt; fibonacci(25)\n75025\n&gt;&gt;&gt; fibonacci(45)\n1134903170\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/39_2/correction/","title":"Correction","text":"<pre><code>def pantheon(eleves, notes):\nnote_maxi = 0\nmeilleurs_eleves =  []\nfor i in range(len(eleves)) :\nif notes[i] == note_maxi :\nmeilleurs_eleves.append(eleves[i])\nelif notes[i] &gt; note_maxi:\nnote_maxi = notes[i]\nmeilleurs_eleves = [i]\nreturn (note_maxi, meilleurs_eleves)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/39_2/enonce/","title":"Enonce","text":"<p>On consid\u00e8re la fonction <code>pantheon</code> prenant en param\u00e8tres <code>eleves</code> et <code>notes</code> deux tableaux de m\u00eame longueur, le premier contenant le nom des \u00e9l\u00e8ves et le second, des entiers positifs d\u00e9signant leur note \u00e0 un contr\u00f4le de sorte que <code>eleves[i]</code> a obtenu la note <code>notes[i]</code>. Cette fonction renvoie le couple constitu\u00e9 de la note maximale attribu\u00e9e et des noms des \u00e9l\u00e8ves ayant obtenu cette note regroup\u00e9s dans un tableau. Ainsi, l\u2019instruction <code>pantheon(['a', 'b', 'c', 'd'], [15, 18, 12, 18])</code> renvoie le couple <code>(18, ['b', 'd'])</code>.</p> <pre><code>def pantheon(eleves, notes):\nnote_maxi = 0\nmeilleurs_eleves =  ...\nfor i in range(...) :\nif notes[i] == ... :\nmeilleurs_eleves.append(...)\nelif notes[i] &gt; note_maxi:\nnote_maxi = ...\nmeilleurs_eleves = [...]\nreturn (note_maxi,meilleurs_eleves)\n</code></pre> <p>Compl\u00e9ter ce code.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; eleves_nsi = ['a','b','c','d','e','f','g','h','i','j']\n&gt;&gt;&gt; notes_nsi = [30, 40, 80, 60, 58, 80, 75, 80, 60, 24]\n&gt;&gt;&gt; pantheon(eleves_nsi, notes_nsi)\n(80, ['c', 'f', 'h'])\n&gt;&gt;&gt; pantheon([],[])\n(0, [])\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/40_1/correction/","title":"Correction","text":"<pre><code>def nombre_de_mots(phrase):\nnb_mots = 0\nfor caractere in phrase:\nif caractere == ' ' or caractere == '.':\nnb_mots += 1\nreturn nb_mots\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/40_1/enonce/","title":"Enonce","text":"<p>Pour cet exercice :</p> <ul> <li> <p>On appelle \u00ab mot \u00bb une cha\u00eene de caract\u00e8res compos\u00e9e avec des caract\u00e8res choisis parmi les 26 lettres minuscules ou majuscules de l'alphabet,</p> </li> <li> <p>On appelle \u00ab phrase \u00bb une cha\u00eene de caract\u00e8res :</p> <ul> <li>compos\u00e9e avec un ou plusieurs \u00ab mots \u00bb s\u00e9par\u00e9s entre eux par un seul caract\u00e8re espace <code>' '</code>,</li> <li>se finissant :<ul> <li>soit par un point <code>'.'</code> qui est alors coll\u00e9 au dernier mot,</li> <li>soit par un point d'exclamation <code>'!'</code> ou d'interrogation <code>'?'</code> qui est alors s\u00e9par\u00e9 du dernier mot par un seul caract\u00e8re espace <code>' '</code>.</li> </ul> </li> </ul> </li> </ul> <p>Exemples :</p> <ul> <li>'Cet exercice est simple.'</li> <li>'Le point d exclamation est separe !'</li> </ul> <p>Apr\u00e8s avoir remarqu\u00e9 le lien entre le nombre de mots et le nombres de caract\u00e8res espace dans une phrase, programmer une fonction <code>nombre_de_mots</code> qui prend en param\u00e8tre une phrase et renvoie le nombre de mots pr\u00e9sents dans cette phrase.</p> <pre><code>&gt;&gt;&gt; nombre_de_mots('Le point d exclamation est separe !')\n6\n&gt;&gt;&gt; nombre_de_mots('Il y a un seul espace entre les mots !')\n9\n&gt;&gt;&gt; nombre_de_mots('Combien de mots y a t il dans cette phrase ?')\n10\n&gt;&gt;&gt; nombre_de_mots('Fin.')\n1\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/40_2/correction/","title":"Correction","text":"<pre><code>class Noeud:\ndef __init__(self, valeur):\n'''M\u00e9thode constructeur pour la classe Noeud.\n        Param\u00e8tre d'entr\u00e9e : valeur (str)'''\nself.valeur = valeur\nself.gauche = None\nself.droit = None\ndef getValeur(self):\n'''M\u00e9thode accesseur pour obtenir la valeur du noeud\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn self.valeur\ndef droitExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant droit existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.droit is not None)\ndef gaucheExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant gauche existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.gauche is not None)\ndef inserer(self, cle):\n'''M\u00e9thode d'insertion de cl\u00e9 dans un arbre binaire de recherche\n        Param\u00e8tre d'entr\u00e9e : cle (int)'''\nif cle &lt; self.valeur:\n# on ins\u00e8re \u00e0 gauche\nif self.gaucheExiste():\n# on descend \u00e0 gauche et on retente l'insertion de la cl\u00e9\nself.gauche.inserer(cle)\nelse:\n# on cr\u00e9e un fils gauche\nself.gauche = Noeud(cle)\nelif cle &gt; self.valeur:\n# on ins\u00e8re \u00e0 droite\nif self.droitExiste():\n# on descend \u00e0 droite et on retente l'insertion de la cl\u00e9\nself.droit.inserer(cle)\nelse:\n# on cr\u00e9e un fils droit\nself.droit = Noeud(cle)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/40_2/enonce/","title":"Enonce","text":"<p>La classe ABR ci-dessous permet d'impl\u00e9menter une structure d'arbre binaire de recherche.</p> <pre><code>class Noeud:\ndef __init__(self, valeur):\n'''M\u00e9thode constructeur pour la classe Noeud.\n        Param\u00e8tre d'entr\u00e9e : valeur (str)'''\nself.valeur = valeur\nself.gauche = None\nself.droit = None\ndef getValeur(self):\n'''M\u00e9thode accesseur pour obtenir la valeur du noeud\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn self.valeur\ndef droitExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant droit existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.droit is not None)\ndef gaucheExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant gauche existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.gauche is not None)\ndef inserer(self, cle):\n'''M\u00e9thode d'insertion de cl\u00e9 dans un arbre binaire de recherche\n        Param\u00e8tre d'entr\u00e9e : cle (int)'''\nif cle &lt; ...:\n# on ins\u00e8re \u00e0 gauche\nif self.gaucheExiste():\n# on descend \u00e0 gauche et on retente l'insertion de la cl\u00e9\n...\nelse:\n# on cr\u00e9e un fils gauche\nself.gauche = ...\nelif cle &gt; ... :\n# on ins\u00e8re \u00e0 droite\nif ... :\n# on descend \u00e0 droite et on retente l'insertion de la cl\u00e9\n...\nelse:\n# on cr\u00e9e un fils droit\n... = Noeud(cle)\n</code></pre> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>inserer</code> afin qu'elle permette d\u2019ins\u00e9rer un n\u0153ud dans l\u2019arbre binaire de recherche propos\u00e9, \u00e0 l\u2019aide de sa cl\u00e9.</p> <p>Voici un exemple d'utilisation :</p> <pre><code>&gt;&gt;&gt; arbre = Noeud(7)\n&gt;&gt;&gt; for cle in (3, 9, 1, 6):\narbre.inserer(cle)\n&gt;&gt;&gt; arbre.gauche.getValeur()\n3\n&gt;&gt;&gt; arbre.droit.getValeur()\n9\n&gt;&gt;&gt; arbre.gauche.gauche.getValeur()\n1\n&gt;&gt;&gt; arbre.gauche.droit.getValeur()\n6\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/41_1/correction/","title":"Correction","text":"<pre><code>def recherche(caractere, chaine):\nsomme = 0\nfor lettre in chaine:\nif lettre == caractere:\nsomme += 1\nreturn somme\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/41_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>recherche(caractere, chaine)</code> qui prend en param\u00e8tres <code>caractere</code>, un unique caract\u00e8re (c\u2019est-\u00e0-dire une cha\u00eene de caract\u00e8re de longueur 1), et <code>chaine</code>, une cha\u00eene de caract\u00e8res. Cette fonction renvoie le nombre d\u2019occurrences de <code>caractere</code> dans <code>chaine</code>, c\u2019est-\u00e0-dire le nombre de fois o\u00f9 <code>caractere</code> appara\u00eet dans chaine.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche('e', \"sciences\")\n2\n&gt;&gt;&gt; recherche('i',\"mississippi\")\n4\n&gt;&gt;&gt; recherche('a',\"mississippi\")\n0\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/41_2/correction/","title":"Correction","text":"<pre><code>valeurs = [100,50,20,10,5,2,1]\ndef rendu_glouton(a_rendre, rang):\nif a_rendre == 0:\nreturn []\nv = valeurs[rang]\nif v &lt;= a_rendre :\nreturn [v] + rendu_glouton(a_rendre - v, rang)\nelse :\nreturn rendu_glouton(a_rendre, rang + 1)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/41_2/enonce/","title":"Enonce","text":"<p>On s\u2019int\u00e9resse \u00e0 un algorithme r\u00e9cursif qui permet de rendre la monnaie \u00e0 partir d\u2019une liste donn\u00e9e de valeurs de pi\u00e8ces et de billets.</p> <p>Le syst\u00e8me mon\u00e9taire est donn\u00e9 sous forme d\u2019une liste <code>valeurs = [100, 50, 20, 10, 5, 2, 1]</code>. On suppose que les pi\u00e8ces et billets sont disponibles sans limitation.</p> <p>On cherche \u00e0 donner la liste des valeurs \u00e0 rendre pour une somme donn\u00e9e en argument. L\u2019algorithme utilis\u00e9 est de type glouton.</p> <p>Compl\u00e9ter le code Python ci-dessous de la fonction <code>rendu_glouton</code> qui impl\u00e9mente cet algorithme et renvoie la liste des pi\u00e8ces \u00e0 rendre.</p> <pre><code>valeurs = [100, 50, 20, 10, 5, 2, 1]\ndef rendu_glouton(a_rendre, rang):\nif a_rendre == 0:\nreturn ...\nv = valeurs[rang]\nif v &lt;= ... :\nreturn ... + rendu_glouton(a_rendre - v, rang)\nelse :\nreturn rendu_glouton(a_rendre, ...)\n</code></pre> <p>On devra obtenir :</p> <pre><code>&gt;&gt;&gt;rendu_glouton(67, 0)\n[50, 10, 5, 2]\n&gt;&gt;&gt;rendu_glouton(291, 0)\n[100, 100, 50, 20, 20, 1]\n&gt;&gt;&gt; rendu_glouton(291,1) # si on ne dispose pas de billets de 100\n[50, 50, 50, 50, 50, 20, 20, 1]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/42_1/correction/","title":"Correction","text":"<pre><code>def tri_selection(tab):\nfor i in range(len(tab)-1):\nindice_min = i\nfor j in range(i+1, len(tab)):\nif tab[j] &lt; tab[indice_min]:\nindice_min = j\ntab[i], tab[indice_min] = tab[indice_min], tab[i]\nreturn tab\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/42_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>tri_selection</code> qui prend en param\u00e8tre une liste <code>tab</code> de nombres entiers et qui renvoie la liste tri\u00e9e par ordre croissant. Il est demand\u00e9 de ne pas cr\u00e9er de nouvelle liste mais de modifier celle fournie.</p> <p>On utilisera l\u2019algorithme suivant :</p> <ul> <li>on recherche le plus petit \u00e9l\u00e9ment de la liste, en la parcourant du rang 0 au dernier rang, et on l'\u00e9change avec l'\u00e9l\u00e9ment d'indice 0 ;</li> <li>on recherche ensuite le plus petit \u00e9l\u00e9ment de la liste restreinte du rang 1 au dernier rang, et on l'\u00e9change avec l'\u00e9l\u00e9ment d'indice 1 ;</li> <li>on continue de cette fa\u00e7on jusqu'\u00e0 ce que la liste soit enti\u00e8rement tri\u00e9e.</li> </ul> <p>Exemple : </p><pre><code>&gt;&gt;&gt; tri_selection([1, 52, 6, -9, 12])\n[-9, 1, 6, 12, 52]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/42_2/correction/","title":"Correction","text":"<pre><code>from random import randint\ndef plus_ou_moins():\nnb_mystere = randint(1,99)\nnb_test = int(input('Proposez un nombre entre 1 et 99 : '))\ncompteur = 1\nwhile nb_mystere != nb_test and compteur &lt; 10 :\ncompteur = compteur + 1\nif nb_mystere &gt; nb_test:\nnb_test = int(input('Trop petit ! Testez encore : '))\nelse:\nnb_test = int(input('Trop grand ! Testez encore : '))\nif nb_mystere == nb_test:\nprint ('Bravo ! Le nombre \u00e9tait ', nb_mystere)\nprint('Nombre d essais: ', compteur)\nelse:\nprint ('Perdu ! Le nombre \u00e9tait ', nb_mystere)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/42_2/enonce/","title":"Enonce","text":"<p>Le jeu du \u00ab plus ou moins \u00bb consiste \u00e0 deviner un nombre entier choisi entre 1 et 99.</p> <p>Un \u00e9l\u00e8ve de NSI d\u00e9cide de le coder en langage Python de la mani\u00e8re suivante :</p> <ul> <li>le programme g\u00e9n\u00e8re un nombre entier al\u00e9atoire compris entre 1 et 99 ;</li> <li>si la proposition de l\u2019utilisateur est plus petite que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ;</li> <li>si la proposition de l\u2019utilisateur est plus grande que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ;</li> <li>si l\u2019utilisateur trouve le bon nombre en 10 essais ou moins, il gagne ;</li> <li>si l\u2019utilisateur a fait plus de 10 essais sans trouver le bon nombre, il perd.</li> </ul> <p>La fonction <code>randint</code> est utilis\u00e9e. Si a et b sont des entiers tels que <code>a &lt;= b</code>, <code>randint(a,b)</code> renvoie un nombre entier compris entre <code>a</code> et <code>b</code>.</p> <p>Compl\u00e9ter le code ci-dessous et le tester :</p> <pre><code>from random import randint\ndef plus_ou_moins():\nnb_mystere = randint(1,...)\nnb_test = int(input(\"Proposez un nombre entre 1 et 99 : \"))\ncompteur = ...\nwhile nb_mystere != ... and compteur &lt; ... :\ncompteur = compteur + ...\nif nb_mystere ... nb_test:\nnb_test = int(input(\"Trop petit ! Testez encore : \"))\nelse:\nnb_test = int(input(\"Trop grand ! Testez encore : \"))\nif nb_mystere == nb_test:\nprint (\"Bravo ! Le nombre \u00e9tait \",...)\nprint(\"Nombre d'essais: \",...)\nelse:\nprint (\"Perdu ! Le nombre \u00e9tait \",...)\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/43_1/correction/","title":"Correction","text":"<pre><code>def ecriture_binaire_entier_positif(n):\n# cas particulier pour n = 0\nif n == 0:\nreturn [0]\n# cas g\u00e9n\u00e9ral\nb = []\nwhile n != 0:\nb.append(n % 2)\nn = n // 2\nb.reverse()\nreturn b\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/43_1/enonce/","title":"Enonce","text":"<p>\u00c9crire une fonction <code>ecriture_binaire_entier_positif</code> qui prend en param\u00e8tre un entier positif <code>n</code> et renvoie une liste d'entiers correspondant \u00e0 l\u2018\u00e9criture binaire de <code>n</code>.</p> <p>Ne pas oublier d\u2019ajouter au corps de la fonction une documentation et une ou plusieurs assertions pour v\u00e9rifier les pr\u00e9-conditions.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; ecriture_binaire_entier_positif(0)\n[0]\n&gt;&gt;&gt; ecriture_binaire_entier_positif(2)\n[1, 0]\n&gt;&gt;&gt; ecriture_binaire_entier_positif(105)\n[1, 1, 0, 1, 0, 0, 1]\n</code></pre> <p>Aide :</p> <ul> <li>l'op\u00e9rateur <code>//</code> donne le quotient de la division euclidienne : <code>5//2</code> donne <code>2</code> ;</li> <li>l'op\u00e9rateur <code>%</code> donne le reste de la division euclidienne :<code>5%2</code> donne <code>1</code> ;</li> <li><code>append</code> est une m\u00e9thode qui ajoute un \u00e9l\u00e9ment \u00e0 une liste existante : Soit <code>T=[5,2,4]</code>, alors <code>T.append(10)</code> ajoute <code>10</code> \u00e0 la liste <code>T</code>. Ainsi, <code>T</code> devient <code>[5,2,4,10]</code>.</li> <li><code>reverse</code> est une m\u00e9thode qui renverse les \u00e9l\u00e9ments d'une liste. Soit <code>T=[5,2,4,10]</code>. Apr\u00e8s <code>T.reverse()</code>, la liste devient <code>[10,4,2,5]</code>.</li> </ul> <p>On remarquera qu\u2019on r\u00e9cup\u00e8re la repr\u00e9sentation binaire d\u2019un entier <code>n</code> en partant de la gauche en appliquant successivement les instructions :</p> <p><code>b = n%2</code></p> <p><code>n = n//2</code></p> <p>r\u00e9p\u00e9t\u00e9es autant que n\u00e9cessaire.</p>"},{"location":"assets/sujets/nsi/term/pratique/43_2/correction/","title":"Correction","text":"<pre><code>def tri_bulles(T):\n'''\n    Renvoie le tableau T tri\u00e9 par ordre croissant\n    '''\nn = len(T)\nfor i in range(n-1,-1,-1):\nfor j in range(i):\nif T[j] &gt; T[j+1]:\ntemp = T[j]\nT[j] = T[j+1]\nT[j+1] = temp\nreturn T\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/43_2/enonce/","title":"Enonce","text":"<p>La fonction <code>tri_bulles</code> prend en param\u00e8tre une liste <code>T</code> d\u2019entiers non tri\u00e9s et renvoie la liste tri\u00e9e par ordre croissant.</p> <p>Le tri \u00e0 bulles est un tri en place qui commence par placer le plus grand \u00e9l\u00e9ment en derni\u00e8re position en parcourant la liste de gauche \u00e0 droite et en \u00e9changeant au passage les \u00e9l\u00e9ments voisins mal ordonn\u00e9s (si la valeur de l\u2019\u00e9l\u00e9ment d\u2019indice <code>i</code> a une valeur strictement sup\u00e9rieure \u00e0 celle de l\u2019indice <code>i + 1</code>, ils sont \u00e9chang\u00e9s). Le tri place ensuite en avant-derni\u00e8re position le plus grand \u00e9l\u00e9ment de la liste priv\u00e9e de son dernier \u00e9l\u00e9ment en proc\u00e9dant encore \u00e0 des \u00e9changes d\u2019\u00e9l\u00e9ments voisins. Ce principe est r\u00e9p\u00e9t\u00e9 jusqu\u2019\u00e0 placer le minimum en premi\u00e8re position.</p> <p>Exemple : pour trier la liste <code>[7, 9, 4, 3]</code> :</p> <ul> <li>premi\u00e8re \u00e9tape : 7 et 9 ne sont pas \u00e9chang\u00e9s, puis 9 et 4 sont \u00e9chang\u00e9s, puis 9 et 3 sont \u00e9chang\u00e9s, la liste est alors <code>[7, 4, 3, 9]</code></li> <li>deuxi\u00e8me \u00e9tape : 7 et 4 sont \u00e9chang\u00e9s, puis 7 et 3 sont \u00e9chang\u00e9s, la liste est alors <code>[4, 3, 7, 9]</code></li> <li>troisi\u00e8me \u00e9tape : 4 et 3 sont \u00e9chang\u00e9s, la liste est alors <code>[3, 4, 7, 9]</code></li> </ul> <p>Compl\u00e9ter le code Python ci-dessous qui impl\u00e9mente la fonction tri_bulles.</p> <pre><code>def tri_bulles(T):\n'''\n    Renvoie le tableau T tri\u00e9 par ordre croissant\n    '''\nn = len(T)\nfor i in range(...,...,-1):\nfor j in range(i):\nif T[j] &gt; T[...]:\n... = T[j]\nT[j] = T[...]\nT[j+1] = temp\nreturn T\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; tri_bulles([])\n[]\n&gt;&gt;&gt; tri_bulles([7])\n[7]\n&gt;&gt;&gt; tri_bulles([9, 3, 7, 2, 3, 1, 6])\n[1, 2, 3, 3, 6, 7, 9]\n&gt;&gt;&gt; tri_bulles([9, 7, 4, 3])\n[3, 4, 7, 9]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/44_1/correction/","title":"Correction","text":"<pre><code>def renverse(mot):\nsol = ''\nfor lettre in mot:\nsol = lettre + sol\nreturn sol\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/44_1/enonce/","title":"Enonce","text":"<p>Programmer une fonction <code>renverse</code>, prenant en param\u00e8tre une cha\u00eene de caract\u00e8res non vide <code>mot</code> et renvoie une cha\u00eene de caract\u00e8res en inversant ceux de la cha\u00eene <code>mot</code>.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; renverse(\"informatique\")\n\"euqitamrofni\"\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/44_2/correction/","title":"Correction","text":"<pre><code>def crible(n):\n\"\"\"\n    Renvoie un tableau contenant tous les nombres premiers plus petits que N\n    \"\"\"\npremiers = []\ntab = [True] * n\ntab[0], tab[1] = False, False\nfor i in range(2, n):\nif tab[i] == True:\npremiers.append(i)\nfor multiple in range(2*i, n, i):\ntab[multiple] = False\nreturn premiers\nassert crible(40) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/44_2/enonce/","title":"Enonce","text":"<p>Un nombre premier est un nombre entier naturel qui admet exactement deux diviseurs distincts entiers et positifs : 1 et lui-m\u00eame. </p> <p>Le crible d\u2019\u00c9ratosth\u00e8ne permet de d\u00e9terminer les nombres premiers plus petit qu\u2019un certain nombre <code>n</code> fix\u00e9. </p> <p>On consid\u00e8re pour cela un tableau <code>tab</code> de <code>n</code>bool\u00e9ens, initialement tous \u00e9gaux \u00e0 <code>True</code>, sauf <code>tab[0]</code> et <code>tab[1]</code> qui valent <code>False</code>, 0 et 1 n\u2019\u00e9tant pas des nombres premiers.  </p> <p>On parcourt alors ce tableau de gauche \u00e0 droite.  </p> <p>Pour chaque indice <code>i</code> :</p> <ul> <li> <p>si <code>tab[i]</code> vaut <code>True</code> : le nombre <code>i</code> est premier et on donne la valeur <code>False</code> \u00e0 toutes les cases du tableau dont l\u2019indice est un multiple de <code>i</code>, \u00e0 partir de <code>2*i</code> (c\u2019est-\u00e0-dire <code>2*i</code>, <code>3*i</code> ...).</p> </li> <li> <p>si <code>tab[i]</code> vaut <code>False</code> : le nombre <code>i</code> n\u2019est pas premier et on n\u2019effectue aucun changement sur le tableau. </p> </li> </ul> <p>On dispose de la fonction <code>crible</code>, incompl\u00e8te et donn\u00e9e ci-dessous, prenant en param\u00e8tre un entier <code>n</code> strictement positif et renvoyant un tableau contenant tous les nombres premiers plus petits que <code>n</code>.</p> <pre><code>def crible(n):\n\"\"\"\n    Renvoie un tableau contenant tous les nombres premiers plus petits que N\n    \"\"\"\npremiers = []\ntab = [True] * n\ntab[0], tab[1] = False, False\nfor i in range(..., n):\nif tab[i] == ...:\npremiers.append(...)\nfor multiple in range(2*i, n, ...):\ntab[multiple] = ...\nreturn premiers\nassert crible(40) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]\n</code></pre> <p>Compl\u00e9ter le code de cette fonction.</p>"},{"location":"assets/sujets/nsi/term/pratique/45_1/correction/","title":"Correction","text":"<pre><code>def rangement_valeurs(notes_eval):\nlst = [0]*11\nfor note in notes_eval:\nlst[note] += 1\nreturn lst\ndef notes_triees(effectifs_notes):\ntriees = []\nfor i in range(11):\nif effectifs_notes[i] != 0:\nfor _ in range(effectifs_notes[i]):\ntriees.append(i)\nreturn triees\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/45_1/enonce/","title":"Enonce","text":"<p>On veut trier par ordre croissant les notes d\u2019une \u00e9valuation qui sont des nombres entiers compris entre 0 et 10 (inclus).</p> <p>Ces notes sont contenues dans une liste <code>notes_eval</code>.</p> <p>\u00c9crire une fonction <code>rangement_valeurs</code> prenant en param\u00e8tre la liste <code>notes_eval</code> et renvoyant une liste de longueur 11 telle que la valeur de cette liste \u00e0 chaque rang est \u00e9gale au nombre de notes valant ce rang. Ainsi le terme de rang 0 indique le nombre de note 0, le terme de rang 1 le nombre de note 1, etc.</p> <p>\u00c9crire ensuite une fonction <code>notes_triees</code> prenant en param\u00e8tre la liste des effectifs des notes et renvoyant une liste contenant la liste, tri\u00e9e dans l\u2019ordre croissant, des notes des \u00e9l\u00e8ves.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; notes_eval = [2, 0, 5, 9, 6, 9, 10, 5, 7, 9, 9, 5, 0, 9, 6, 5, 4]\n&gt;&gt;&gt; effectifs_notes = rangement_valeurs(notes_eval)\n&gt;&gt;&gt; effectifs_notes\n[2, 0, 1, 0, 1, 4, 2, 1, 0, 5, 1]\n&gt;&gt;&gt; notes_triees(effectifs_notes)\n[0, 0, 2, 4, 5, 5, 5, 5, 6, 6, 7, 9, 9, 9, 9, 9, 10]\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/45_2/correction/","title":"Correction","text":"<pre><code>def dec_to_bin(nb_dec):\nq, r = nb_dec // 2, nb_dec % 2\nif q == 0:\nreturn str(r)\nelse:\nreturn dec_to_bin(q) + str(r)\ndef bin_to_dec(nb_bin):\nif nb_bin == '0':\nreturn 0\nelif nb_bin == '1':\nreturn 1\nelse:\nif nb_bin[-1] == '0':\nbit_droit = 0\nelse:\nbit_droit = 1\nreturn 2 * bin_to_dec(nb_bin[:-1]) + bit_droit\n</code></pre>"},{"location":"assets/sujets/nsi/term/pratique/45_2/enonce/","title":"Enonce","text":"<p>L\u2019objectif de cet exercice est d\u2019\u00e9crire deux fonctions r\u00e9cursives <code>dec_to_bin</code> et <code>bin_to_dec</code> assurant respectivement la conversion de l\u2019\u00e9criture d\u00e9cimale d\u2019un nombre entier vers son \u00e9criture en binaire et, r\u00e9ciproquement, la conversion de l\u2019\u00e9criture en binaire d\u2019un nombre vers son \u00e9criture d\u00e9cimale.</p> <p>Dans cet exercice, on s\u2019interdit l\u2019usage des fonctions Python <code>bin</code> et <code>int</code>.</p> <p>On rappelle sur l\u2019exemple ci-dessous une fa\u00e7on d\u2019obtenir l\u2019\u00e9criture en binaire du nombre 25 :</p> <p>\\(25 = 1 + 2 \\times 12\\) \\(\\phantom{25} = 1 + 2 \\times 12\\) \\(\\phantom{25} = 1 + 2 (0 + 2 \\times 6)\\) \\(\\phantom{25} = 1 + 2 (0 + 2 (0 + 2 \\times 3))\\) \\(\\phantom{25} = 1 + 2 (0 + 2 (0 + 2 (1 + 2 \\times 1)))\\) \\(\\phantom{25} = 1 \\times 2^0 + 0 \\times 2^1 + 0 \\times 2^2 + 1 \\times 2^3 + 1 \\times 2^4\\) </p> <p>L'\u00e9criture binaire de 25 est donc <code>11001</code>.</p> <p>0n rappelle \u00e9galement que :</p> <ul> <li><code>a // 2</code> renvoie le quotient de la division euclidienne de <code>a</code> par 2.</li> <li><code>a % 2</code> renvoie le reste dans la division euclidienne de <code>a</code> par 2.</li> </ul> <p>On indique enfin qu\u2019en Python si <code>mot = \"informatique\"</code> alors :</p> <ul> <li><code>mot[-1]</code> renvoie <code>'e'</code>, c\u2019est-\u00e0-dire le dernier caract\u00e8re de la cha\u00eene de caract\u00e8res <code>mot</code>.</li> <li><code>mot[:-1]</code> renvoie <code>'informatiqu'</code> , c\u2019est-\u00e0-dire l\u2019ensemble de la cha\u00eene de caract\u00e8res <code>mot</code> priv\u00e9e de son dernier caract\u00e8re.</li> </ul> <p>Compl\u00e9ter, puis tester, les codes de deux fonctions ci-dessous.  On pr\u00e9cise que la fonction r\u00e9cursive <code>dec_to_bin</code> prend en param\u00e8tre un nombre entier et renvoie une cha\u00eene de caract\u00e8res contenant l\u2019\u00e9criture en binaire du nombre pass\u00e9 en param\u00e8tre.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; dec_to_bin(25)\n'11001'\n</code></pre> <p>La fonction r\u00e9cursive <code>bin_to_dec</code> prend en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant l\u2019\u00e9criture d\u2019un nombre en binaire et renvoie l\u2019\u00e9criture d\u00e9cimale de ce nombre.</p> <pre><code>&gt;&gt;&gt; bin_to_dec('101010')\n42\n</code></pre> <pre><code>def dec_to_bin(nb_dec):\nq, r = nb_dec // 2, nb_dec % 2\nif q == ...:\nreturn str(r)\nelse:\nreturn dec_to_bin(...) + ...\ndef bin_to_dec(nb_bin):\nif nb_bin == '0':\nreturn 0\nelif ...:\nreturn 1\nelse:\nif nb_bin[-1] == '0':\nbit_droit = 0\nelse:\nbit_droit = ...\nreturn ... * bin_to_dec(nb_bin[:-1]) + ...\n</code></pre>"},{"location":"bac/","title":"Vers le bac","text":""},{"location":"bac/#banque-de-sujets","title":"Banque de sujets","text":"<p>Les sujets de tronc commun et de la sp\u00e9 abandonn\u00e9e sont disponibles ci-dessous.</p> <p>Troncs Communs</p> Allemand Premi\u00e8re <p>C1CALLE00022-wg C1CALLE00024-kreativer-protest C1CALLE00027-varusschlacht C1CALLE00028-otto-hahn C1CALLE00029-umwelt C1CALLE00031-integration C1CALLE02135-internet-forum-heimat C1CALLE02136-treffen-von-jungen-europaern C1CALLE02137-tourismus-soziale-netzwerke C1CALLE02311-lofft-leipzig C1CALLE02314-social_media_star_rezo C1CALLE02315-wald C1CALLE02318-altersarmut C1CALLE02319-neue-heimat-in-m\u00fcnster C1CALLE02322-planeten-zerst\u00f6ren C1CALLE02323-politisch-engagiert C1CALLE02324-m\u00e4rchen C1CALLE02325-mit-h\u00e4nden-sehen C1CALLE02326-seenothelfer C1CALLE02328-wohnen-auf-probe C1CALLE02329-malverbot C1CALLE02330-weisse-rose_flugblatt C1CALLE02332-momo C1CALLE02333-integration-durch-fussball C1CALLE02334-interkulturelles-kennenelernen C1CALLE02335-weltzeituhr C1CALLE02336-kinderstadt C1CALLE03828-mobile-jugend C1CALLE03829-reise-durch-deutschland C1CALLE03830-warum-eltern-ihre-kinder-nicht-in-die-schule-schicken C1CALLE03832-wir-leben-hier C1CALLE04026-k\u00fcnstler-in-der-gesellschaft C1CALLE04027-malerin-lotte-laserstein C1CALLE04028-kunst-gegen-\u00fcberwachung C1CALLE04029-luisa-neubauer-die-strategin C1CALLE04030-nachhaltigkeit-aktivistin-am-herd C1CALLE04031-integration-im-fu\u00dfball C1CALLE04033-wie-die-stolpersteine-an-ns-opfer-erinnern C1CALLE04035-sprache-der-musik C1CALLE04037-paula-b C1CALLE04038-klima-und-fl\u00fcchtlinge C1CALLE04039-stolpersteine C1CALLE04591-handydemo-valid\u00e9-national C1CALLE04592-chip-unter-der-haut-valid\u00e9-national C1CALLE04593-sport-fur-die-umwelt-valid\u00e9-national C1CALLE04594-kunstvolle-integration-valid\u00e9-national C1CALLE04595-sport-verbinet-valid\u00e9-national C1CALLE04597-der-anne-frank-tag-valid\u00e9-national C1CALLE04598-der-anne-frank-tag-valid\u00e9-national C1CALLE04599-mauer-in-den-kopfen-valid\u00e9-national C1CALLE04600-einfach-nur-weg-valid\u00e9-national C1CALLE04601-verfolgte-schriftsteller-valid\u00e9-national C1CALLE04602-eltern-valid\u00e9-national C1CALLE04603-gleichberechtigung-valid\u00e9-national C1CALLE04604-lili-marleen-valid\u00e9-national C1CALLE04605-grune-apps-valid\u00e9-national C1CALLE04606-smartphones C1CALLE04607-feminismus C1CALLE04608-grossmutter C1CALLE04609-hambacher-forst C1CALLE04610-umweltschutz C1CALLE04611-die-neuen C1CALLE04612-von-jakutsk-nach-hamburg C1CALLE04613-himmel C1CALLE04614-stolpersteine C1CALLE04615-geschichten C1CALLE04616-ost-west-austausch C1CALLE04617-grossstadt-oder-land C1CALLE04619-shirts-gegen-rassismus C1CALLE04620-anne-frank-tag C1CALLE04621-fluchtling C1CALLE04622-greta-und-neubauer C1CALLE04623-neubaeur C1CALLE04625-sport-im-rollstuhl C1CALLE04626-die-kuchenuhr C1CALLE04627-neues-land C1CALLE04628-stephansdom C1CALLE06114-neue-heimat-in-munster C1CALLE06115-auf-dem-spielplatz-bin-ich-ein-exot C1CALLE06116-ich-bin-hausfrau-na-und C1CALLE06117-ich-wil-mit-meiner-arbeit-nicht-mehr-den-planeten-zerstoren C1CALLE06118-warum-kinder-marchen-brauchen C1CALLE06119-bilder-mit-handen-sehen C1CALLE06120-aus-auszeit-wurde-langes-abenteuer C1CALLE06121-mission-rettung C1CALLE06122-fussballweltmeistreschaft C1CALLE06123-probewohnen-in-gorlitz C1CALLE06124-kann-man-bilder-verbieten C1CALLE06125-digitale-helden C1CALLE06126-soziale-medien C1CALLE06127-jugend-demonstriert-politik-ignoriert C1CALLE06128-momo-wie-beppo-arbeitet C1CALLE06129-kunstfleisch C1CALLE06130-fussball_deutschland-kann-lernen C1CALLE06131-gemeinsam-leben-und-entdecken C1CALLE06132-jahre-weltzeituhr C1CALLE06133-gorlitz_eine-stadt-fur-alle C1CALLE06134-aufruf-an-alle-deutsche C1CALLE06235-austausch-durch-kochen C1CALLE06236A-reise-durch-deutschland C1CALLE06237-wir-leben-hier C1CALLE06238-diskussion-um-wahlrecht C1CALLE06240-warum-eltern-ihre-kinder-nicht-in-die-schule-schicken C1CALLE06241-geistiges-eigentum C1CALLE06242-kunstler-in-der-gesellschaft C1CALLE06243-malerin-lotte-laserstein C1CALLE06244-aktivistin-am-herd C1CALLE06245-luisa-neubauer-die-strategin C1CALLE06246-intregration-im-fubball C1CALLE06247-geburtstag-von-anne-franck C1CALLE06248-wie-die-stolpersteine-an-ns-opfer-erinnern C1CALLE06249-equal-pay-day C1CALLE06250-paula-beer C1CALLE06251-stolpersteine C1CALLE06252-mehr-spass-in-der-schule-mit-tablets C1CALLE06253-kleiner-emil C1CALLE06254-surfen-fur-weniger-mull-im-meer C1CALLE06255-sport-verbindet C1CALLE06256-1989-die-jugend-geht-auf-die-strasse C1CALLE06257-alex-und-die-medien C1CALLE06258-jugendbegegnung EC2-ALL-axe 1-Foodsharing EC2-ALL-Axe1_identit\u00e9s_et_\u00e9changes_alte_Heimat_neue_Heimat-B EC2-ALL-Axe1_identit\u00e9s_et_\u00e9changes_mobile_Jugend-B EC2-ALL-axe 1-Sprache der Musik EC2-ALL-Axe2_espace_priv\u00e9_espace_public_Sch\u00fcler_machen_Lokalpolitik EC2-ALL-axe2 Zukunftsschule EC2-ALL-Axe4_citoyennet\u00e9_et_mondes_virtuels_Kunst_gegen_\u00dcberwachung-B EC2-ALL-Axe4_ Kinder_demonstrieren_gegen_Handy-Eltern EC2-ALL-axe 6 Chip-unter der Haut EC2-ALL-axe 7-Kunstvolle Integration EC2-ALL-axe7-Wenn Generationen aufeinandertreffen EC2-ALL-axe 8-Der Anne-Frank-Tag EC2-ALL-Axe8_Territoire_et_m\u00e9moire_Roman_Deutsches_Haus EC2-ALL-axe8-Zirkeltag</p> Terminale <p>CTCALLE05799B-buchmesse-bilinguale-erziehung CTCALLE05800B-heimat-hier-vs-heimat CTCALLE05801B-heimat CTCALLE05802B-fluchtlingsintegration CTCALLE05803B-integration-durch-sport-und-sprache CTCALLE05804B-integration-in-deutschland CTCALLE05805B-integration-und-fremdenhass CTCALLE05806B-integration-sprache-vs-sport CTCALLE05807B-kulturen CTCALLE05808B-muttersprache CTCALLE05809B-traum-von-amerika-die-neuen-gastarbeiter CTCALLE05810B-zusammen-order-getrennt CTCALLE05811B-freiheit-und-staat CTCALLE05812B-datenschutz CTCALLE05813B-beruf-und-familie CTCALLE05814B-legt-doch-mal-das-ding-weg CTCALLE05815B-frau-in-der-ddr-wohnungsnot CTCALLE05816B-gefahren-der-modernen-technologien-im-alltag CTCALLE05817B-hausfrau-vs-frauenkarrieren- CTCALLE05818B-kontakt CTCALLE05819B-neue-rollenverteillung CTCALLE05820B-quotenfrau-homeoffice CTCALLE05821B-rollenverteilung CTCALLE05822B-telearbeit-frauenwahlrecht CTCALLE05823B-umkehr CTCALLE05824B-kunst-in-der-der-gesellschaft CTCALLE05825B-kunst-ist-die-brucke CTCALLE05826B-strassenkunst-als-politische-waffe CTCALLE05827B-corona-krise CTCALLE05828B-freiheit CTCALLE05829B-macht-der-musik CTCALLE05830B-mephisto_-zitat-schiller CTCALLE05831B-dix-schwimmwesten CTCALLE05832B-sich-einsetzen CTCALLE05833B-street-art-_-bucherverbrennug CTCALLE05834B-tanz-und-musik CTCALLE05835B-vernunft CTCALLE05836B-wohnkunst CTCALLE05837B-citoyennet\u00e9-et-monde-virtuel-internet_-und-meinungsfreiheit CTCALLE05838B-familienbild CTCALLE05839B-home-office CTCALLE05840B-mein-handy-und-ich CTCALLE05841B-sparchlose-familie CTCALLE05842B-corona-und-homeoffice-generation-smartphone- CTCALLE05843B-digitalisierung-gefahr-vs-fortschritt CTCALLE05844B-gefangen CTCALLE05845B-kommunikation CTCALLE05846B-kunstliche-intelligenz-vs-roboter CTCALLE05847B-neue-regeln CTCALLE05848B-smombies-zitat-kling CTCALLE05849B-alltagshelden-rotkappchen CTCALLE05850B-deutsche-mythen CTCALLE05851B-verschworungstheorien CTCALLE05852B-kunstliche-intelligenz CTCALLE05853B-mitgefuhl CTCALLE05854B-sissi-durre CTCALLE05855B-umwelt CTCALLE05856B-genrisiko CTCALLE05857B-idioten CTCALLE05858B-innovation CTCALLE05859B-nachhaltigkeitsinitiativen CTCALLE05860B-auto-und-elektromobilitat-PieceJointe-1 CTCALLE05861B-gruene-lunge-in-gefahr CTCALLE05862B-kunstliche-intelligenz CTCALLE05863B-umwelt-und-konsun CTCALLE05864B-roboter CTCALLE05865B-klimapolitik CTCALLE05866B-klimaschutz-und-mobilitaet CTCALLE05867B-roboter-becherheld CTCALLE05868B-verantwortung CTCALLE05869B-anders-sein CTCALLE05870B-ausgegrenzt CTCALLE05871B-inklusionsklasse CTCALLE05872B-jeder-ist-ein-genie CTCALLE05873B-sport-und-vielfalt CTCALLE05874B-inklusion-behinderter-und-alterer-menschen CTCALLE05875B-inklusion CTCALLE05876B-integration-durch-sport CTCALLE05877B-lesen CTCALLE05878B-toleranz-sprachkurs CTCALLE05879B-vielfalt-herkunft-vs-sexualitat CTCALLE05880B-vielfalt-vs-schutzwall CTCALLE05881B-100-jahre-erster-weltkrieg CTCALLE05882B-berlin-9-novembre-1989 CTCALLE05883B-berlin-eine-pulsienrende-geschichte CTCALLE05884B-berliner-mauer-zitat-herzog CTCALLE05885B-erinnerung-im-offentlichen-raum CTCALLE05886B-mauerfall-zollverein CTCALLE05887B-mauerfall-vs-einheit CTCALLE05888B-spuren-der-unterdruckung CTCALLE05889B-zwei-welten CTCALLE05890B-vergangeheitsbewaltingung CTCALLE05891B-verhangenheitsbewaltigung-erinnerungskultur CTCALLE05892B-was-bleibt CTCALLE06016A-auszeit CTCALLE06017A-gelungene-integration CTCALLE06018A-ruckker-nach-ostdeutschland CTCALLE06019A-kaiserin-sisi-und-romy-schneider CTCALLE06020A-einfluss-soziale-netzwerke CTCALLE06021A-macht-des-netzes CTCALLE06022A-zeitreise CTCALLE06023A-pfleger-unsere-helden CTCALLE06024A-das-automobil-und-berta-benz CTCALLE06025A-vergangenheit CTCALLE06026A-heimat-hier-heimat-dort CTCALLE06027A-turkei-hin-und-zuruck CTCALLE06028A-frauenbewegungen CTCALLE06029A-kunstliche-intelligenz-in-der-privatsphare CTCALLE06030A-spione-fruher-und-heute CTCALLE06031A-kunst-gegen-rechtsextreme CTCALLE06032A-kunstliche-intelligenz-im-alltag CTCALLE06033A-virtuelle-realitat CTCALLE06034A-die-gegenwartige-zukunft CTCALLE06035A-literatur-und-fanstasie CTCALLE06036A-nachhaltigkeit CTCALLE06037A-neue-technologien-neue-mobilitat CTCALLE06038A-wissenschaft-und-hygiene CTCALLE06039A-haus-der-zukunft-in-bremen CTCALLE06040A-telefon CTCALLE06041A-in-beinden-kulturen-zu-hause CTCALLE06042A-jahre-wiedervereinigung CTCALLE06043A-zeitzeugen CTCALLE06044A-mehrsprachigkeit CTCALLE06045A-zwischen-zwei-kulturen CTCALLE06046A-gleichberechtigung CTCALLE06047A-kunst CTCALLE06048A-uberwachung CTCALLE06049A-mythos-frauen CTCALLE06050A-rheingold CTCALLE06051A-kayak-oder-flugzeug CTCALLE06052A-inklusion CTCALLE06053A-lieder-und-geschichte CTCALLE06083A-heimat CTCALLE06084A-geschlechterstereotype CTCALLE06085A-graffiti CTCALLE06086A-kunstler-engagieren-sich CTCALLE06087A-attentat-auf-hitler CTCALLE06088A-engagement CTCALLE06089A-inklusion CTCALLE06090B-reisen-mit-zitat CTCALLE06091B-starke-frau CTCALLE06092B-entartete-kunst-und-hanau CTCALLE06093B-weihnachten-und-herbstferien CTCALLE06094B-halb-voll-oder-leer CTCALLE06095B-macht-der-ideen-nachhalting-wohnen CTCALLE06096B-generation-und-buntes-leben CTCALLE06097B-geschichtsbuch-und-ddr-museum CTCALLE06098B-heimat CTCALLE06099B-reisen CTCALLE06100B-frauenrechte CTCALLE06101B-frauen CTCALLE06102B-berliner-mauer CTCALLE06103B-kunst-ist-frei CTCALLE06104B-informationen-teilen CTCALLE06105B-smombies CTCALLE06106B-marchen-zitat CTCALLE06107B-vorurteile CTCALLE06108B-atombombe CTCALLE06109B-forschung CTCALLE06110B-vielfalt CTCALLE06111B-barrieren-der-gesellschaft CTCALLE06112B-gedenken-zitat-h-kohl CTCALLE06113B-zwischen-uns-die-mauer EC3-ALL-A-axe1-Alte und junge Auswanderer EC3-ALL-A-Axe 1-Gelebte Integration EC3-ALL-A-Axe 1 Heimat EC3-ALL-A-axe1-Identit\u00e4t, Herkunft und Lebensgeschichte EC3-ALL-A-axe2-soziale Netzwerke  EC3-ALL-A-axe3-Kultur im Dritten Reich EC3-ALL-A-axe3-Streetart EC3-ALL-A-axe4-Fahrgemeinschaften EC3-ALL-A-Axe 4-Pflanzen f\u00fcr die Erde EC3-ALL-A-axe5-Die Drei Fragezeichen EC3-ALL-A-axe5-Kunstfreiheit EC3-ALL-A-axe5-M\u00e4rchen  EC3-ALL-A-axe5-unser Leben mit Algorithmen EC3-ALL-A-axe6-Konsum und Umwelt EC3-ALL-A-axe7-Ein H\u00e4uschen f\u00fcr alle EC3-ALL-A-Axe 7 Vorurteile abbauen EC3-ALL-A-axe8-Erinnerung und Medien EC3-ALL-A-axe8-Nachwendegeneration EC3-ALL-A-GEN-TECH-axe1-Migration EC3-ALL-A-GEN-TECH-axe1-Schweiz EC3-ALL-A-GEN-TECH-axe2-Wohnen EC3-ALL-A-GEN-TECH-axe4-Erziehung EC3-ALL-A-GEN-TECH-axe4-Fake news EC3-ALL-A-GEN-TECH-axe5-M\u00e4rchen EC3-ALL-A-GEN-TECH-axe6-Die Welt \u00e4ndern EC3-ALL-A-GEN-TECH-axe7-Integration EC3-ALL-A-GEN-TECH-axe7-Integration von Fl\u00fcchtlingen EC3-ALL-A-GEN-TECH-axe8-Gedenken EC3-LVA-ALL-axe6-Konsum und Umwelt</p> Anglais Premi\u00e8re <p>C1CANGL02551-stop-buying-clothes C1CANGL02552-the-best-job C1CANGL02553-a-view-from-the-train C1CANGL02554-facial-recognition C1CANGL02555-future-plans C1CANGL02556-games-and-education C1CANGL02557-language-and-code-switching C1CANGL02558-on-being-a-man-and-masculinity C1CANGL02559-the-power-of-books C1CANGL02560-harriet-tubman C1CANGL02561-music C1CANGL02562-the-art-of-banksy C1CANGL02563-the-power-of-art C1CANGL02564-robot-teachers C1CANGL02565-climate-change C1CANGL02566-colonising-mars C1CANGL02567-dystopia C1CANGL02568-dystopian-fiction C1CANGL02569-superheroes C1CANGL02570-toni-morrison-s-legacy C1CANGL02571-cloning C1CANGL02572-connected-objects C1CANGL02573-facial-recognition-and-civil-liberties C1CANGL02574-robots C1CANGL02575-driving-future C1CANGL02576-african-american-museum C1CANGL02577-dolls-of-all-colours C1CANGL02578-segregation C1CANGL02579-celebrating-australia-day C1CANGL02580-remembering-the-1969-moon-landing C1CANGL03792-the-meeting C1CANGL03793-dad-s-shadow C1CANGL03794-death-of-the-most-british-thing C1CANGL03796-indigenous-prom-dresses C1CANGL03799-the-hindi-bindi-club C1CANGL03801-welsh-and-black C1CANGL03802-from-emmeline-pankhurst-to-megan-rapinoe- C1CANGL03803-gender-pay-gap-in-sports C1CANGL03804-inside-the-bubble C1CANGL03805-aretha-franklin C1CANGL03806-national-symbols C1CANGL03808-1984 C1CANGL03809-an-american-dream C1CANGL03811-history-and-drama-in-the-crown-tv-series C1CANGL03812-photography-and-photojournalism C1CANGL03815-queens-on-screen C1CANGL03816-the-drowned-world C1CANGL03818-the-girl-on-the-train C1CANGL03819-the-handmaid-s-tale C1CANGL03821-the-murderer C1CANGL03822-a-robot-called-hester C1CANGL03924-environmental-music C1CANGL03938-exoskeletons C1CANGL03958-a-black-veteran C1CANGL03965-canadian-indian-residential-schools C1CANGL03966-tattoos C1CANGL03967-the-amish-community C1CANGL03968-women-in-wwi C1CANGL03969-a-queen-in-the-world C1CANGL03970-aboriginal-australia C1CANGL03971-august-1914-in-australia C1CANGL03972-follow-the-rabbit-proof-fence C1CANGL03973-forgotten-heroes C1CANGL03974-my-marion C1CANGL03975-stopping-the-dakota-access-pipeline GEN-TECH-EC2-ANGL_Axe1_Amiens_Same_city_different_worlds GEN-TECH-EC2-ANGL_Axe1_Bordeaux_Residential_schools_in_Canada GEN-TECH-EC2-ANGL_Axe1_Clermont_Sneakers_In_South_Africa GEN-TECH-EC2-ANGL_Axe1_Grenoble_Challenging_stereotypes GEN-TECH-EC2-ANGL_Axe1_Lyon_Language_and_identity GEN-TECH-EC2-ANGL_Axe1_Toulouse_A_part-time_Indian GEN-TECH-EC2-ANGL_Axe2_Clermont_Outdoor_living GEN-TECH-EC2-ANGL_Axe2_Dijon_Working_from_home GEN-TECH-EC2-ANGL_Axe2_Toulouse_A_female_slave_narrative GEN-TECH-EC2-ANGL_Axe3_Amiens_Aretha_Franklin GEN-TECH-EC2-ANGL_Axe3_Bordeaux_Art_as_a_political_weapon GEN-TECH-EC2-ANGL_Axe3_Lyon_Art_and_social_issues GEN-TECH-EC2-ANGL_Axe3_Montpellier_Students_calls_to_remove_controversial_fresco GEN-TECH-EC2-ANGL_Axe4_Montpellier_A_Nigerian_youth-led_digital_movement GEN-TECH-EC2-ANGL_Axe4_PCV_Voice_assistants GEN-TECH-EC2-ANGL_Axe5_Bordeaux_Superheroes_and_politics GEN-TECH-EC2-ANGL_Axe5_Clermont_A_movie_addict GEN-TECH-EC2-ANGL_Axe6_Amiens_Innovation_and_ethics GEN-TECH-EC2-ANGL_Axe6_Amiens_Robo_sapienses GEN-TECH-EC2-ANGL_Axe6_Clermont_Future_education GEN-TECH-EC2-ANGL_Axe6_Dijon_Robot_nannies GEN-TECH-EC2-ANGL_Axe6_Grenoble_Space_exploration GEN-TECH-EC2-ANGL_Axe6_Lyon_The_UK_and_the_environment GEN-TECH-EC2-ANGL_Axe7_Grenoble_Black_ballerina GEN-TECH-EC2-ANGL_Axe7_Toulouse_The_goldfish_boy GEN-TECH-EC2-ANGL_Axe8_Bordeaux_Dust_Bowl_industrialization_in_the_1920s GEN-TECH-EC2-ANGL_Axe8_Dijon_Troubles_tourism GEN-TECH-EC2-ANGL_Axe8_Lyon_Indigenous_peoples_day GEN-TECH-EC2-ANGL_Axe8_Montpellier_Mystic_river_in_New_Zealand GEN-TECH-EC2-ANGL_Axe8_Toulouse_Mohawk_skywalkers</p> Terminale <p>CTCANGL06532A-british-royals-and-the-commonwealth CTCANGL06533A-gap-year CTCANGL06534A-indigenous-identity-and-values CTCANGL06535A-music-language-and-identity CTCANGL06536A-scottish-identity CTCANGL06537A-the-power-of-diaries CTCANGL06538A-tourism-and-voluntourism CTCANGL06539A-british-women-s-suffrage CTCANGL06540A-facial-recognition-surveillance CTCANGL06541A-gender-pay-gap CTCANGL06542A-housemates CTCANGL06543A-school-and-technology CTCANGL06544A-we-should-all-be-feminists CTCANGL06545A-when-it-comes-to-gender CTCANGL06546A-working-from-home CTCANGL06547A-african-american-voices CTCANGL06548A-art-s-testimony-of-injustice CTCANGL06549A-banksy-s-provocative-humour CTCANGL06550A-marvel-s-black-panther CTCANGL06551A-political-murals CTCANGL06552A-the-power-of-public-statuary CTCANGL06553A-activism-through-social-media CTCANGL06554A-down-with-big-brother CTCANGL06555A-information-manipulation CTCANGL06556A-social-media-influencers CTCANGL06557A-teen-activists CTCANGL06558A-the-benefits-of-video-games CTCANGL06559A-work-from-home CTCANGL06560A-dystopian-stories CTCANGL06561A-real-life-superheroes CTCANGL06562A-science-fiction-and-science-facts CTCANGL06563A-californian-wildfires CTCANGL06564A-climate-change-impacts CTCANGL06565A-robotics-and-new-technologies CTCANGL06566A-robots-and-cyborgs CTCANGL06567A-space-conquest CTCANGL06568A-where-does-cloning-lead-us CTCANGL06569A-who-owns-outer-space CTCANGL06570A-americans-with-disabilities CTCANGL06571A-bringing-people-together-with-language CTCANGL06572A-discrimination-at-school CTCANGL06573A-diversity-is-not-a-threat CTCANGL06574A-diversity-on-screens CTCANGL06575A-education-and-inclusion-in-america CTCANGL06576A-environmental-racism CTCANGL06577A-keeping-native-american-languages-relevant CTCANGL06578A-latinx-representation-in-mainstream-media CTCANGL06579A-racial-and-cultural-differences CTCANGL06580A-the-candian-dream CTCANGL06581A-working-for-equality CTCANGL06582A-california-s-culture-of-risk-taking CTCANGL06583A-dark-legacy-of-slavery CTCANGL06584A-inuit-forced-relocation CTCANGL06585A-land-of-the-maori CTCANGL06586A-native-americans-want-more-than-an-apology CTCANGL06587A-reconsidering-the-past CTCANGL06588A-remembering-england-s-industrial-past CTCANGL06589A-removing-statues CTCANGL06590A-statue-toppling CTCANGL06591A-what-s-in-a-name GEN-TECH-EC3-ANG_A_Axe1_Lille_British_culinary_culture GEN-TECH-EC3-ANG_A_Axe1_Lille_Eco-tourism GEN-TECH-EC3-ANG_A_Axe1_Lyon_Cultural_assimilation GEN-TECH-EC3-ANG_A_Axe1_PCV_Going_to_university GEN-TECH-EC3-ANG_A_Axe2_La_Re\u0301union_Gender_inequality GEN-TECH-EC3-ANG_A_Axe2_Lille_The_American_mall GEN-TECH-EC3-ANG_A_Axe2_Lyon_New_types_of_schools GEN-TECH-EC3-ANG_A_Axe2_Montpellier_Gender_neutral_toys GEN-TECH-EC3-ANG_A_Axe2_PCV_Naming_female_artists_or_not GEN-TECH-EC3-ANG_A_Axe3_La_Re\u0301union_Criminal_justice_reform GEN-TECH-EC3-ANG_A_Axe3_PCV_Murals GEN-TECH-EC3-ANG_A_Axe3_Rennes_Poetry_and_politics GEN-TECH-EC3-ANG_A_Axe3_Rennes_Removing_statues GEN-TECH-EC3-ANG_A_Axe5_Lyon_Biopics GEN-TECH-EC3-ANG_A_Axe5_Montpellier_Into_the_wild GEN-TECH-EC3-ANG_A_Axe5_PCV_Women_stories_in_history GEN-TECH-EC3-ANG_A_Axe6_Clermont_3D_printing GEN-TECH-EC3-ANG_A_Axe6_Clermont_Mission_to_the_moon GEN-TECH-EC3-ANG_A_Axe6_La_Re\u0301union_Social_media_and_mood GEN-TECH-EC3-ANG_A_Axe6_Lille_AI_robotics GEN-TECH-EC3-ANG_A_Axe6_PCV_Space_tourism GEN-TECH-EC3-ANG_A_Axe6_PCV_The_green_New_Deal GEN-TECH-EC3-ANG_A_Axe6_Rennes_Space_tourism GEN-TECH-EC3-ANG_A_Axe7_La_Re\u0301union_Raising_boys GEN-TECH-EC3-ANG_A_Axe7_Lille_Segregation_and_integration_of_African-Americans GEN-TECH-EC3-ANG_A_Axe7_Lille_Women_empowerment GEN-TECH-EC3-ANG_A_Axe7_Montpellier_Body_positivity GEN-TECH-EC3-ANG_A_Axe7_PCV_First_Nations_and_reconciliation GEN-TECH-EC3-ANG_A_Axe8_Clermont_Australian_Aborigenes GEN-TECH-EC3-ANG_A_Axe8_Clermont_Native_Americans_then_and_now GEN-TECH-EC3-ANG_A_Axe8_Lille_Native_Americans'land GEN-TECH-EC3-ANG_A_Axe8_Lyon_Renaming_and_remembering GEN-TECH-EC3-ANG_A_Axe8_PCV_Controversial_American_holidays</p> Espagnol Premi\u00e8re <p>C1CESPA04075-la-patria C1CESPA04076-sobreturismo C1CESPA04077-turistas-en-chilo\u00e9 C1CESPA04079-una-vida-mejor C1CESPA04080-espagnol-axe-1-301 C1CESPA04081-espagnol-axe1-302 C1CESPA04082-espagnol-axe1-313 C1CESPA04083-espagnol-axe1-314 C1CESPA04084-espagnol-axe1-324 C1CESPA04085-espagnol-axe2-303 C1CESPA04086-espagnol-axe2-304 C1CESPA04087-espagnol-axe2-315 C1CESPA04088-espagnol-axe2-316 C1CESPA04089-espagnol-axe3-305 C1CESPA04090-espagnol-axe3-317 C1CESPA04091-espagnol-axe3-325 C1CESPA04092-espagnol-axe4-309 C1CESPA04093-espagnol-axe4-318 C1CESPA04094-espagnol-axe5-306 C1CESPA04095-espagnol-axe5-307 C1CESPA04096-espagnol-axe6-308 C1CESPA04097-espagnol-axe6-319 C1CESPA04098-espagnol-axe6-326 C1CESPA04099-espagnol-axe6-327 C1CESPA04100-espagnol-axe-7-310 C1CESPA04101-espagnol-axe-7-320 C1CESPA04102-espagnol-axe-7-328 C1CESPA04103-espagnol-axe-7-329 C1CESPA04104-espagnol-axe-7-330 C1CESPA04105-espagnol-axe-8-311 C1CESPA04106-espagnol-axe-8-312 C1CESPA04107-espagnol-axe-8-321 C1CESPA04108-espagnol-axe-8-322 C1CESPA04109-espagnol-axe-8_323 C1CESPA04110-espagnol-axe-8-331 C1CESPA04111-espagnol-axe-8-332 C1CESPA04112-espagnol-axe-8-333 C1CESPA04145-el-hermano-menor-axe1 C1CESPA04146-langosta C1CESPA04147-desigualdades-axe2 C1CESPA04148-igualad-amo-de-casa-axe2 C1CESPA04149-la-brecha-de-g\u00e9nero-axe2 C1CESPA04150-reivindicar-la-igualdad-axe2 C1CESPA04151-un-genio-axe2 C1CESPA04152-crear-vinculos-axe2 C1CESPA04153-cuando-era-maestra-en-los-anos-30 C1CESPA04154-mi-juventud-en-murcia C1CESPA04155-arte-y-poder-emigracion-axe3 C1CESPA04156-doris-salcedoarte-y-lucha-axe3 C1CESPA04157-escribir-para-contarlo-axe3 C1CESPA04158-la-nueve-axe-3 C1CESPA04159-mujer-en-el-teatro-axe3 C1CESPA04160-armas-de-papel-y-tinta-axe3 C1CESPA04161-el-barco-de-los-refugiados-espanoles C1CESPA04162-la-musica-como-proyecto-social C1CESPA04163-si-es-legal-no-es-grafiti C1CESPA04164-ganar-dinero-jugando C1CESPA04165-informacion-o-desinformacion C1CESPA04166-la-realidad-virtual C1CESPA04167-cielos-virtuales C1CESPA04168-conectados-para-cambiar-el-mundo C1CESPA04169-un-hombre-de-poder C1CESPA04170-contando-historias C1CESPA04171-una-leyenda-mapuche C1CESPA04172-pachamama C1CESPA04173-rosario-tijeras C1CESPA04174-el-kraken C1CESPA04175-en-la-biblioteca C1CESPA04176-la-vida-imaginaria-de-ximena C1CESPA04177-un-dia-inolvidable C1CESPA04178-con-o-sin-carne C1CESPA04179-revelacion-y-clonacion C1CESPA04180-la-muerte-de-un-cachalote C1CESPA04181-por-el-peru-del-mundo C1CESPA04182-sin-conexion C1CESPA04183-terapia-transgenica C1CESPA04184-mujeres-y-deporte C1CESPA04185-bullicio-madrileno C1CESPA04186-el-silencio-de-yungo C1CESPA04187-luchar-contra-el-acoso-ayer-y-hoy C1CESPA04188-mi-hermana-nona C1CESPA04189-no-hablamos-el-mismo-idioma C1CESPA04190-solidaridad-ciudadana C1CESPA04191-la-despoblacion-de-espana C1CESPA04192-olvidar-o-recordar C1CESPA04193-pasar-la-frontera C1CESPA04195-hacia-la-frontera C1CESPA04629-espagnol-317 C1CESPA04631-espagnol-319 C1CESPA04632-espagnol-320 C1CESPA04633-espagnol-321 C1CESPA04634-espagnol-322 C1CESPA04635-espagnol-323 C1CESPA04636-espagnol-324 C1CESPA04637-espagnol-325 C1CESPA04638-espagnol-326 C1CESPA04639-espagnol-327 C1CESPA04640-espagnol-328 C1CESPA04641-espagnol-330 C1CESPA04642-espagnol-331 C1CESPA04643-espagnol-332 C1CESPA04644-espagnol-333 C1CESPA04645-espagnol-204 C1CESPA04646-espagnol-209 C1CESPA04647-espagnol-210 C1CESPA04648-espagnol-212 C1CESPA04649-espagnol-401 C1CESPA04650-espagnol-402 C1CESPA04651-espagnol-403 C1CESPA04652-espagnol-404 C1CESPA04653-espagnol-405 C1CESPA04654-espagnol-406 C1CESPA04655-espagnol-407 C1CESPA04656-espagnol-408 C1CESPA04657-espagnol-409 C1CESPA04658-espagnol-410 C1CESPA04659-espagnol-411 C1CESPA04660-espagnol-412 C1CESPA04661-espagnol-413 C1CESPA04662-espagnol-414 C1CESPA04663-espagnol-415 C1CESPA04664-espagnol-416 C1CESPA04665-espagnol-417 C1CESPA04666-espagnol-418 C1CESPA04667-espagnol-419 C1CESPA04668-espagnol-420 C1CESPA04669-espagnol-421 C1CESPA04670-espagnol-422 C1CESPA04671-espagnol-423 C1CESPA04672-espagnol-424 C1CESPA04673-espagnol-425 C1CESPA04674-espagnol-426 C1CESPA04675-espagnol-427 C1CESPA04676-espagnol-428 C1CESPA04677-espagnol-428 C1CESPA04678-espangol-201 C1CESPA04679-espagnol-205 C1CESPA04680-espagnol-206 C1CESPA04681-espagnol-207 C1CESPA04682-espagnol-208 C1CESPA04683-espagnol-213 C1CESPA04684-espagnol-214 C1CESPA04685-espagnol-215 C1CESPA04686-espagnol-216 C1CESPA04687-espagnol-217 C1CESPA04688-espagnol-218 C1CESPA04689-espagnol-219 C1CESPA04690-espagnol-220 C1CESPA04691-espagnol-221 C1CESPA04692-espagnol-222 C1CESPA05286-cambiar-de-profesion C1CESPA05287-la-pedreda-en-barcelona C1CESPA05288-pionera-del-futbol C1CESPA05289-internet-contra-la-despoblacion C1CESPA05290-nativos-digitales C1CESPA05291-palabras C1CESPA05292-paraiso-inhabitado C1CESPA05293-se-busca-trabajo C1CESPA05294-un-profesor-desactualizado EVAL 1ere - Espagnol - Axe 1 - Mestizaje - A01 - 101 EVAL 1ere - Espagnol - Axe 1 - Turismo y turismofobia - A01 - 101 EVAL 1ere - Espagnol - Axe 2 - La maestra - A01 - 101 EVAL 1ere - Espagnol - Axe 2 - La tarta de cumpleanos - A01 - 101 EVAL 1ere - Espagnol - Axe 2 - Mujeres - A01 - 101 EVAL 1ere - ESPAGNOL - AXE2 - No soy la hila de - A16 - 301 EVAL 1ere - Espagnol - Axe 3 - Arte urbano - A01 - 101 EVAL 1ere - Espagnol - Axe 3 - Lectura - A01 - 101 EVAL 1ere - Espagnol - Axe 4 - Conectados y desconectados - A01 - 101 EVAL 1ere - Espagnol - Axe 4 - Red social y feminismo - A01 - 101 EVAL1ere-ESPAGNOL-Axe5-Ficcion como medicina-A28-401 EVAL 1ere - ESPAGNOL - AXE5 - Qu\u00e9 bonito poder escribir-A19-101 EVAL 1ere -ESPAGNOL-AXE 6-Insectos-A07-101 EVAL 1ere -ESPAGNOL-AXE 8- El Per\u00fa, pa\u00eds de todas las sangres-A07-101 EVAL 1ere LVA \u2013 ESPAGNOL - AXE1 - Comida - A22 - 301 EVAL 1ere LVA - ESPAGNOL - AXE2 - El protagonismo de las mujeres en ciencias - A08 - 301 EVAL 1ere LVA - ESPAGNOL - AXE6 - El entorno - A31 - 301 EVAL 1ere - LVB -ESPAGNOL-AXE 5-Mi madre-A07-101 Prem-ESPAGNOL-axe1-Emigrar Prem-ESPAGNOL-axe1- Pareja intercultural Prem-ESPAGNOL-axe1-Turismo responsable Prem-ESPAGNOL-axe2-Cholitas escaladoras Prem-ESPAGNOL-axe2-Segunda jornada de trabajo de las mujeres Prem-ESPAGNOL-axe3-PROPAGANDA Prem-ESPAGNOL-axe 4- Num\u00e9rique et dislexie PREM-ESPAGNOL-Axe5-Macondo Prem-ESPAGNOL-axe6- agricultura del futuro Prem-ESPAGNOL-axe6- Industria textil responsable </p> Terminale <p>CTCESPA05423B-fictions-et-r\u00e9alit\u00e9s-axe5 CTCESPA05424B-innovations-scientifiques-et-responsabilit\u00e9 CTCESPA05425B-innovations-scientifiques-et-responsabilit\u00e9 CTCESPA05426B-diversit\u00e9-et-inclusion CTCESPA05427B-diversit\u00e9-et-inclusion CTCESPA05428B-territoire-et-m\u00e9moire CTCESPA05429B-art-et-pouvoir CTCESPA05430A-citoyennet\u00e9-et-mondes-virtuels CTCESPA05431B-llegar-a-otro-mundo CTCESPA05432B-el-poder-de-las-mujeres CTCESPA05433B-herencia CTCESPA05434B-iguales CTCESPA05435B-vicent-axe4 CTCESPA05436B-robots CTCESPA05437B-cultura-y-libertad CTCESPA05438B-noticias-falsas CTCESPA05439B-experience-de-viajes CTCESPA05440B-el-arte-lo-cambia-todo CTCESPA05441B-redes-sociales CTCESPA05442B-experiencias-de-lectores CTCESPA05443B-exito-immigrantes-latinos CTCESPA05444B-turismofobia CTCESPA05445B-igualdad CTCESPA05446B-censura CTCESPA05447B-desinformacion CTCESPA05448B-nuevas-tecnologias CTCESPA05449B-beneficios-lectura CTCESPA05450B-reciclaje-y-consumo-responsable CTCESPA05451B-feminismo CTCESPA05452B-lucha-contra-la-homofobia CTCESPA06000A-arte-urbano CTCESPA06001A-igualdad-genero CTCESPA06002A-prejuicios-roles-genero CTCESPA06003A-arte-contrapoder-dictadura CTCESPA06004A-artista-comprometido-muralismo CTCESPA06005A-brecha-digital CTCESPA06006A-redes-sociales-integracion-exclusion CTCESPA06007A-proteger-el-planeta CTCESPA06008A-solidaridad-mayores CTCESPA06009A-desaparecidos CTCESPA06010A-la-ruta-de-don-quijote CTCESPA06011A-turismo-barcelona-madrid CTCESPA06012A-librerias CTCESPA06065B-zapatos-rojos CTCESPA06066B-veganismo CTCESPA06067B-indigenas CTCESPA06068B-migraciones CTCESPA06069B-igualdad CTCESPA06070B-censure-y-arte-callejero CTCESPA06071B-yescka CTCESPA06072B-communicados-o-incomunicados CTCESPA06073B-la-casa-de-papel-en-la-realidad CTCESPA06074B-raices CTCESPA06135A-la-cultura-hispana-enrique-la-cultura-americana CTCESPA06136A-videojuegos CTCESPA06137A-la-magia-del-cine CTCESPA06138A-los-personajes-de-quino-arquetipos-sociales CTCESPA06139A-hombre-o-maquina CTCESPA06140A-cine-espanol-en-femenino-PieceJointe-1 CTCESPA06141A-exiliio-republicano-en-francia CTCESPA06143A-turismofobia CTCESPA06144A-elegir-un-futuro CTCESPA06145A-los-grafitis-de-la-ciudad-al-pueblo CTCESPA06146A-cartas-y-redes-sociales CTCESPA06147A-libros CTCESPA06148A-el-peligro-de-la-desinformacion CTCESPA06149A-reciclar-el-plastico-para-salvar-el-planeta CTCESPA06150A-cultura-cubana CTCESPA06151A-historia-colombiana CTCESPA06152A-la-importancia-de-salvar-la-cultura-indigena CTCESPA06153A-la-importancia-de-las-lenguas CTCESPA06154A-viajes-e-intercambios CTCESPA06155A-igualdad-de-genero CTCESPA06157A-recursos-naturales-para-el-planeta CTCESPA06158A-robots-y-hombres CTCESPA06159A-pueblos-indigenas CTCESPA06160A-pueblos-desaparecidos CTCESPA06161A-bulos-en-internet CTCESPA06162A-los-latinos-en-el-cine-in-hollywood CTCESPA06164A-artitas-comprometidos EVAL Tale - ESPAGNOL - A - AXE1 - La Espana rural - A12 - 101 EVAL Tale \u2013 ESPAGNOL - A - AXE 2 - RELACIONES INTERGENERACIONALES  - A18 - 401 EVAL Tale-ESPAGNOL-A-Axe5-Los beneficios de la lectura-A13-401 EVAL Tale \u2014 ESPAGNOL - Axe 2 - Estatus de la mujer - A27 - 401 EVAL Tale - ESPAGNOL - Temps 1 - AXE2 - Cine Bardem - A02 - 301 EVAL Tale - ESPAGNOL - Temps 2 - AXE1 - Menchu - A16 - 301 EVAL Tale - ESPAGNOL - Temps 2 - AXE3 - ARTE - A16 - 301 EVAL Tale LVA - ESPAGNOL - Temps 2 - AXE1 - Menchu - A16 - 301 EVAL Tale LVA - ESPAGNOL - Temps 2 - AXE3 - ARTE - A16 - 301 EVAL Tale Temps 1 - ESPAGNOL-A- AXE 5 - Contar, escribir, leer -A17-401 EVAL Tale Temps 1 - ESPAGNOL-A - AXE 7 - Artes e inclusi\u00f3n -A17-401 EVAL Terminale Temps 2 \u2013  LVB - ESPAGNOL - AXE5 - Realismo magico - A09 - 401 EVAL Terminale Temps 2 - LVB \u2013 ESPAGNOL - AXE6 - Plastico - A09 - 401 EVAL TLE -ESPAGNOL-A-AXE 1-Viaje solidario-A10-101 EVAL TLE -ESPAGNOL-A-AXE 2-Mujer, familia y trabajo-A10-101 EVAL TLE -ESPAGNOL-A-AXE 4-Acciones para luchar contra la exclusion digital-AO4-101 EVAL TLE -ESPAGNOL-A-AXE 5- El placer de leer-A04-101 EVAL TLE -ESPAGNOL-A-AXE 6-Ciudades sostenibles-A24-101 EVAL TLE -ESPAGNOL-A-AXE 7- las artes y la inclusion-A04-101 EVAL TLE -ESPAGNOL-A-AXE 8-Espana sigue escribiendo su historia-A04-101 EVAL TLE -ESPAGNOL-A-AXE 8- Heroes de Espana, heroes de Europa-A04-101 EVAL TLE  Temps 2-ESPAGNOL-AXE 1 -qu\u00e9 pa\u00eds quieres-A03-101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 1-Todos somos diferentes-A03-101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 2-Empoderamiento de las mujeres-A03-101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 3- Arte callejero-A03.101 EVAL TLE Temps 2- LVB -ESPAGNOL-AXE 3-Arte y compromiso-A03-101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 4-Escuela virtual desigual -A03-101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 5-Mafalda-futbolistas-A03.101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 6-reciclaje-A03.101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 7-represion linguistica y discriminacion racial-A03-101 EVAL TLE TEMPS 2 - LVB -ESPAGNOL-AXE 8-Memoria historica-A03-101 Term-ESPAGNOL-Axe5-Lectura Term-ESPAGNOL-axe6-Innovations scientifiques et responsabilit\u00e9 Term-ESPAGNOL-axe6-Inteligencia artificial Term-ESPAGNOL-axe6-La inteligencia artificial Term-ESPAGNOL-axe7 - Adopta un abuelo Term-ESPAGNOL-Axe7-Inclusi\u00f3n y oportunidades Term-ESPAGNOL-axe7-Integrar a los migrantes Term-ESPAGNOL-Axe7-Mujeres e igualdad Term-ESPAGNOL-axe8-Afrocolombianidad Term-ESPAGNOL-Axe8-Estatuas para la memoria Term-ESPAGNOL-axe8-Memoria Chile Term-ESPAGNOL-Axe8-Paz con memoria</p> Histoire &amp; g\u00e9ographie Premi\u00e8re <p>G1CHIGE02432-sujet1 G1CHIGE02433-sujet2 G1CHIGE02434-sujet3 G1CHIGE02435-sujet4 G1CHIGE02436-sujet5 G1CHIGE02437-sujet6 G1CHIGE02438-sujet7 G1CHIGE02439-sujet8 G1CHIGE02440-sujet9 G1CHIGE02441-sujet10 G1CHIGE02442-sujet11 G1CHIGE02443-sujet12 G1CHIGE02444-sujet13 G1CHIGE02445-sujet14 G1CHIGE02446-sujet15 G1CHIGE02447-sujet16 G1CHIGE02448-sujet17 G1CHIGE02449-sujet18 G1CHIGE02450-sujet19 G1CHIGE02451-sujet20 G1CHIGE02452-sujet21 G1CHIGE02453-sujet22 G1CHIGE02454-sujet23 G1CHIGE02455-sujet24 G1CHIGE02456-sujet25 G1CHIGE02457-sujet26 G1CHIGE02458-sujet27 G1CHIGE02459-sujet28 G1CHIGE02460-sujet29 G1CHIGE02461-sujet30 G1CHIGE02462-sujet31 G1CHIGE02463-sujet32 G1CHIGE02464-sujet33 G1CHIGE02465-sujet34 G1CHIGE02466-sujet35 G1CHIGE02467-sujet36 G1CHIGE02468-sujet37 G1CHIGE02469-sujet38 G1CHIGE02470-sujet39 G1CHIGE02471-sujet40 G1CHIGE02472-sujet41 G1CHIGE02473-sujet42 G1CHIGE02474-sujet43 G1CHIGE02475-sujet44 G1CHIGE02476-sujet45 G1CHIGE02477-sujet46 G1CHIGE02478-sujet47 G1CHIGE02479-sujet48 G1CHIGE02480-sujet49 G1CHIGE02481-sujet50 G1CHIGE02482-sujet51 G1CHIGE02483-sujet52 G1CHIGE02484-sujet53 G1CHIGE02485-sujet54 G1CHIGE02486-sujet55 G1CHIGE02487-sujet56 G1CHIGE02488-sujet57 G1CHIGE02489-sujet58 G1CHIGE02490-sujet59 G1CHIGE02491-sujet60 G1CHIGE02492-sujet61 G1CHIGE02493-sujet62 G1CHIGE02494-sujet63 G1CHIGE02495-sujet64 G1CHIGE02496-sujet65 G1CHIGE02497-sujet66 G1CHIGE02498-sujet67 G1CHIGE02499-sujet68 G1CHIGE02500-sujet69 G1CHIGE02501-sujet70 G1CHIGE02502-sujet71 G1CHIGE02503-sujet72 G1CHIGE02504-sujet73 G1CHIGE02505-sujet74 G1CHIGE02506-sujet75 G1CHIGE02507-sujet76 G1CHIGE02508-sujet77 G1CHIGE02509-sujet78 G1CHIGE02510-sujet79 G1CHIGE02511-sujet80 G1CHIGE02512-sujet81 G1CHIGE02513-sujet82 G1CHIGE02514-sujet83 G1CHIGE02515-sujet84 G1CHIGE02516-sujet85 G1CHIGE02517-sujet86 G1CHIGE02518-sujet87 G1CHIGE02519-sujet88 G1CHIGE02520-sujet89 G1CHIGE02521-sujet90 G1CHIGE02522-sujet91 G1CHIGE02523-sujet92 G1CHIGE02524-sujet93 G1CHIGE02525-sujet94 G1CHIGE02526-sujet95 G1CHIGE02527-sujet96 G1CHIGE02528-sujet97 G1CHIGE02529-sujet98 G1CHIGE02530-sujet99 G1CHIGE02531-sujet100 G1CHIGE02532-sujet101 G1CHIGE02533-sujet102 G1CHIGE02534-sujet103 G1CHIGE02535-sujet104 G1CHIGE02536-sujet105 G1CHIGE02537-sujet106 G1CHIGE02538-sujet107 G1CHIGE02539-sujet108 G1CHIGE02540-sujet109 G1CHIGE02541-sujet110 G1CHIGE02542-sujet111 G1CHIGE02543-sujet112 G1CHIGE02544-sujet113 G1CHIGE02545-sujet114 G1CHIGE02546-sujet115 G1CHIGE02547-sujet116 G1CHIGE02548-sujet117 G1CHIGE02549-sujet118 G1CHIGE02550-sujet119</p> Terminale <p>GTCHIGE05509-qp_g1_qg_s1_cd_h1_1_s1 GTCHIGE05510-qp_g1_qg_s1_cd_h1_2_s1 GTCHIGE05511-qp_g1_qg_s1_cd_h1_2_s2 GTCHIGE05512-qp_g1_qg_s1_cd_h1_3_s1 GTCHIGE05513-qp_g1_qg_s1_cd_h2_1_s1 GTCHIGE05514-qp_g1_qg_s1_cd_h2_2_s1 GTCHIGE05515-qp_g1_qg_s1_cd_h2_2_s2 GTCHIGE05516-qp_g1_qg_s1_cd_h2_3_s1 GTCHIGE05517-qp_g1_qg_s1_cd_h3_1_s1 GTCHIGE05518-qp_g1_qg_s1_cd_h3_1_s2 GTCHIGE05519-qp_g1_qg_s1_cd_h3_2_s1 GTCHIGE05520-qp_g1_qg_s1_cd_h3_2_s2 GTCHIGE05521-qp_g1_qg_s2__cd_h1_1_s1 GTCHIGE05522-qp_g1_qg_s2_cd_h1_2_s1 GTCHIGE05523-qp_g1_qg_s2_cd_h1_2_s2 GTCHIGE05524-qp_g1_qg_s2_cd_h1_3_s1 GTCHIGE05525-qp_g1_qg_s2_cd_h2_1_s1 GTCHIGE05526-qp_g1_qg_s2_cd_h2_2_s1 GTCHIGE05527-qp_g1_qg_s2_cd_h2_2_s2 GTCHIGE05528-qp_g1_qg_s2_cd_h2_3_s1 GTCHIGE05529-qp_g1_qg_s2_cd_h3_1_s1 GTCHIGE05530-qp_g1_qg_s2_cd_h3_1_s2 GTCHIGE05531-qp_g1_qg_s2_cd_h3_2_s1 GTCHIGE05532-qp_g1_qg_s2_cd_h3_2_s2 GTCHIGE05533-qp_g1_qg_s3_cd_h1_1_s1 GTCHIGE05534-qp_g1_qg_s3_cd_h1_2_s1 GTCHIGE05535-qp_g1_qg_s3_cd_h1_2_s2 GTCHIGE05536-qp_g1_qg_s3_cd_h1_3_s1 GTCHIGE05537-qp_g1_qg_s3_cd_h2_1_s1 GTCHIGE05538-qp_g1_qg_s3_cd_h2_2_s1 GTCHIGE05539-qp_g1_qg_s3_cd_h2_2_s2 GTCHIGE05540-qp_g1_qg_s3_cd_h2_3_s1 GTCHIGE05541-qp_g1_qg_s3_cd_h3_1_s1 GTCHIGE05542-qp_g1_qg_s3_cd_h3_a_s2 GTCHIGE05543-qp_g1_qg_s3_cd_h3_2_s1 GTCHIGE05544-qp_g1_gq_s3_cd_h3_2_s2 GTCHIGE05545-qp_g1_qs_s1_cd_h1_1_s1 GTCHIGE05546-qp_g1_qs_s1_cd_h1_2_s1 GTCHIGE05547-qp_g1_qs_s1_cd_h1_2_s2 GTCHIGE05548-qp_g1_qs_s1_cd_h1_3_s1 GTCHIGE05551-qp_g1_qs_s1_cd_h2_1_s1 GTCHIGE05552-qp_g1_qs_s1_cd_h2_2_s1 GTCHIGE05553-qp_g1_qs_s1_cd_h2_2_s2 GTCHIGE05554-qp_g1_qs_s1_cd_h2_3_s1 GTCHIGE05555-qp_g1_qs_s1_cd_h3_1_s1 GTCHIGE05556-qp_g1_qs_s1_cd_h3_1_s2 GTCHIGE05557-qp_g1_qs_s1_cd_h3_2_s1 GTCHIGE05558-qp_g1_qs_s1_cd_h3_2_s2 GTCHIGE05559-qp_g2_qg_s1_cd_h1_1_s1 GTCHIGE05560-qp_g2_qg_s1_cd_h1_2_s1 GTCHIGE05561-qp_g2_qg_s1_cd_h1_2_s2 GTCHIGE05562-qp_g2_qg_s1_cd_h1_3_s1 GTCHIGE05563-qp_g2_qg_s1_cd_h2_1_s1 GTCHIGE05564-qp_g2_qg_s1_cd_h2_2_s1 GTCHIGE05565-qp_g2_qg_s1_cd_h2_2_s2 GTCHIGE05566-qp_g2_qg_s1_cd_h2_3_s1 GTCHIGE05567-qp_g2_qg_s1_cd_h3_1_s1 GTCHIGE05568-qp_g2_qg_s1_cd_h3_1_s2 GTCHIGE05569-qp_g2_qg_s1_cd_h3_2_s1 GTCHIGE05570-qp_g2_qg_s1_cd_h3_2_s2 GTCHIGE05571-qp_g2_qg_s2_cd_h1_1_s1 GTCHIGE05572-qp_g2_qg_s2_cd_h1_2_s1 GTCHIGE05573-qp_g2_qg_s2_cd_h1_2_s2 GTCHIGE05574-qp_g2_qg_s2_cd_h1_3_s1 GTCHIGE05575-qp_g2_qg_s2_cd_h2_1_s1 GTCHIGE05576-qp_g2_qg_s2_cd_h2_2_s1 GTCHIGE05577-qp_g2_qg_s2_cd_h2_2_s2 GTCHIGE05578-qp_g2_qg_s2_cd_h2_3_s1 GTCHIGE05579-qp_g2_qg_s2_cd_h3_1_s1 GTCHIGE05580-qp_g2_qg_s2_cd_h3_1_s2 GTCHIGE05581-qp_g2_qg_s2_cd_h3_2_s1 GTCHIGE05582-qp_g2_qg_s2_cd_h3_2_s2 GTCHIGE05583-qp_g2_qg_s3_cd_h1_1_s1 GTCHIGE05584-qp_g2_qg_s3_cd_h1_2_s1 GTCHIGE05585-qp_g2_qg_s3_cd_h1_2_s2 GTCHIGE05586-qp_g2_qg_s3_cd_h1_3_s1 GTCHIGE05587-qp_g2_qg_s3_cd_h2_1_s1 GTCHIGE05588-qp_g2_qg_s3_cd_h2_2_s1 GTCHIGE05589-qp_g2_qg_s3_cd_h2_2_s2 GTCHIGE05590-qp_g2_qg_s3_cd_h2_3_s1 GTCHIGE05591-qp_g2_qg_s3_cd_h3_1_s1 GTCHIGE05592-qp_g2_qg_s3_cd_h3_1_s2 GTCHIGE05593-qp_g2_qg_s3_cd_h3_2_s1 GTCHIGE05594-qp_g2_qg_s3_cd_h3_2_s2 GTCHIGE05595-qp_g2_qs_s1_cd_h1_1_s1 GTCHIGE05596-qp_g2_qs_s1_cd_h1_2_s1 GTCHIGE05597-qp_g2_qs_s1_cd_h1_2_s2 GTCHIGE05598-qp_g2_qs_s1_cd_h1_3_s1 GTCHIGE05599-qp_g2_qs_s1_s1_cd_h2_1_s1 GTCHIGE05600-qp_g2_qs_s1_cd_h2_2_s1 GTCHIGE05601-qp_g2_qs_s1_cd_h2_2_s2 GTCHIGE05602-qp_g2_qs_s1_cd_h2_3_s1 GTCHIGE05603-qp_g2_qs_s1_cd_h3_1_s1 GTCHIGE05604-qp_g2_qs_s1_cd_h3_1_s2 GTCHIGE05605-qp_g2_qs_s1_cd_h3_2_s1 GTCHIGE05606-qp_g2_qs_s1_cd_h3_2_s2 GTCHIGE05607-qp_g3_qg_s1_cd_h1_1_s1 GTCHIGE05608-qp_g3_qg_s1_cd_h1_2_s1 GTCHIGE05609-qp_g3_qg_s1_cd_h1_2_s2 GTCHIGE05610-qp_g3_qg_s1_cd_h1_3_s1 GTCHIGE05611-qp_g3_qg_s1_cd_h2_1_s1 GTCHIGE05612-qp_g3_qg_s1_cd_h2_2_s1 GTCHIGE05613-qp_g3_qg_s1_cd_h2_2_s2 GTCHIGE05614-qp_g3_qg_s1_cd_h2_3_s1 GTCHIGE05615-qp_g3_qg_s1_cd_h3_1_s1 GTCHIGE05616-qp_g3_qg_s1_cd_h3_1_s2 GTCHIGE05617-qp_g3_qg_s1_cd_h3_2_s1 GTCHIGE05618-qp_g3_qg_s1_cd_h3_2_s2 GTCHIGE05619-qp_g3_qg_s2_cd_h1_1_s1 GTCHIGE05620-qp_g3_qg_s2_cd_h1_2_s1 GTCHIGE05621-qp_g3_qg_s2_cd_h1_2_s2 GTCHIGE05622-qp_g3_qg_s2_cd_h1_3_s1 GTCHIGE05623-qp_g3_qg_s2_cd_h2_1_s1 GTCHIGE05624-qp_g3_qg_s2_cd_h2_2_s1 GTCHIGE05625-qp_g3_qg_s2_cd_h2_2_s2 GTCHIGE05626-qp_g3_qg_s2_cd_h2_3_s1 GTCHIGE05627-qp_g3_qg_s2_cd_h3_1_s1 GTCHIGE05628-qp_g3_qg_s2_cd_h3_1_s2 GTCHIGE05629-qp_g3_qg_s2_cd_h3_2_s1 GTCHIGE05630-qp_g3_qg_s2_cd_h3_2_s2 GTCHIGE05631-qp_g3_qg_s3_cd_h1_1_s1 GTCHIGE05632-qp_g3_qg_s3_cd_h1_2_s1 GTCHIGE05633-qp_g3_qg_s3_cd_h1_2_s2 GTCHIGE05634-qpg3qgs3cdh13s1 GTCHIGE05635-qpg3qgs3cdh21s1 GTCHIGE05636-qpg3qgs3cdh22s1 GTCHIGE05637-qp_g3_qg_s3_cd_h2_2_s2 GTCHIGE05638-qpg3qgs3cdh23s1 GTCHIGE05639-qpg3qgs3cdh31s1 GTCHIGE05640-qpg3qgs3cdh31s2 GTCHIGE05641-qpg3qgs3cdh32s1 GTCHIGE05642-qpg3qgs3cdh32s2 GTCHIGE05643-qpg3qss1cdh11s1 GTCHIGE05644-qpg3qss1cdh12s1 GTCHIGE05645-qpg3qss1cdh12s2 GTCHIGE05646-qpg3qss1cdh13s1 GTCHIGE05647-qpg3qss1cdh22s1 GTCHIGE05648-qpg3qss1cdh22s2 GTCHIGE05649-qpg3qss1cdh23s1 GTCHIGE05650-qpg3qss1cdh31s1 GTCHIGE05651-qpg3qss1cdh31s2 GTCHIGE05652-qpg3qss1cdh32s1 GTCHIGE05653-qpg3qss1cdh32s2 GTCHIGE05654-qph11s1cdg1qgs1 GTCHIGE05655-qph11s1cdg1qgs2 GTCHIGE05656-qph11s1cdg1qss1 GTCHIGE05657-qph11s1cdg2qgs1 GTCHIGE05658-qph11s1cdg2qgs2 GTCHIGE05659-qph11s1cdg2qss1 GTCHIGE05660-qph11s1cdg3qgs1 GTCHIGE05661-qph11s1cdg3qss1 GTCHIGE05662-qph11s1cdg3qss2 GTCHIGE05663-qph11s1crg1qgs1 GTCHIGE05664-qph11s1crg2qgs1 GTCHIGE05665-qph11s1crg3qgs1 GTCHIGE05666-qph11s2cdg1qgs1 GTCHIGE05667-qph11s2cdg1qgs2 GTCHIGE05668-qph11s2cdg1qss1 GTCHIGE05669-qph11s2cdg2qgs1 GTCHIGE05670-qph11s2cdg2qgs2 GTCHIGE05671-qph11s2cdg2qss1 GTCHIGE05672-qph11s2cdg3qgs1 GTCHIGE05673-qph11s2cdg3qss1 GTCHIGE05674-qph11s2cdg3qss2 GTCHIGE05675-qph11s2crg1qgs1 GTCHIGE05676-qph11s2crg2qgs1 GTCHIGE05677-qph11s2crg3qgs1 GTCHIGE05678-qph12s1cdg1qgs1 GTCHIGE05679-qph12s1cdg1qgs2 GTCHIGE05680-qph12s1cdg1qss1 GTCHIGE05681-qph12s1cdg2qgs1 GTCHIGE05682-qph12s1cdg2qgs2 GTCHIGE05683-qph12s1cdg2qss1 GTCHIGE05684-qph12s1cdg3qgs1 GTCHIGE05685-qph12s1cdg3qss1 GTCHIGE05686-qph12s1cdg3qss2 GTCHIGE05687-qph12s1crg1qgs1 GTCHIGE05688-qph12s1crg2qgs1 GTCHIGE05689-qph12s1crg3qgs1 GTCHIGE05690-qph13s1cdg1qgs1 GTCHIGE05691-qph13s1cdg1qgs2 GTCHIGE05692-qph13s1cdg1qss1 GTCHIGE05693-qph13s1cdg2qgs1 GTCHIGE05694-qph13s1cdg2qgs2 GTCHIGE05695-qph13s1cdg2qss1 GTCHIGE05696-qph13s1cdg3qgs1 GTCHIGE05697-qph13s1cdg3qss1 GTCHIGE05698-qph13s1cdg3qss2 GTCHIGE05699-qph13s1crg1qgs1 GTCHIGE05700-qph13s1crg2qgs1 GTCHIGE05701-qph13s1crg3qgs1 GTCHIGE05702-qph21s1cdg1qgs1 GTCHIGE05703-qph21s1cdg1qgs2 GTCHIGE05704-qph21s1cdg1qss1 GTCHIGE05705-qph21s1cdg2qgs1 GTCHIGE05706-qph21s1cdg2qgs2 GTCHIGE05707-qph21s1cdg2qss1 GTCHIGE05708-qph21s1cdg3qgs1 GTCHIGE05709-qph21s1cdg3qss1 GTCHIGE05710-qph21s1cdg3qss2 GTCHIGE05711-qph21s1crg1qgs1 GTCHIGE05712-qph21s1crg2qgs1 GTCHIGE05713-qph21s1crg3qgs1 GTCHIGE05714-qph22s1cdg1qgs1 GTCHIGE05715-qph22s1cdg1qgs2 GTCHIGE05716-qph22s1cdg1qss1 GTCHIGE05717-qph22s1cdg2qgs1 GTCHIGE05718-qph22s1cdg2qgs2 GTCHIGE05719-qph22s1cdg2qss1 GTCHIGE05720-qph22s1cdg3qgs1 GTCHIGE05721-qph22s1cdg3qss1 GTCHIGE05722-qph22s1cdg3qss2 GTCHIGE05723-qph22s1crg1qgs1 GTCHIGE05724-qph22s1crg2qgs1 GTCHIGE05725-qph22s1crg3qgs1 GTCHIGE05726-qph22s2cdg1qgs1 GTCHIGE05727-qph22s2cdg1qgs2 GTCHIGE05728-qph22s2cdg1qss1 GTCHIGE05729-qph22s2cdg2qgs1 GTCHIGE05730-qph22s2cdg2qgs2 GTCHIGE05731-qph22s2cdg2qss1 GTCHIGE05732-qph22s2cdg3qgs1 GTCHIGE05733-qph22s2cdg3qss1 GTCHIGE05734-qph22s2cdg3qss2 GTCHIGE05735-qph22s2crg1qgs1 GTCHIGE05736-qph22s2crg2qgs1 GTCHIGE05737-qph22s2crg3qgs1 GTCHIGE05738-qph23s1cdg1qgs1 GTCHIGE05739-qph23s1cdg1qgs2 GTCHIGE05740-qph23s1cdg1qss1 GTCHIGE05741-qoh23s1cdg2qgs1 GTCHIGE05742-qph23s1cdg2qgs2 GTCHIGE05743-qph23s1cdg2qss1 GTCHIGE05744-qph23s1cdg3qgs1 GTCHIGE05745-qph23s1cdg3qss1 GTCHIGE05746-qph23s1cdg3qss2 GTCHIGE05747-qph23q1crg1qgs1 GTCHIGE05748-qph23s1crg2qgs1 GTCHIGE05749-qph23s1crg3qgs1 GTCHIGE05750-qph31s1cdg1qgs1 GTCHIGE05751-qph31s1cdg1qgs2 GTCHIGE05752-qph31s1cdg1qss1 GTCHIGE05753-qph31s1cdg2qgs1 GTCHIGE05754-qph31s1cedg2qgs2 GTCHIGE05755-qph31s1cdg2qss1 GTCHIGE05756-qph31s1cdg3qgs1 GTCHIGE05757-qph31s1cdg3qss1 GTCHIGE05758-qph31s1cdg3qss2 GTCHIGE05759-qph31s1crg1qgs1 GTCHIGE05760-qph31s1crg2qgs1 GTCHIGE05761-qph31s1crg3qgs1 GTCHIGE05762-qph31s2cdg1qgs1 GTCHIGE05763-qph31s2cdg1qgs2 GTCHIGE05764-qph31s2cdg1qss1 GTCHIGE05765-qph31s2cdg2qgs1 GTCHIGE05766-qph31s2cdg2qgs2 GTCHIGE05767-qph31s2cdqss1 GTCHIGE05768-qph31s2cdg3qgs1 GTCHIGE05769-qph31s2cdg3qss1 GTCHIGE05770-qph31s2cdg3qss2 GTCHIGE05771-qph31s2crg1qgs1 GTCHIGE05772-qph31s2crg2qgs1 GTCHIGE05773-qph31s2crg3qgs1 GTCHIGE05774-qph32s1cdg1qgs1 GTCHIGE05775-qph32s1cdg1qgs2 GTCHIGE05776-qph32s1cdg1qss1 GTCHIGE05777-qph32s1cdg2qgs1 GTCHIGE05778-qph32s1cdg2qgs2 GTCHIGE05779-qph32s1cdg2qss1 GTCHIGE05780-qph32s1cdg3qgs1 GTCHIGE05781-qpg32s1cdg3qss1 GTCHIGE05782-qph32s1cdg3qss2 GTCHIGE05783-qph32s1crg1qgs1 GTCHIGE05784-qph32s1crg2qgs1 GTCHIGE05785-qph32s1crg3qgs1 GTCHIGE05786-qph32s2cdg1qgs1 GTCHIGE05787-qph32s2cdg1qgs2 GTCHIGE05788-qph32s2cdg1qss1 GTCHIGE05789-qph32s2cdg2qgs1 GTCHIGE05790-qph32s2cdg2qgs2 GTCHIGE05791-qph32s2cdg2qss1 GTCHIGE05792-qph32s2cdg3qgs1 GTCHIGE05793-qph32s2cdg3qss1 GTCHIGE05794-qph32s2cdg3qss2 GTCHIGE05795-qph32s2crg1qgs1 GTCHIGE05796-qph32s2crg2qgs1 GTCHIGE05797-qph32s2crg3qgs1</p> Enseignement scientifique <p>Sujets et corrections sont disponibles \u00e0 la fin de chaque chapitre d'enseignement scientifique et dans la partie de tronc commun Maths pour celleux qui n'on pas choisi la Sp\u00e9 Maths.</p> <p>Sp\u00e9cialit\u00e9s</p> Sp\u00e9 Anglais AMC Premi\u00e8re Terminale Sp\u00e9 Maths <p>G1SSMAT02597-sujet1 G1SSMAT02598-sujet2 G1SSMAT02599-sujet3 G1SSMAT02600-sujet4 G1SSMAT02601-sujet5 G1SSMAT02602-sujet6 G1SSMAT02603-sujet7 G1SSMAT02604-sujet8 G1SSMAT02605-sujet9 G1SSMAT02606-sujet10 G1SSMAT02607-sujet11 G1SSMAT02608-sujet12 G1SSMAT02609-sujet13 G1SSMAT02610-sujet14 G1SSMAT02611-sujet15 G1SSMAT02612-sujet16 G1SSMAT02613-sujet17 G1SSMAT02614-sujet18 G1SSMAT02615-sujet19 G1SSMAT02616-sujet20 G1SSMAT02617-sujet21 G1SSMAT02618-sujet22 G1SSMAT02619-sujet23 G1SSMAT02620-sujet24 G1SSMAT02621-sujet25 G1SSMAT02622-sujet26 G1SSMAT02623-sujet27 G1SSMAT02624-sujet28 G1SSMAT02625-sujet29 G1SSMAT02626-sujet30 G1SSMAT02627-sujet31 G1SSMAT02628-sujet32 G1SSMAT02629-sujet33 G1SSMAT02630-sujet34 G1SSMAT02631-sujet35 G1SSMAT02632-sujet36 G1SSMAT02633-sujet37 G1SSMAT02634-sujet38 G1SSMAT02635-sujet39 G1SSMAT02636-sujet40 G1SSMAT02637-sujet41 G1SSMAT02638-sujet42 G1SSMAT02639-sujet43 G1SSMAT02640-sujet44 G1SSMAT02641-sujet45 G1SSMAT02642-sujet46 G1SSMAT02643-sujet47 G1SSMAT02644-sujet48 G1SSMAT02645-sujet49 G1SSMAT02646-sujet50 G1SSMAT02647-sujet51 G1SSMAT02648-sujet52 G1SSMAT02649-sujet53 G1SSMAT02650-sujet54 G1SSMAT02651-sujet55 G1SSMAT02652-sujet56 G1SSMAT02653-sujet57 G1SSMAT02654-sujet58 G1SSMAT02655-sujet59 G1SSMAT02656-sujet60 G1SSMAT02657-sujet61 G1SSMAT02658-sujet62 G1SSMAT02659-sujet63 G1SSMAT02660-sujet64 G1SSMAT02661-sujet65</p> Sp\u00e9 SVT Premi\u00e8re <p>G1SSVTE03018-sujet1 G1SSVTE03019-sujet2 G1SSVTE03020-sujet3 G1SSVTE03021-sujet4 G1SSVTE03022-sujet5 G1SSVTE03023-sujet6 G1SSVTE03024-sujet7 G1SSVTE03025-sujet8 G1SSVTE03026-sujet9 G1SSVTE03027-sujet10 G1SSVTE03028-sujet11 G1SSVTE03029-sujet12 G1SSVTE03030-sujet13 G1SSVTE03031-sujet14 G1SSVTE03032-sujet15 G1SSVTE03033-sujet16 G1SSVTE03034-sujet17 G1SSVTE03035-sujet18 G1SSVTE03036-sujet19 G1SSVTE03037-sujet20 G1SSVTE03038-sujet21 G1SSVTE03039-sujet22 G1SSVTE03040-sujet23 G1SSVTE03041-sujet24 G1SSVTE03310-sujet25 G1SSVTE03311-sujet26 G1SSVTE03312-sujet27 G1SSVTE03313-sujet28 G1SSVTE03314-sujet29 G1SSVTE03315-sujet30 G1SSVTE03330-sujet31 G1SSVTE03336-sujet32 G1SSVTE03343-sujet33 G1SSVTE03344-sujet34 G1SSVTE03345-sujet35 G1SSVTE03346-sujet36 G1SSVTE03347-sujet37 G1SSVTE03348-sujet38 G1SSVTE03349-sujet39 G1SSVTE03350-sujet40 G1SSVTE03377-sujet41 G1SSVTE03378-sujet42 G1SSVTE03380-sujet43 G1SSVTE03384-sujet44 G1SSVTE03387-sujet45 G1SSVTE03388-sujet46 G1SSVTE03389-sujet47 G1SSVTE03390-sujet48 G1SSVTE03393-sujet49 G1SSVTE03394-sujet50 G1SSVTE03395-sujet51 G1SSVTE03396-sujet52 G1SSVTE03397-sujet53 G1SSVTE03398-sujet54 G1SSVTE03399-sujet55 G1SSVTE03400-sujet56 G1SSVTE03401-sujet57 G1SSVTE03402-sujet58 G1SSVTE03403-sujet59 G1SSVTE03404-sujet60 G1SSVTE03405-sujet61 G1SSVTE03406-sujet62 G1SSVTE03407-sujet63 G1SSVTE03408-sujet64 G1SSVTE03409-sujet65 G1SSVTE03410-sujet66 G1SSVTE03411-sujet67 G1SSVTE03412-sujet68 G1SSVTE03413-sujet69 G1SSVTE03414-sujet70 G1SSVTE03415-sujet71 G1SSVTE03416-sujet72 G1SSVTE03417-sujet73 G1SSVTE03418-sujet74 G1SSVTE03419-sujet75 G1SSVTE03420-sujet76 G1SSVTE03421-sujet77 G1SSVTE03422-sujet78 G1SSVTE03423-sujet79 G1SSVTE03424-sujet80 G1SSVTE03425-sujet81 G1SSVTE03426-sujet82 G1SSVTE03427-sujet83 G1SSVTE03428-sujet84 G1SSVTE03429-sujet85 G1SSVTE03430-sujet86 G1SSVTE03431-sujet87 G1SSVTE03432-sujet88 G1SSVTE03433-sujet89 G1SSVTE03434-sujet90 G1SSVTE03435-sujet91 G1SSVTE03436-sujet92 G1SSVTE03437-sujet93 G1SSVTE03438-sujet94 G1SSVTE03439-sujet95 G1SSVTE03440-sujet96 G1SSVTE03990-sujet97 G1SSVTE04016-sujet98 G1SSVTE04017-sujet99 G1SSVTE04018-sujet100 G1SSVTE04019-sujet101 G1SSVTE04020-sujet102 G1SSVTE04021-sujet103 G1SSVTE04022-sujet104 G1SSVTE04023-sujet105 G1SSVTE04024-sujet106</p> Sp\u00e9 SES Premi\u00e8re <p>G1SSEES02155-sujet1 G1SSEES02156-sujet2 G1SSEES02157-sujet3 G1SSEES02158-sujet4 G1SSEES02159-sujet5 G1SSEES02160-sujet6 G1SSEES02161-sujet7 G1SSEES02162-sujet8 G1SSEES02163-sujet9 G1SSEES02164-sujet10 G1SSEES02165-sujet11 G1SSEES02166-sujet12 G1SSEES02167-sujet13 G1SSEES02168-sujet14 G1SSEES02169-sujet15 G1SSEES02170-sujet16 G1SSEES02171-sujet17 G1SSEES02172-sujet18 G1SSEES02173-sujet19 G1SSEES02174-sujet20 G1SSEES02175-sujet21 G1SSEES02176-sujet22 G1SSEES02177-sujet23 G1SSEES02178-sujet24 G1SSEES02179-sujet25 G1SSEES02180-sujet26 G1SSEES02182-sujet27 G1SSEES02183-sujet28 G1SSEES02184-sujet29 G1SSEES02185-sujet30 G1SSEES02186-sujet31 G1SSEES02187-sujet32 G1SSEES02188-sujet33 G1SSEES02189-sujet34 G1SSEES02190-sujet35 G1SSEES02191-sujet36 G1SSEES02192-sujet37 G1SSEES03850-sujet38 G1SSEES03858-sujet39 G1SSEES03861-sujet40 G1SSEES03865-sujet41 G1SSEES03976-sujet42 G1SSEES03977-sujet43 G1SSEES03978-sujet44 G1SSEES03979-sujet45 G1SSEES03980-sujet46 G1SSEES03981-sujet47 G1SSEES03982-sujet48 G1SSEES03983-sujet49 G1SSEES03984-sujet50 G1SSEES03985-sujet51 G1SSEES03986-sujet52 G1SSEES03987-sujet53 G1SSEES03988-sujet54 G1SSEES03989-sujet55 G1SSEES03991-sujet56 G1SSEES03992-sujet57 G1SSEES03993-sujet58 G1SSEES03994-sujet59 G1SSEES03995-sujet60 G1SSEES03996-sujet61 G1SSEES03997-sujet62 G1SSEES03998-sujet63 G1SSEES03999-sujet64 G1SSEES04000-sujet65 G1SSEES04001-sujet66 G1SSEES04002-sujet67 G1SSEES04003-sujet68 G1SSEES04004-sujet69 G1SSEES04005-sujet70 G1SSEES04006-sujet71 G1SSEES04007-sujet72 G1SSEES04008-sujet73 G1SSEES04009-sujet74 G1SSEES04010-sujet75 G1SSEES04011-sujet76 G1SSEES04012-sujet77 G1SSEES04013-sujet78 G1SSEES04014-sujet79 G1SSEES04015-sujet80</p> Sp\u00e9 HGGSP Premi\u00e8re <p>G1SHGGS03042-sujet1 G1SHGGS03043-sujet2 G1SHGGS03044-sujet3 G1SHGGS03045-sujet4 G1SHGGS03046-sujet5 G1SHGGS03047-sujet6 G1SHGGS03048-sujet7 G1SHGGS03049-sujet8 G1SHGGS03050-sujet9 G1SHGGS03051-sujet10 G1SHGGS03052-sujet11 G1SHGGS03053-sujet12 G1SHGGS03054-sujet13 G1SHGGS03055-sujet14 G1SHGGS03056-sujet15 G1SHGGS03057-sujet16 G1SHGGS03058-sujet17 G1SHGGS03059-sujet18 G1SHGGS03060-sujet19 G1SHGGS03061-sujet20 G1SHGGS03062-sujet21 G1SHGGS03063-sujet22 G1SHGGS03064-sujet23 G1SHGGS03065-sujet24 G1SHGGS03066-sujet25 G1SHGGS03067-sujet26 G1SHGGS03068-sujet27 G1SHGGS03069-sujet28 G1SHGGS03070-sujet29 G1SHGGS03071-sujet30 G1SHGGS03072-sujet31 G1SHGGS03073-sujet32 G1SHGGS03074-sujet33 G1SHGGS03075-sujet34 G1SHGGS03076-sujet35 G1SHGGS03077-sujet36 G1SHGGS03078-sujet37 G1SHGGS03079-sujet38 G1SHGGS03080-sujet39 G1SHGGS03081-sujet40 G1SHGGS03082-sujet41 G1SHGGS03083-sujet42 G1SHGGS03084-sujet43 G1SHGGS03085-sujet44 G1SHGGS03086-sujet45 G1SHGGS03087-sujet46 G1SHGGS03088-sujet47 G1SHGGS03089-sujet48 G1SHGGS03090-sujet49 G1SHGGS03091-sujet50 </p> Sp\u00e9 HLP Premi\u00e8re <p>E3C2, 1e, HLP LES POUVOIRS DE LA PAROLE, texte Ciceron E3C2, 1e, HLP POUVOIRS DE LA PAROLE, texte Du Bellay E3C2,1e, pouvoirs de la parole, roman de la rose E3C2, 1ere, HLP, EPRESENTATATIONS DU MONDE, Lamarck E3C2, 1ere, HLP, Repr\u00e9sentations du monde, Bacon E3C2, 1ere, HLP, Repr\u00e9sentations du monde, Texte de Buffon E3C2, 1ere, HLP, Repr\u00e9sentations du monde, texte de Voltaire E3C2,1ere, HLP, repr\u00e9sentations du monde, texte G.Bataille E3C2, 1ere, HLP, Repr\u00e9sentatiosn du monde, texte de Condillac E3C2,1eres, HLP, Pouvoir de la parole, Moliere E3C2, HKP 1ere, REPRESENTATRTIONS DU MONDE, Texte Rousseau E3C2, HLP 1e, LES POUVOIRS DE LA PAROLE, texte de Castiglione E3C2, HLP 1e, LES REPRESENTATIONS DU MONDE, Antoine Prevot E3C2, HLP 1e, LES REPRESENTATIONS DU MONDE, texte Voltaire E3C2, HLP 1e, POUVOIRS DE LA PAROLE?, Homere E3C2, HLP 1e, POUVOIRS DE LA PAROLE, La Fontaine E3C2, HLP 1e, POUVOIRS DE LA PAROLE, SOPHOCLE E3C2,HLP1e, Pouvoirs de la parole, texte de La Fontaine E3C2, HLP 1e, POUVOIRS DE LA PAROLE, texte Denys d'Halicarnasse E3C2, HLP 1e, POUVOIRS DE LA PAROLE, texte La Bruyere E3C2, HLP 1e, POUVOIRS DE LA PAROLE, Val\u00c3\u00a8re Novarina E3C2, HLP 1e, POUVOIRS DE LA PAROLE, Virgile E3C2, HLP 1ere, LES REPRESENTATION DU MONDE, texte de Condillac E3C2, HLP 1ere, pouvoirs de la parole, Arnault et Nicole E3C2, HLP 1ere, POUVOIRS DE LA PAROLE, Galilee E3C2, HLP 1e,REPRESENTATIONS DU MONDE, Fontenelle  E3C2, HLP 1e, REPRESENTATIONS DU MONDE, Rousseau E3C2, HLP 1ere, REPRESENTATIONS DU MONDE, Blaise Pascal E3C2, HLP 1ere, REPRESENTATIONS DU MONDE, Grandpr\u00e9 E3C2, HLP 1ere, REPRESENTATIONS DU MONDE, Jeaucourt E3C2, HLP 1ere, REPRESENTATIONS DU MONDE, texte de Condillac E3C2, HLP 1ere, REPRESENTATIONS DU MONDE, texte d'Henry More E3C2, HLP 1e, sur LES REPRESENTATIONS DU MONDE EC32,HLP,1ere, pouvoirs de la parole, Texte de La Fontaine G1SHLEH02984-sujet31 G1SHLEH02985-sujet32 G1SHLEH02986-sujet33 G1SHLEH02987-sujet34 G1SHLEH02988-sujet35 G1SHLEH02989-sujet36 G1SHLEH02990-sujet37 G1SHLEH02991-sujet38 G1SHLEH02992-sujet39 G1SHLEH02993-sujet40 G1SHLEH02994-sujet41 G1SHLEH02995-sujet42 G1SHLEH02996-sujet43 G1SHLEH02997-sujet44 G1SHLEH02998-sujet45 G1SHLEH02999-sujet46 G1SHLEH03000-sujet47 G1SHLEH03001-sujet48 G1SHLEH03002-sujet49 G1SHLEH03003-sujet50 G1SHLEH03004-sujet51 G1SHLEH03005-sujet52 G1SHLEH03006-sujet53 G1SHLEH03007-sujet54 G1SHLEH03008-sujet55 G1SHLEH03009-sujet56 G1SHLEH03010-sujet57 G1SHLEH03011-sujet58 G1SHLEH03012-sujet59 G1SHLEH03013-sujet60 G1SHLEH03014-sujet61 G1SHLEH03015-sujet62 G1SHLEH03016-sujet63 G1SHLEH03017-sujet64 G1SHLEH03664-sujet65 G1SHLEH03667-sujet66 G1SHLEH03670-sujet67 G1SHLEH03671-sujet68 G1SHLEH03673-sujet69 G1SHLEH03674-sujet70 G1SHLEH03675-sujet71 G1SHLEH03676-sujet72 G1SHLEH03677-sujet73 G1SHLEH03678-sujet74 G1SHLEH03679-sujet75 G1SHLEH03680-sujet76 G1SHLEH03681-sujet77 G1SHLEH03682-sujet78 G1SHLEH03683-sujet79 G1SHLEH03684-sujet80 G1SHLEH03685-sujet81 G1SHLEH03686-sujet82 G1SHLEH03687-sujet83 G1SHLEH03688-sujet84 G1SHLEH03689-sujet85 G1SHLEH03690-sujet86 G1SHLEH03691-sujet87 G1SHLEH03692-sujet88</p> Sp\u00e9 NSI Premi\u00e8re <p>Tous les sujets de la banque officielle des QCM sont ici :</p> <p>0 A-1 A-2 A-3 A-4 A-5 A-6 A-7 A-8 A-9 A-10 A-11 A-12 A-13 A-14 A-15 A-16 A-17 A-18 A-19 A-20 A-21 A-22 A-23 A-24 A-25 A-26 A-27 A-28 A-29 A-30 A-31 A-32 A-33 A-34 A-35 A-36 A-37 A-38 A-39 A-40 A-41 A-42 A-43 A-44 A-45 A-46 A-47 A-48 A-49 A-50 A-51 B-1 B-2 B-3 B-4 B-5 B-6 B-7 B-8 B-9 B-10 B-11 B-12 B-13 B-14 B-15 B-16 B-17 B-18 B-19 B-20 B-21 B-22 B-23 B-24 B-25 B-26 B-27 B-28 B-29 B-30 B-31 B-32 B-33 B-34 B-35 B-36 B-37 B-38 B-39 B-40 B-41 B-42 B-43 B-44 B-45 B-46 B-47 B-48 B-49 B-50 B-51 B-52 B-53 B-54 B-55 B-56 B-57 B-58 B-59 B-60 B-61 B-62 B-63 B-64 B-65 B-66 B-67 B-68 B-69 B-70 B-71 B-72 B-73 B-74 B-75 B-76 B-77 B-78 B-79 B-80 B-81 B-82 B-83 B-84 B-85 B-86 B-87 B-88 B-89 B-90 B-91 B-92 B-93 B-94 B-95 B-96 B-97 B-98 B-99 B-100 B-101 B-102 B-103 B-104 B-105 B-106 B-107 B-108 B-109 B-110 B-111 B-112 B-113 B-114 B-115 B-116 B-117 B-118 B-119 B-120 B-121 B-122 B-123 B-124 B-125 B-126 B-127 B-128 B-129 B-130 B-131 B-132 B-133 B-134 B-135 B-136 B-137 B-138 B-139 B-140 B-141 B-142 B-143 B-144 B-145 B-146 B-147 B-148 B-149 B-150 B-151 B-152 B-153 B-154 B-155 B-156 B-157 B-158 B-159 B-160 B-161 B-162 B-163 B-164 B-165 B-166 B-167 B-168 B-169 B-170 B-171 B-172 B-173 B-174 B-175 B-176 B-177 B-178 B-179 B-180 B-181 B-182 B-183 B-184 B-185 B-186 B-187 B-188 B-189 B-190 B-191 B-192 B-193 B-194 B-195 B-196 B-197 B-198</p> Terminale \u00c9preuves \u00e9crites (3h30)\u00c9preuves pratiques (1h) <p>Les sujets et corrig\u00e9s () des \u00e9preuves \u00e9crites des ann\u00e9es pr\u00e9c\u00e9dentes sont issus de ce d\u00e9pot .</p> <p>A noter</p> <p>A partir de 2023, vous ne pouvez plus choisir 3 des 5 exercices comme auparavant : les 3 exercices sont maintenant impos\u00e9s.</p> Sujets Corrig\u00e9 Contenus Amerique_Nord_mai_2022_sujet_1 Ex 1 : bases de donn\u00e9es (Vacances autrement)  Ex 2 : r\u00e9seaux, protocoles de routage  Ex 3 : arbres binaires de recherche, algorithmique  Ex 4 : cha\u00eene de caract\u00e8re, tableau, Python  Ex 5 : files, tableaux, algorithmique Amerique_Nord_mai_2022_sujet_2 Ex 1 : liste, arbres binaires de recherche, POOEx 2 : syst\u00e8mes d'exploitation, processusEx 3 : bases de donn\u00e9es (site web salle de cin\u00e9ma)Ex 4 : arbres binaires, algorithmiqueEx 5 : tableaux \u00e0 deux dimensions, Python Amerique_Nord_mars_2021 Ex 1 : bases de donn\u00e9es (parc informatique)Ex 2 : routage, processus, SOC (constructeur automobile)Ex 3 : tableaux, Python (calcul de r\u00e9ductions)Ex 4 : arbres binaires (comp\u00e9tition de badminton)Ex 5 : piles, files, Python Amerique_Sud_septembre_2022_sujet_1 Ex 1 : bases de donn\u00e9es (maternit\u00e9)Ex 2 : programmation, algorithmes de triEx 3 : arbres binairesEx 4 : syst\u00e8mes d'exploitation, processusEx 5 : r\u00e9seaux, protocoles de routage Amerique_Sud_septembre_2022_sujet_2 Ex 1 : programmation, algorithmique, complexit\u00e9Ex 2 : r\u00e9seaux, protocoles de routageEx 3 : bases de donn\u00e9es (vente v\u00e9los electriques)Ex 4 : Python, r\u00e9cursivit\u00e9, diviser pour r\u00e9gnerEx 5 : arbres binaires, POO, r\u00e9cursivit\u00e9 Asie_mai_2022_sujet_1 Ex 1 : algorithmique, cha\u00eenes de caract\u00e8res, complexit\u00e9Ex 2 : bases de donn\u00e9es (restaurant site de r\u00e9servation)Ex 3 : syst\u00e8mes d'exploitation, LinuxEx 4 : POO, PythonEx 5 : Python Asie_mai_2022_sujet_2 Ex 1 : syst\u00e8me d'exploitation LinuxEx 2 : arbres binaires de rechercheEx 3 : structures de donn\u00e9e, programmation (jeu de la vie)Ex 4 : bases de donn\u00e9es (club de tennis)Ex 5 : ex\u00e9cution de programmes, recherche et correction de bugs CentresEtrangers_juin_2021_sujet_1 Ex 1 : POO (codage C\u00e9sar)Ex 2 : dictionnaires, Python (v\u00e9los en location)Ex 3 : arbres binaires de rechercheEx 4 : r\u00e9seaux, masque de sous-r\u00e9seau, conversion d\u00e9cimal/binaire, PythonEx 5 : piles, Python CentresEtrangers_juin_2021_sujet_2 Ex 1 : piles, Python (m\u00e9lange d'une liste)Ex 2 : tuples, listes, Python (labyrinthe)Ex 3 : conversion d\u00e9cimal/binaire, table de v\u00e9rit\u00e9, codage des caract\u00e8res (cryptage avec XOR)Ex 4 : bases de donn\u00e9es (club de handball)Ex 5 : POO (bandeau \u00e0 LED) CentresEtrangers_mai_2022_sujet_1 Ex 1 : structures de donn\u00e9es, listes, p-uplets, dictionnairesEx 2 : structures de donn\u00e9es, files, POO, PythonEx 3 : structures de donn\u00e9es, dictionnairesEx 4 : bases de donn\u00e9es (centre m\u00e9t\u00e9orologique)Ex 5 : architectures mat\u00e9rielles, r\u00e9seaux, protocoles de routage CentresEtrangers_mai_2022_sujet_2 Ex 1 : Python, r\u00e9curssivit\u00e9Ex 2 : structures de donn\u00e9es, dictionnaires, PythonEx 3 : bases de donn\u00e9es (enseignants, \u00e9valuations)Ex 4 : structures de donn\u00e9es, POO, PythonEx 5 : architectures mat\u00e9rielles, syst\u00e8mes d'exploitation, r\u00e9seaux Mayotte_mai_2022_sujet_1 Ex 1 : structures de donn\u00e9es, listes, piles, filesEx 2 : structures de donn\u00e9es, POO, PythonEx 3 : bases de donn\u00e9es (QCM NSI)Ex 4 : algorithmique, arbres binairesEx 5 : r\u00e9seau, protocole de routage Mayotte_mai_2022_sujet_2 Ex 1 : structures de donn\u00e9es, pilesEx 2 : bases de donn\u00e9es (h\u00f4tel)Ex 3 : binaire, syst\u00e8mes d'exploitationEx 4 : arbres binaires de rechercheEx 5 : algorithmes, Python (TAKAZU) M\u00e9tropole_juin_2021_sujet_1 Ex 1 : bases de donn\u00e9es (th\u00e9atre)Ex 2 : piles, POO, PythonEx 3 : processus, RIP, OSPFEx 4 : tableaux, Python (labyrinthe)Ex 5 : tableaux, r\u00e9cursivit\u00e9, diviser pour r\u00e9gner (inversions dans un tableau) M\u00e9tropole_juin_2021_sujet_2 Ex 1 : bases de donn\u00e9es (biblioth\u00e8que)Ex 2 : processusEx 3 : arbres binaires de recherche, POOEx 4 : r\u00e9cursivit\u00e9, Python (m\u00e9lange d'une liste)Ex 5 : tableaux, Python M\u00e9tropole_mai_2022_sujet_1 Ex 1 : structures de donn\u00e9esEx 2 : bases de donn\u00e9es (cin\u00e9ma)Ex 3 : binaire, routageEx 4 : arbres binaires, diviser pour r\u00e9gner, r\u00e9cursivit\u00e9Ex 5 : POO M\u00e9tropole_mai_2022_sujet_2 Ex 1 : arbres binaires de recherche, POO, r\u00e9cursivit\u00e9Ex 2 : structures de donn\u00e9es (piles)Ex 3 : r\u00e9seaux, routageEx 4 : bases de donn\u00e9es (musique)Ex 5 : POO, diviser pour r\u00e9gner M\u00e9tropole_mars_2021_sujet_1 Ex 1 : arbres binaires de recherche, POOEx 2 : processus, op\u00e9rateurs bool\u00e9ensEx 3 : bases de donn\u00e9es (trains)Ex 4 : tri fusion, diviser pour r\u00e9gner, PythonEx 5 : r\u00e9seaux, protocoles de routage M\u00e9tropole_mars_2021_sujet_2 Ex 1 : arbres, POOEx 2 : bases de donn\u00e9es (restaurant)Ex 3 : r\u00e9seaux, protocoles de routageEx 4 : syst\u00e8mes d'exploitation, processusEx 5 : files, Python M\u00e9tropole_septembre_2021 Ex 1 : protocoles de communication, architecture r\u00e9seau, routageEx 2 : recherche dichotomique, r\u00e9cursivit\u00e9Ex 3 : bases de donn\u00e9es (AirOne)Ex 4 : programmation objet, sp\u00e9cificationEx 5 : arbre, arbre binaire, pile, Python M\u00e9tropole_septembre_2022 Ex 1 : protocoles de communication, r\u00e9seaux, protocoles de routageEx 2 : tableaux, dictionnaires, PythonEx 3 : bases de donn\u00e9es (tableau p\u00e9riodique)Ex 4 : piles, POO, PythonEx 5 : traitement des donn\u00e9es en tables, Python Polynesie_mai_2022 Ex 1 : programmation, r\u00e9cursivit\u00e9, PythonEx 2 : architecture mat\u00e9rielle, ordonnancement, bool\u00e9ensEx 3 : bases de donn\u00e9es (site web)Ex 4 : structures de donn\u00e9es, pilesEx 5 : algorithmique, arbres binaires Polynesie_mars_2021 Ex 1 : algorithmes de tri, PythonEx 2 : bases de donn\u00e9es (vente en ligne)Ex 3 : arbres binaires de recherche, POOEx 4 : architectures mat\u00e9rielles, syst\u00e8mes d'exploitation, routageEx 5 : bases de donn\u00e9es (vid\u00e9o \u00e0 la demande) <p>Pas pour les candidat\u00b7e\u00b7s libres</p> Exercice 01.1 \u00c9nonc\u00e9Correction <p>Programmer la fonction <code>verifie</code> qui prend en param\u00e8tre un tableau de valeurs num\u00e9riques non vide et qui renvoie <code>True</code> si ce tableau est tri\u00e9 dans l\u2019ordre croissant, <code>False</code> sinon.</p> <p>Exemples :</p> <pre><code>Exemples :\n&gt;&gt;&gt; verifie([0, 5, 8, 8, 9])\nTrue\n&gt;&gt;&gt; verifie([8, 12, 4])\nFalse\n&gt;&gt;&gt; verifie([-1, 4])\nTrue\n&gt;&gt;&gt; verifie([5])\nTrue\n</code></pre> <pre><code>def verifie(tab):\nfor i in range(1, len(tab)):\nif tab[i] &lt; tab[i-1]:\nreturn False\nreturn True\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 01.2 \u00c9nonc\u00e9Correction <p>Les r\u00e9sultats d'un vote ayant trois issues possibles 'A', 'B' et 'C' sont stock\u00e9s dans un tableau.</p> <p>Exemple :</p> <pre><code>urne = ['A', 'A', 'A', 'B', 'C', 'B', 'C', 'B', 'C', 'B']\n</code></pre> <p>La fonction <code>depouille</code> doit permettre de compter le nombre de votes exprim\u00e9s pour chaque artiste. Elle prend en param\u00e8tre un tableau et renvoie le r\u00e9sultat dans un dictionnaire dont les cl\u00e9s sont les noms des artistes et les valeurs le nombre de votes en leur faveur.</p> <p>La fonction vainqueur doit d\u00e9signer le nom du ou des gagnants. Elle prend en param\u00e8tre un dictionnaire dont la structure est celle du dictionnaire renvoy\u00e9 par la fonction <code>depouille</code> et renvoie un tableau. Ce tableau peut donc contenir plusieurs \u00e9l\u00e9ments s\u2019il y a des artistes ex- aequo. Compl\u00e9ter les fonctions <code>depouille</code> et vainqueur ci-apr\u00e8s pour qu\u2019elles renvoient les r\u00e9sultats attendus.</p> <pre><code>urne = ['A', 'A', 'A','B', 'C', 'B', 'C','B', 'C', 'B']\ndef depouille(urne):\nresultat = ...\nfor bulletin in urne:\nif ...:\nresultat[bulletin] = resultat[bulletin] + 1\nelse:\n...\nreturn resultat\ndef vainqueur(election):\nvainqueur = ''\nnmax = 0\nfor candidat in election:\nif ... &gt; ... :\nnmax = ...\nvainqueur = candidat\nliste_finale = [nom for nom in election if election[nom] == ...]\nreturn ...\n</code></pre> <p>Exemples d\u2019utilisation :</p> <pre><code>&gt;&gt;&gt; election = depouille(urne)\n&gt;&gt;&gt; election\n{'A': 3, 'B': 4, 'C': 3}\n&gt;&gt;&gt; vainqueur(election)\n['B']\n</code></pre> <pre><code>urne = ['A', 'A', 'A', 'B', 'C', 'B', 'C', 'B', 'C', 'B']\ndef depouille(urne):\nresultat = {}\nfor bulletin in urne:\nif bulletin in resultat:\nresultat[bulletin] = resultat[bulletin] + 1\nelse:\nresultat[bulletin] = 1\nreturn resultat\ndef vainqueur(election):\nvainqueur = '' #(1)\nnmax = 0\nfor candidat in election:\nif election[candidat] &gt; nmax :\nnmax = election[candidat]\nvainqueur = candidat #(2)\nliste_finale = [nom for nom in election if election[nom] == nmax]\nreturn liste_finale\n</code></pre> <ol> <li>Il est pourtant tr\u00e8s d\u00e9conseill\u00e9 de nommer une variable avec le m\u00eame nom que la fonction qui la contient...</li> <li>Cette variable <code>vainqueur</code> est inutile, on ne s'en sert pas dans l'\u00e9laboration de la liste finale.</li> </ol> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 02.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>indices_maxi</code> qui prend en param\u00e8tre une liste <code>tab</code>, non vide, de nombres entiers et renvoie un couple donnant d\u2019une part le plus grand \u00e9l\u00e9ment de cette liste et d\u2019autre part la liste des indices de la liste <code>tab</code> o\u00f9 appara\u00eet ce plus grand \u00e9l\u00e9ment.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; indices_maxi([1, 5, 6, 9, 1, 2, 3, 7, 9, 8])\n(9, [3, 8])\n&gt;&gt;&gt; indices_maxi([7])\n(7, [0])\n</code></pre> <pre><code>def indices_maxi(tab):\nval_max = tab[0]\nind_max = []\nfor i in range(len(tab)):\nif tab[i] &gt; val_max:\nval_max = tab[i]\nfor i in range(len(tab)):\nif tab[i] == val_max:\nind_max.append(i)\nreturn (val_max, ind_max)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 02.2 \u00c9nonc\u00e9Correction <p>Cet exercice utilise des piles qui seront repr\u00e9sent\u00e9es en Python par des listes (type <code>list</code>).</p> <p>On rappelle que l\u2019expression <code>liste_1 = list(liste)</code> fait une copie de <code>liste</code>ind\u00e9pendante de <code>liste</code>, que l\u2019expression <code>x = liste.pop()</code> enl\u00e8ve le sommet de la pile <code>liste</code> et le place dans la variable <code>x</code> et, enfin, que l\u2019expression <code>liste.append(v)</code> place la valeur <code>v</code> au sommet de la pile <code>liste</code>.</p> <p>Compl\u00e9ter le code Python de la fonction <code>positif</code> ci-dessous qui prend une pile <code>liste</code> de nombres entiers en param\u00e8tre et qui renvoie la pile des entiers positifs dans le m\u00eame ordre, sans modifier la variable <code>liste</code>.</p> <pre><code>def positif(pile):\npile_1 = ...(pile)\npile_2 = ...\nwhile pile_1 != []:\nx = ...\nif ... &gt;= 0:\npile_2.append(...)\nwhile pile_2 != ...:\nx = pile_2.pop()\n...\nreturn pile_1\n</code></pre> <p>Exemple : </p><pre><code>&gt;&gt;&gt; positif([-1, 0, 5, -3, 4, -6, 10, 9, -8])\n[0, 5, 4, 10, 9]\n&gt;&gt;&gt; positif([-2])\n[]\n</code></pre> <pre><code>def positif(pile):\npile_1 = list(pile)\npile_2 = []\nwhile pile_1 != []:\nx = pile_1.pop()\nif x &gt;= 0:\npile_2.append(x)\nwhile pile_2 != []:\nx = pile_2.pop()\npile_1.append(x)\nreturn pile_1\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 03.1 \u00c9nonc\u00e9Correction <p>Dans cet exercice, les nombres sont des entiers ou des flottants.</p> <p>\u00c9crire une fonction <code>moyenne</code> renvoyant la moyenne pond\u00e9r\u00e9e d\u2019une liste non vide, pass\u00e9e en param\u00e8tre, de tuples \u00e0 deux \u00e9l\u00e9ments de la forme (<code>valeur</code>, <code>coefficient</code>) o\u00f9 <code>valeur</code> et <code>coefficient</code> sont des nombres positifs ou nuls. Si la somme des coefficients est nulle, la fonction renvoie <code>None</code>, si la somme des coefficients est non nulle, la fonction renvoie, sous forme de flottant, la moyenne des valeurs affect\u00e9es de leur coefficient.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; moyenne([(8, 2), (12, 0), (13.5, 1), (5, 0.5)])\n9.142857142857142\n&gt;&gt;&gt; moyenne([(3, 0), (5, 0)])\nNone\n</code></pre> <p>Dans le premier exemple la moyenne est calcul\u00e9e par la formule :</p> <p>\\(\\dfrac{8 \\times 2 + 12 \\times 0 + 13,5 \\times 1 + 5 \\times 0,5}{2+0+1+0,5}\\)</p> <pre><code>def moyenne(tab):\nsomme = 0\ncoeffs = 0\nfor couple in tab:\nsomme += couple[0] * couple[1]\ncoeffs += couple[1]\nif coeffs == 0:\nreturn None\nreturn somme / coeffs\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 03.2 \u00c9nonc\u00e9Correction <p> On travaille sur des dessins en noir et blanc obtenu \u00e0 partir de pixels noirs et blancs : La figure \u00ab c\u0153ur \u00bb ci-dessus va servir d\u2019exemple. On la repr\u00e9sente par une grille de nombres, c\u2019est-\u00e0-dire par une liste compos\u00e9e de sous-listes de m\u00eame longueurs. Chaque sous-liste repr\u00e9sentera donc une ligne du dessin.</p> <p>Dans le code ci-dessous, la fonction <code>affiche</code> permet d\u2019afficher le dessin. Les pixels noirs (1 dans la grille) seront repr\u00e9sent\u00e9s par le caract\u00e8re \"*\" et les blancs (0 dans la grille) par deux espaces.</p> <p>La fonction <code>zoomListe</code> prend en argument une liste <code>liste_depart</code> et un entier <code>k</code>. Elle renvoie une liste o\u00f9 chaque \u00e9l\u00e9ment de <code>liste_depart</code> est dupliqu\u00e9 <code>k</code> fois.</p> <p>La fonction <code>zoomDessin</code> prend en argument la grille <code>dessin</code> et renvoie une grille o\u00f9 toutes les lignes de <code>dessin</code> sont zoom\u00e9es <code>k</code> fois et r\u00e9p\u00e9t\u00e9es <code>k</code> fois.</p> <p>Soit le code ci-dessous :</p> <pre><code>coeur = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], \\\n        [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], \\\n        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \\\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], \\\n        [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\ndef affiche(dessin):\n''' affichage d'une grille : les 1 sont repr\u00e9sent\u00e9s par \n        des \" *\" , les 0 par deux espaces \"  \" '''\nfor ligne in dessin:\nfor col in ligne:\nif col == 1:\nprint(\" *\", end=\"\")\nelse:\nprint(\"  \", end=\"\")\nprint()\ndef zoomListe(liste_depart,k):\n'''renvoie une liste contenant k fois chaque \n    \u00e9l\u00e9ment de liste_depart'''\nliste_zoom = ...\nfor elt in ... :\nfor i in range(k):\n...\nreturn liste_zoom\ndef zoomDessin(grille,k):\n'''renvoie une grille o\u00f9 les lignes sont zoom\u00e9es k fois \n    ET r\u00e9p\u00e9t\u00e9es k fois'''\ngrille_zoom=[]\nfor elt in grille:\nliste_zoom = ...\nfor i in range(k):\n... .append(...)\nreturn grille_zoom\n</code></pre> <p>R\u00e9sultats \u00e0 obtenir :</p> <p></p><pre><code>&gt;&gt;&gt; affiche(coeur)\n</code></pre> <pre><code>&gt;&gt;&gt; affiche(zoomDessin(coeur,3))\n</code></pre> <pre><code>            * * * * * *                   * * * * * *                  \n            * * * * * *                   * * * * * *                  \n            * * * * * *                   * * * * * *                  \n      * * *             * * *       * * *             * * *            \n      * * *             * * *       * * *             * * *            \n      * * *             * * *       * * *             * * *            \n* * *                         * * *                         * * *      \n* * *                         * * *                         * * *      \n* * *                         * * *                         * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n* * *                                                       * * *      \n      * * *                                           * * *            \n      * * *                                           * * *            \n      * * *                                           * * *            \n            * * *                               * * *                  \n            * * *                               * * *                  \n            * * *                               * * *                  \n                  * * *                   * * *                        \n                  * * *                   * * *                        \n                  * * *                   * * *                        \n                        * * *       * * *                              \n                        * * *       * * *                              \n                        * * *       * * *                              \n                              * * *                                    \n                              * * *                                    \n                              * * *\n</code></pre> <pre><code>coeur = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], \\\n        [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0], \\\n        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], \\\n        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], \\\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0], \\\n        [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], \\\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\ndef affiche(dessin):\n''' affichage d'une grille : les 1 sont repr\u00e9sent\u00e9s par \n    des \" *\" , les 0 par deux espaces \"  \" '''\nfor ligne in dessin:\nfor col in ligne:\nif col == 1:\nprint(' *',end='')\nelse:\nprint('  ',end='')\nprint()\ndef zoomListe(liste_depart, k):\n'''renvoie une liste contenant k fois chaque \n    \u00e9l\u00e9ment de liste_depart'''\nliste_zoom = []\nfor elt in liste_depart:\nfor i in range(k):\nliste_zoom.append(elt)\nreturn liste_zoom\ndef zoomDessin(grille, k):\n'''renvoie une grille o\u00f9 les lignes sont zoom\u00e9es k fois \n    ET r\u00e9p\u00e9t\u00e9es k fois'''\ngrille_zoom = []\nfor elt in grille:\nliste_zoom = zoomListe(elt, k)\nfor i in range(k):\ngrille_zoom.append(liste_zoom)\nreturn grille_zoom\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 04.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>a_doublon</code> qui prend en param\u00e8tre une liste tri\u00e9e de nombres et renvoie <code>True</code> si la liste contient au moins deux nombres identiques, <code>False</code> sinon.</p> <p>Par exemple :</p> <pre><code>&gt;&gt;&gt; a_doublon([])\nFalse\n&gt;&gt;&gt; a_doublon([1])\nFalse\n&gt;&gt;&gt; a_doublon([1, 2, 4, 6, 6])\nTrue\n&gt;&gt;&gt; a_doublon([2, 5, 7, 7, 7, 9])\nTrue\n&gt;&gt;&gt; a_doublon([0, 2, 3])\nFalse\n</code></pre> <pre><code>def a_doublon(lst):\nfor i in range(len(lst)-1):\nif lst[i] == lst[i+1]:\nreturn True\nreturn False\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 04.2 \u00c9nonc\u00e9Correction <p>On souhaite g\u00e9n\u00e9rer des grilles du jeu de d\u00e9mineur \u00e0 partir de la position des bombes \u00e0 placer. On se limite \u00e0 la g\u00e9n\u00e9ration de grilles carr\u00e9es de taille \\(n \\times n\\) o\u00f9 \\(n\\) est le nombre de bombes du jeu.  </p> <p>Dans le jeu du d\u00e9mineur, chaque case de la grille contient soit une bombe, soit une valeur qui correspond aux nombres de bombes situ\u00e9es dans le voisinage direct de la case (au- dessus, en dessous, \u00e0 droite, \u00e0 gauche ou en diagonale : chaque case a donc 8 voisins si elle n'est pas situ\u00e9e au bord de la grille).</p> <p>Voici un exemple de grille \\(5 \\times 5\\) de d\u00e9mineur dans laquelle la bombe est repr\u00e9sent\u00e9e par une \u00e9toile :</p> <p></p> <p>On utilise une liste de listes pour repr\u00e9senter la grille et on choisit de coder une bombe par la valeur -1.</p> <p>L'exemple ci-contre sera donc cod\u00e9 par la liste :</p> <pre><code>[[1, 1, 1, 0, 0],\n[1, -1, 1, 1, 1],\n[2, 2, 3, 2, -1],\n[1, -1, 2, -1, 3],\n[1, 1, 2, 2, -1]]\n</code></pre> <p>Compl\u00e9ter le code suivant afin de g\u00e9n\u00e9rer des grilles de d\u00e9mineur, on pourra v\u00e9rifier que l\u2019instruction <code>genere_grille([(1, 1), (2, 4), (3, 1), (3, 3), (4, 4)])</code> produit bien la liste donn\u00e9e en exemple.</p> <pre><code>def voisinage(n, ligne, colonne):\n\"\"\" Renvoie la liste des coordonn\u00e9es des voisins de la case\n    (ligne, colonne) en g\u00e9rant les cases sur les bords. \"\"\"\nvoisins = []\nfor l in range(max(0,ligne-1), min(n, ligne+2)):\nfor c in range(max(0, colonne-1), min(n, colonne+2)):\nif (l, c) != (ligne, colonne):\nvoisins.append((l,c))\nreturn voisins\ndef incremente_voisins(grille, ligne, colonne):\n\"\"\" Incr\u00e9mente de 1 toutes les cases voisines d'une bombe.\"\"\"\nvoisins = ...\nfor l, c in voisins:\nif grille[l][c] != ...: # si ce n'est pas une bombe\n...  # on ajoute 1 \u00e0 sa valeur\ndef genere_grille(bombes):\n\"\"\" Renvoie une grille de d\u00e9mineur de taille nxn o\u00f9 n est\n    le nombre de bombes, en pla\u00e7ant les bombes \u00e0 l'aide de\n    la liste bombes de coordonn\u00e9es (tuples) pass\u00e9e en\n    param\u00e8tre. \"\"\"\nn = len(bombes)\n# Initialisation d'une grille nxn remplie de 0\ngrille = [[0 for colonne in range(n)] for ligne in range(n)]\n# Place les bombes et calcule les valeurs des autres cases\nfor ligne, colonne in bombes:\ngrille[ligne][colonne] = ... # place la bombe\n... # incr\u00e9mente ses voisins\nreturn grille\n</code></pre> <pre><code>def voisinage(n, ligne, colonne):\n\"\"\" Renvoie la liste des coordonn\u00e9es des voisins de la case\n    (ligne, colonne) en g\u00e9rant les cases sur les bords. \"\"\"\nvoisins = []\nfor l in range(max(0,ligne-1), min(n, ligne+2)):\nfor c in range(max(0, colonne-1), min(n, colonne+2)):\nif (l, c) != (ligne, colonne):\nvoisins.append((l,c))\nreturn voisins\ndef incremente_voisins(grille, ligne, colonne):\n\"\"\" Incr\u00e9mente de 1 toutes les cases voisines d'une bombe.\"\"\"\nvoisins = voisinage(len(grille), ligne, colonne)\nfor l, c in voisins:\nif grille[l][c] != -1: # si ce n'est pas une bombe\ngrille[l][c] += 1  # on ajoute 1 \u00e0 sa valeur\ndef genere_grille(bombes):\n\"\"\" Renvoie une grille de d\u00e9mineur de taille nxn o\u00f9 n est\n    le nombre de bombes, en pla\u00e7ant les bombes \u00e0 l'aide de\n    la liste bombes de coordonn\u00e9es (tuples) pass\u00e9e en\n    param\u00e8tre. \"\"\"\nn = len(bombes)\n# Initialisation d'une grille nxn remplie de 0\ngrille = [[0 for colonne in range(n)] for ligne in range(n)]\n# Place les bombes et calcule les valeurs des autres cases\nfor ligne, colonne in bombes:\ngrille[ligne][colonne] = -1 # place la bombe\nincremente_voisins(grille, ligne, colonne) # incr\u00e9mente ses voisins\nreturn grille\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 05.1 \u00c9nonc\u00e9Correction <p>\u00c9crire en python deux fonctions :</p> <ul> <li> <p><code>lancer</code> de param\u00e8tre <code>n</code>, un entier positif, qui renvoie un tableau de type <code>list</code> de <code>n</code> entiers obtenus al\u00e9atoirement entre 1 et 6 (1 et 6 inclus) ;</p> </li> <li> <p><code>paire_6</code> de param\u00e8tre <code>tab</code>, un tableau de type <code>list</code> de <code>n</code> entiers entre 1 et 6 obtenus al\u00e9atoirement, qui renvoie un bool\u00e9en \u00e9gal \u00e0 <code>True</code> si le nombre de 6 est sup\u00e9rieur ou \u00e9gal \u00e0 2, <code>False</code> sinon.</p> </li> </ul> <p>On pourra utiliser la fonction <code>randint(a,b)</code> du module <code>random</code> pour laquelle la documentation officielle est la suivante :</p> <p><code>Renvoie un entier al\u00e9atoire N tel que a &lt;=N &lt;= b.</code></p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; lancer1 = lancer(5)\n[5, 6, 6, 2, 2]\n&gt;&gt;&gt; paire_6(lancer1)\nTrue\n&gt;&gt;&gt; lancer2 = lancer(5)\n[6, 5, 1, 6, 6]\n&gt;&gt;&gt; paire_6(lancer2)\nTrue\n&gt;&gt;&gt; lancer3 = lancer(3)\n[2, 2, 6]\n&gt;&gt;&gt; paire_6(lancer3)\nFalse\n&gt;&gt;&gt; lancer4 = lancer(0)\n[]\n&gt;&gt;&gt; paire_6(lancer4)\nFalse\n</code></pre> <pre><code>from random import randint\ndef lancer(n):\nreturn [randint(1,6) for _ in range(n)]\ndef paire_6(tab):\nnb = 0\nfor elt in tab:\nif elt == 6:\nnb += 1\nif nb &gt;=2 :\nreturn True\nelse:\nreturn False\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 05.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re une image en 256 niveaux de gris que l\u2019on repr\u00e9sente par une grille de nombres, c\u2019est-\u00e0-dire une liste compos\u00e9e de sous-listes toutes de longueurs identiques.</p> <p>La largeur de l\u2019image est donc la longueur d\u2019une sous-liste et la hauteur de l\u2019image est le nombre de sous-listes.</p> <p>Chaque sous-liste repr\u00e9sente une ligne de l\u2019image et chaque \u00e9l\u00e9ment des sous-listes est un entier compris entre 0 et 255, repr\u00e9sentant l\u2019intensit\u00e9 lumineuse du pixel.</p> <p>Le n\u00e9gatif d\u2019une image est l\u2019image constitu\u00e9e des pixels <code>x_n</code> tels que <code>x_n + x_i = 255</code> o\u00f9 <code>x_i</code> est le pixel correspondant de l\u2019image initiale.</p> <p>Compl\u00e9ter le programme suivant : </p><pre><code>def nbLig(image):\n'''renvoie le nombre de lignes de l'image'''\nreturn ...\ndef nbCol(image):\n'''renvoie la largeur de l'image'''\nreturn ...\ndef negatif(image):\n'''renvoie le negatif de l'image sous la forme\n       d'une liste de listes'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(...):\nL[i][j] = ...\nreturn L\ndef binaire(image, seuil):\n'''renvoie une image binarisee de l'image sous la forme\n       d'une liste de listes contenant des 0 si la valeur\n       du pixel est strictement inferieure au seuil\n       et 1 sinon'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(...):\nif image[i][j] &lt; ... :\nL[i][j] = ...\nelse:\nL[i][j] = ...\nreturn L\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; img=[[20, 34, 254, 145, 6], [23, 124, 237, 225, 69], [197, 174,\n207, 25, 87], [255, 0, 24, 197, 189]]\n&gt;&gt;&gt; nbLig(img)\n4\n&gt;&gt;&gt; nbCol(img)\n5\n&gt;&gt;&gt; negatif(img)\n[[235, 221, 1, 110, 249], [232, 131, 18, 30, 186], [58, 81, 48, 230,\n168], [0, 255, 231, 58, 66]]\n&gt;&gt;&gt; binaire(img,120)\n[[0, 0, 1, 1, 0], [0, 1, 1, 1, 0], [1, 1, 1, 0, 0], [1, 0, 0, 1, 1]]\n</code></pre> <pre><code>def nbLig(image):\n'''renvoie le nombre de lignes de l'image'''\nreturn len(image)\ndef nbCol(image):\n'''renvoie la largeur de l'image'''\nreturn len(image[0])\ndef negatif(image):\n'''renvoie le negatif de l'image sous la forme\n       d'une liste de listes'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(nbCol(image)):\nL[i][j] = 255 - image[i][j]\nreturn L\ndef binaire(image, seuil):\n'''renvoie une image binarisee de l'image sous la forme\n       d'une liste de listes contenant des 0 si la valeur\n       du pixel est strictement inferieure au seuil\n       et 1 sinon'''\n# on cree une image de 0 aux memes dimensions que le parametre image\nL = [[0 for k in range(nbCol(image))] for i in range(nbLig(image))]\nfor i in range(nbLig(image)):\nfor j in range(nbCol(image)):\nif image[i][j] &lt; seuil :\nL[i][j] = 0\nelse:\nL[i][j] = 1\nreturn L\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 06.1 \u00c9nonc\u00e9Correction <p>Programmer la fonction <code>recherche</code>, prenant en param\u00e8tre un tableau non vide <code>tab</code> (type <code>list</code>) d'entiers et un entier <code>n</code>, et qui renvoie l'indice de la derni\u00e8re occurrence de l'\u00e9l\u00e9ment cherch\u00e9. Si l'\u00e9l\u00e9ment n'est pas pr\u00e9sent, la fonction renvoie la longueur du tableau.</p> <p>Exemples </p><pre><code>&gt;&gt;&gt; recherche([5, 3],1)\n2\n&gt;&gt;&gt; recherche([2,4],2)\n0\n&gt;&gt;&gt; recherche([2,3,5,2,4],2)\n3\n</code></pre> <pre><code>def recherche(tab, n):\nindice_solution = len(tab)\nfor i in range(len(tab)):\nif tab[i] == n:\nindice_solution = i\nreturn indice_solution\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 06.2 \u00c9nonc\u00e9Correction <p>On souhaite programmer une fonction donnant la distance la plus courte entre un point de d\u00e9part et une liste de points. Les points sont tous \u00e0 coordonn\u00e9es enti\u00e8res. Les points sont donn\u00e9s sous la forme d'un tuple de deux entiers. La liste des points \u00e0 traiter est donc un tableau de tuples.</p> <p>On rappelle que la distance entre deux points du plan de coordonn\u00e9es \\((x;y)\\) et \\((x';y')\\) est donn\u00e9e par la formule :</p> \\[d=\\sqrt{(x-x')^2+(y-y')^2}\\] <p>On importe pour cela la fonction racine carr\u00e9e (<code>sqrt</code>) du module <code>math</code> de Python.</p> <p>Compl\u00e9ter le code des fonctions <code>distance</code> et <code>plus_courte_distance</code> fournies ci-dessous pour qu\u2019elles r\u00e9pondent \u00e0 leurs sp\u00e9cifications.</p> <pre><code>from math import sqrt     # import de la fonction racine carr\u00e9e\ndef distance(point1, point2):\n\"\"\" Calcule et renvoie la distance entre deux points. \"\"\"\nreturn sqrt((...)**2 + (...)**2)\ndef plus_courte_distance(tab, depart):\n\"\"\" Renvoie le point du tableau tab se trouvant \u00e0 la plus courte distance du point depart.\"\"\"\npoint = tab[0]\nmin_dist = ...\nfor i in range (1, ...):\nif distance(tab[i], depart)...:\npoint = ...\nmin_dist = ...\nreturn point\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; distance((1, 0), (5, 3))\n5.0\n&gt;&gt;&gt; distance((1, 0), (0, 1))\n1.4142135623730951\n&gt;&gt;&gt; plus_courte_distance([(7, 9), (2, 5), (5, 2)], (0, 0))\n(2, 5)\n&gt;&gt;&gt; plus_courte_distance([(7, 9), (2, 5), (5, 2)], (5, 2))\n(5, 2)\n</code></pre> <pre><code>from math import sqrt\ndef distance(point1, point2):\n\"\"\" Calcule et renvoie la distance entre deux points. \"\"\"\nreturn sqrt((point1[0] - point2[0])**2 + ((point1[1] - point2[1]))**2)\ndef plus_courte_distance(tab, depart):\n\"\"\" Renvoie le point du tableau tab se trouvant \u00e0 la plus courte distance du point depart.\"\"\"\npoint = tab[0]\nmin_dist = distance(point, depart)\nfor i in range (1, len(tab)):\nif distance(tab[i], depart) &lt; min_dist:\npoint = tab[i]\nmin_dist = distance(tab[i], depart)\nreturn point\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 07.1 \u00c9nonc\u00e9Correction <p>Programmer la fonction <code>fusion</code> prenant en param\u00e8tres deux tableaux non vides <code>tab1</code> et <code>tab2</code> (type <code>list</code>) d'entiers, chacun dans l\u2019ordre croissant, et renvoyant un tableau tri\u00e9 dans l\u2019ordre croissant et contenant l\u2019ensemble des valeurs de <code>tab1</code> et <code>tab2</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; fusion([3, 5], [2, 5])\n[2, 3, 5, 5]\n&gt;&gt;&gt; fusion([-2, 4], [-3, 5, 10])\n[-3, -2, 4, 5, 10]\n&gt;&gt;&gt; fusion([4], [2, 6])\n[2, 4, 6]\n</code></pre> <pre><code>def fusion(tab1, tab2):\ntab_fusion = []\ni1 = 0\ni2 = 0\nwhile i1 &lt; len(tab1) and i2 &lt; len(tab2):\nif tab1[i1] &lt; tab2[i2]:\ntab_fusion.append(tab1[i1])\ni1 += 1\nelse:\ntab_fusion.append(tab2[i2])\ni2 += 1\nif i1 == len(tab1):\nwhile i2 &lt; len(tab2):\ntab_fusion.append(tab2[i2])\ni2 += 1\nelse:\nwhile i1 &lt; len(tab1):\ntab_fusion.append(tab1[i1])\ni1 += 1        \nreturn tab_fusion\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 07.2 \u00c9nonc\u00e9Correction <p>Le but de cet exercice est d\u2019\u00e9crire une fonction r\u00e9cursive <code>traduire_romain</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8res, non vide, repr\u00e9sentant un nombre \u00e9crit en chiffres romains et qui renvoie son \u00e9criture d\u00e9cimale.</p> <p>Les chiffres romains consid\u00e9r\u00e9s sont : I, V, X, L, C, D et M. Ils repr\u00e9sentent respectivement les nombres 1, 5, 10, 50, 100, 500, et 1000 en base dix.</p> <p>On dispose d\u2019un dictionnaire <code>romains</code> dont les cl\u00e9s sont les caract\u00e8res apparaissant dans l\u2019\u00e9criture en chiffres romains et les valeurs sont les nombres entiers associ\u00e9s en \u00e9criture d\u00e9cimale :</p> <p><code>romains = {\"I\":1, \"V\":5, \"X\":10, \"L\":50, \"C\":100, \"D\":500, \"M\":1000}</code></p> <p>Le code de la fonction <code>traduire_romain</code> fournie repose sur le principe suivant :</p> <ul> <li> <p>la valeur d\u2019un caract\u00e8re est ajout\u00e9e \u00e0 la valeur du reste de la cha\u00eene si ce caract\u00e8re a une valeur sup\u00e9rieure (ou \u00e9gale) \u00e0 celle du caract\u00e8re qui le suit ;</p> </li> <li> <p>la valeur d\u2019un caract\u00e8re est retranch\u00e9e \u00e0 la valeur du reste de la cha\u00eene si ce caract\u00e8re a une valeur strictement inf\u00e9rieure \u00e0 celle du caract\u00e8re qui le suit.</p> </li> </ul> <p>Ainsi, XIV correspond au nombre 10 + 5 - 1 puisque :</p> <ul> <li> <p>la valeur de X (10) est sup\u00e9rieure \u00e0 celle de I (1), on ajoute donc 10 \u00e0 la valeur du reste de la cha\u00eene, c\u2019est-\u00e0-dire IV ;</p> </li> <li> <p>la valeur de I (1) est strictement inf\u00e9rieure \u00e0 celle de V (5), on soustrait donc 1 \u00e0 la valeur du reste de la cha\u00eene, c\u2019est-\u00e0-dire V.</p> </li> </ul> <p>On rappelle que pour priver une cha\u00eene de caract\u00e8res de son premier caract\u00e8re, on utilisera l\u2019instruction :</p> <p><code>nom_de_variable[1:]</code></p> <p>Par exemple, si la variable <code>mot</code> contient la cha\u00eene <code>\"CDI\"</code>, <code>mot[1:]</code> renvoie <code>\"DI\"</code>.</p> <pre><code>romains = {\"I\":1, \"V\":5, \"X\":10, \"L\":50, \"C\":100, \"D\":500, \"M\":1000}\ndef traduire_romain(nombre):\n\"\"\" Renvoie l\u2019\u00e9criture d\u00e9cimale du nombre donn\u00e9 en chiffres\n    romains \"\"\"\nif len(nombre) == 1:\nreturn ...\nelif romains[nombre[0]] &gt;= ...\nreturn romains[nombre[0]] + ...\nelse:\nreturn ...\n</code></pre> <p>Compl\u00e9ter le code de la fonction <code>traduire_romain</code> et le tester.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; traduire_romain(\"XIV\")\n14\n&gt;&gt;&gt; traduire_romain(\"CXLII\")\n142\n&gt;&gt;&gt; traduire_romain(\"MMXXIII\")\n2023\n</code></pre> <pre><code>romains = {\"I\":1, \"V\":5, \"X\":10, \"L\":50, \"C\":100, \"D\":500, \"M\":1000}\ndef traduire_romain(nombre):\n\"\"\" Renvoie l\u2019\u00e9criture d\u00e9cimale du nombre donn\u00e9 en chiffres\n    romains \"\"\"\nif len(nombre) == 1:\nreturn romains[nombre]\nelif romains[nombre[0]] &gt;= romains[nombre[1]]:\nreturn romains[nombre[0]] + traduire_romain(nombre[1:])\nelse:\nreturn traduire_romain(nombre[1:]) - romains[nombre[0]]\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 08.1 \u00c9nonc\u00e9Correction <p>Sur le r\u00e9seau social TipTop, on s\u2019int\u00e9resse au nombre de \u00ab like \u00bb des abonn\u00e9s. Les donn\u00e9es sont stock\u00e9es dans des dictionnaires o\u00f9 les cl\u00e9s sont les pseudos et les valeurs correspondantes sont les nombres de \u00ab like \u00bb comme ci-dessous :</p> <p><code>{'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50}</code></p> <p>\u00c9crire une fonction <code>max_dico</code> qui :</p> <ul> <li>Prend en param\u00e8tre un dictionnaire <code>dico</code> non vide dont les cl\u00e9s sont des cha\u00eenes de caract\u00e8res et les valeurs associ\u00e9es sont des entiers ;</li> <li>Renvoie un tuple dont :<ul> <li>La premi\u00e8re valeur est la cl\u00e9 du dictionnaire associ\u00e9e \u00e0 la valeur maximale ;</li> <li>La seconde valeur est la premi\u00e8re valeur maximale pr\u00e9sente dans le dictionnaire.</li> </ul> </li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; max_dico({'Bob': 102, 'Ada': 201, 'Alice': 103, 'Tim': 50})\n('Ada', 201)\n&gt;&gt;&gt; max_dico({'Alan': 222, 'Ada': 201, 'Eve': 220, 'Tim': 50})\n('Alan', 222)\n</code></pre> <pre><code>def max_dico(dico):\ncle_max = ''\nval_max = 0\nfor cle in dico:\nif dico[cle] &gt; val_max:\nval_max = dico[cle]\ncle_max = cle\nreturn (cle_max, val_max)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 08.2 \u00c9nonc\u00e9Correction <p>Nous avons l\u2019habitude de noter les expressions arithm\u00e9tiques avec des parenth\u00e8ses comme par exemple : (2 + 3) \u00d7 5. </p> <p>Il existe une autre notation utilis\u00e9e par certaines calculatrices, appel\u00e9e notation postfixe, qui n\u2019utilise pas de parenth\u00e8ses. L\u2019expression arithm\u00e9tique pr\u00e9c\u00e9dente est alors obtenue en saisissant successivement 2, puis 3, puis l\u2019op\u00e9rateur +, puis 5, et enfin l\u2019op\u00e9rateur \u00d7. On mod\u00e9lise cette saisie par le tableau [2, 3, '+', 5, '*']. </p> <p>Autre exemple, la notation postfixe de 3 \u00d7 2 + 5 est mod\u00e9lis\u00e9e par le tableau : </p> <p>[3, 2, '*', 5, '+']. </p> <p>D\u2019une mani\u00e8re plus g\u00e9n\u00e9rale, la valeur associ\u00e9e \u00e0 une expression arithm\u00e9tique en notation postfixe est d\u00e9termin\u00e9e \u00e0 l\u2019aide d\u2019une pile en parcourant l\u2019expression arithm\u00e9tique de gauche \u00e0 droite de la fa\u00e7on suivante :</p> <ul> <li>Si l\u2019\u00e9l\u00e9ment parcouru est un nombre, on le place au sommet de la pile ;</li> <li>Si l\u2019\u00e9l\u00e9ment parcouru est un op\u00e9rateur, on r\u00e9cup\u00e8re les deux \u00e9l\u00e9ments situ\u00e9s au sommet de la pile et on leur applique l\u2019op\u00e9rateur. On place alors le r\u00e9sultat au sommet de la pile.</li> <li>\u00c0 la fin du parcours, il reste alors un seul \u00e9l\u00e9ment dans la pile qui est le r\u00e9sultat de l\u2019expression arithm\u00e9tique.</li> </ul> <p>Dans le cadre de cet exercice, on se limitera aux op\u00e9rations \u00d7 et +.</p> <p>Pour cet exercice, on dispose d\u2019une classe <code>Pile</code> qui impl\u00e9mente les m\u00e9thodes de base sur la structure de pile.</p> <p>Compl\u00e9ter le script de la fonction <code>eval_expression</code> qui re\u00e7oit en param\u00e8tre une liste python repr\u00e9sentant la notation postfixe d\u2019une expression arithm\u00e9tique et qui renvoie sa valeur associ\u00e9e.</p> <pre><code>class Pile:\n\"\"\"Classe d\u00e9finissant une structure de pile.\"\"\"\ndef __init__(self):\nself.contenu = []\ndef est_vide(self):\n\"\"\"Renvoie le bool\u00e9en True si la pile est vide, False sinon.\"\"\"\nreturn self.contenu == []\ndef empiler(self, v):\n\"\"\"Place l'\u00e9l\u00e9ment v au sommet de la pile\"\"\"\nself.contenu.append(v)\ndef depiler(self):\n\"\"\"\n        Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile,\n        si la pile n\u2019est pas vide.\n        \"\"\"\nif not self.est_vide():\nreturn self.contenu.pop()\ndef eval_expression(tab):\np = Pile()\nfor ... in tab:\nif element != '+' ... element != '*':\np.empiler(...)\nelse:\nif element == ...:\nresultat = p.depiler() + ...\nelse:\nresultat = ...\np.empiler(...)\nreturn ...\n</code></pre> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; eval_expression([2, 3, '+', 5, '*'])\n25\n</code></pre> <pre><code>class Pile:\n\"\"\"Classe d\u00e9finissant une structure de pile.\"\"\"\ndef __init__(self):\nself.contenu = []\ndef est_vide(self):\n\"\"\"Renvoie le bool\u00e9en True si la pile est vide, False sinon.\"\"\"\nreturn self.contenu == []\ndef empiler(self, v):\n\"\"\"Place l'\u00e9l\u00e9ment v au sommet de la pile\"\"\"\nself.contenu.append(v)\ndef depiler(self):\n\"\"\"\n        Retire et renvoie l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile,\n        si la pile n\u2019est pas vide.\n        \"\"\"\nif not self.est_vide():\nreturn self.contenu.pop()\ndef eval_expression(tab):\np = Pile()\nfor element in tab:\nif element != '+' and element != '*':\np.empiler(element)\nelse:\nif element == '+':\nresultat = p.depiler() + p.depiler()\nelse:\nresultat = p.depiler() * p.depiler()\np.empiler(resultat)\nreturn p.depiler()\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 09.1 \u00c9nonc\u00e9Correction <p>Programmer la fonction <code>multiplication</code>, prenant en param\u00e8tres deux nombres entiers <code>n1</code> et <code>n2</code>, et qui renvoie le produit de ces deux nombres. Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. </p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; multiplication(3,5)\n15\n&gt;&gt;&gt; multiplication(-4,-8)\n32\n&gt;&gt;&gt; multiplication(-2,6)\n-12\n&gt;&gt;&gt; multiplication(-2,0)\n0\n</code></pre> <pre><code>def multiplication(n1, n2):\nif n1 &lt; 0:\nreturn -multiplication(-n1, n2)\nif n2 &lt; 0:\nreturn -multiplication(n1, -n2)\nresultat = 0\nfor _ in range(n2):\nresultat += n1\nreturn resultat\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 09.2 \u00c9nonc\u00e9Correction <p>Soit <code>tab</code> un tableau non vide d'entiers tri\u00e9s dans l'ordre croissant et <code>n</code> un entier.</p> <p>La fonction <code>chercher</code> ci-dessous doit renvoyer un indice o\u00f9 la valeur <code>n</code> appara\u00eet dans <code>tab</code> si cette valeur y figure et <code>None</code> sinon. </p> <p>Les param\u00e8tres de la fonction sont :</p> <ul> <li><code>tab</code>, le tableau dans lequel s'effectue la recherche ;</li> <li><code>n</code>, l'entier \u00e0 chercher dans le tableau ;</li> <li><code>i</code>, l'indice de d\u00e9but de la partie du tableau o\u00f9 s'effectue la recherche ;</li> <li><code>j</code>, l'indice de fin de la partie du tableau o\u00f9 s'effectue la recherche.</li> </ul> <p>L\u2019algorithme demand\u00e9 est une recherche dichotomique r\u00e9cursive.</p> <p>Recopier et compl\u00e9ter le code de la fonction <code>chercher</code> suivante :</p> <pre><code>def chercher(tab, n, i, j):\nif i &lt; 0 or j &gt; len(tab) :\nreturn None\nif i &gt; j :\nreturn None\nm = (i + j) // ...\nif ... &lt; n :\nreturn chercher(tab, n, ... , ...)\nelif ... &gt; n :\nreturn chercher(tab, n, ... , ... )\nelse :\nreturn ...\n</code></pre> <p>L'ex\u00e9cution du code doit donner : </p><pre><code>&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 7, 0, 10)\n&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 7, 0, 5)\n&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 9, 0, 5)\n4\n&gt;&gt;&gt; chercher([1, 5, 6, 6, 9, 12], 6, 0, 5)\n2\n</code></pre> <pre><code>def chercher(tab, n, i, j):\nif i &lt; 0 or j &gt; len(tab) :\nreturn None\nif i &gt; j :\nreturn None\nm = (i + j) // 2\nif tab[m] &lt; n :\nreturn chercher(tab, n, m+1 , j)\nelif tab[m] &gt; n :\nreturn chercher(tab, n, i , m-1 )\nelse :\nreturn m\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 10.1 \u00c9nonc\u00e9Correction <p>\u00c9crire la fonction <code>maxliste</code>, prenant en param\u00e8tre un tableau non vide de nombres <code>tab</code> (de type <code>list</code>) et renvoyant le plus grand \u00e9l\u00e9ment de ce tableau.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; maxliste([98, 12, 104, 23, 131, 9])\n131\n&gt;&gt;&gt; maxliste([-27, 24, -3, 15])\n24\n</code></pre> <pre><code>def maxliste(tab):\nmaximum = tab[0]\nfor element in tab:\nif element &gt; maximum:\nmaximum = element\nreturn maximum\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 10.2 \u00c9nonc\u00e9Correction <p>On dispose de cha\u00eenes de caract\u00e8res contenant uniquement des parenth\u00e8ses ouvrantes et fermantes. </p> <p>Un parenth\u00e9sage est correct si :</p> <ul> <li>le nombre de parenth\u00e8ses ouvrantes de la cha\u00eene est \u00e9gal au nombre de parenth\u00e8ses fermantes.</li> <li>en parcourant la cha\u00eene de gauche \u00e0 droite, le nombre de parenth\u00e8ses d\u00e9j\u00e0 ouvertes doit \u00eatre, \u00e0 tout moment, sup\u00e9rieur ou \u00e9gal au nombre de parenth\u00e8ses d\u00e9j\u00e0 ferm\u00e9es.</li> </ul> <p>Ainsi, <code>((()())(()))</code> est un parenth\u00e9sage correct. </p> <p>Les parenth\u00e9sages <code>())(()</code> et <code>(())(()</code> sont, eux, incorrects.</p> <p>On dispose du code de la classe <code>Pile</code> suivant :</p> <pre><code>class Pile:\n\"\"\" Classe d\u00e9finissant une pile \"\"\"\ndef __init__(self):\nself.valeurs = []\ndef est_vide(self):\n\"\"\"Renvoie True si la pile est vide, False sinon\"\"\"\nreturn self.valeurs == []\ndef empiler(self, c):\n\"\"\"Place l\u2019\u00e9l\u00e9ment c au sommet de la pile\"\"\"\nself.valeurs.append(c)\ndef depiler(self):\n\"\"\"Supprime l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, \u00e0 condition qu\u2019elle soit non vide\"\"\"\nif self.est_vide() == False:\nself.valeurs.pop()\n</code></pre> <p>On souhaite programmer une fonction parenthesage qui prend en param\u00e8tre une cha\u00eene de caract\u00e8res <code>ch</code> form\u00e9e de parenth\u00e8ses et renvoie <code>True</code> si la cha\u00eene est bien parenth\u00e9s\u00e9e et <code>False</code> sinon.</p> <p>Cette fonction utilise une pile et suit le principe suivant : en parcourant la cha\u00eene de gauche \u00e0 droite, si on trouve une parenth\u00e8se ouvrante, on l\u2019empile au sommet de la pile et si on trouve une parenth\u00e8se fermante, on d\u00e9pile (si possible) la parenth\u00e8se ouvrante stock\u00e9e au sommet de la pile. </p> <p>La cha\u00eene est alors bien parenth\u00e9s\u00e9e si, \u00e0 la fin du parcours, la pile est vide. </p> <p>Elle est, par contre, mal parenth\u00e9s\u00e9e : </p> <ul> <li>si dans le parcours, on trouve une parenth\u00e8se fermante, alors que la pile est vide ;</li> <li>ou si, \u00e0 la fin du parcours, la pile n\u2019est pas vide.</li> </ul> <pre><code>def parenthesage(ch):\n\"\"\"Renvoie True si la cha\u00eene ch est bien parenth\u00e9s\u00e9e et False sinon\"\"\"\np = Pile()\nfor c in ch:\nif c == ...:\np.empiler(c)\nelif c == ...:\nif p.est_vide():\nreturn ...\nelse:\n...\nreturn p.est_vide()\n</code></pre> <p>Compl\u00e9ter le code de la fonction <code>parenthesage</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; parenthesage(\"((()())(()))\")\nTrue\n&gt;&gt;&gt; parenthesage(\"())(()\")\nFalse\n&gt;&gt;&gt; parenthesage(\"(())(()\")\nFalse\n</code></pre> <pre><code>class Pile:\n\"\"\" Classe d\u00e9finissant une pile \"\"\"\ndef __init__(self):\nself.valeurs = []\ndef est_vide(self):\n\"\"\"Renvoie True si la pile est vide, False sinon\"\"\"\nreturn self.valeurs == []\ndef empiler(self, c):\n\"\"\"Place l\u2019\u00e9l\u00e9ment c au sommet de la pile\"\"\"\nself.valeurs.append(c)\ndef depiler(self):\n\"\"\"Supprime l\u2019\u00e9l\u00e9ment plac\u00e9 au sommet de la pile, \u00e0 condition qu\u2019elle soit non vide\"\"\"\nif self.est_vide() == False:\nself.valeurs.pop()\ndef parenthesage(ch):\n\"\"\"Renvoie True si la cha\u00eene ch est bien parenth\u00e9s\u00e9e et False sinon\"\"\"\np = Pile()\nfor c in ch:\nif c == '(':\np.empiler(c)\nelif c == ')':\nif p.est_vide():\nreturn False\nelse:\np.depiler()\nreturn p.est_vide()\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 11.1 \u00c9nonc\u00e9Correction <p>On mod\u00e9lise la repr\u00e9sentation binaire d'un entier non sign\u00e9 par un tableau d'entiers dont les \u00e9l\u00e9ments sont 0 ou 1. Par exemple, le tableau <code>[1, 0, 1, 0, 0, 1, 1]</code> repr\u00e9sente l'\u00e9criture binaire de l'entier dont l'\u00e9criture d\u00e9cimale est <code>2**6 + 2**4 + 2**1 + 2**0 = 83</code>.</p> <p>\u00c0 l'aide d'un parcours s\u00e9quentiel, \u00e9crire la fonction <code>convertir</code> r\u00e9pondant aux sp\u00e9cifications suivantes :</p> <p></p><pre><code>def convertir(tab):\n\"\"\"\n    tab est un tableau d'entiers, dont les \u00e9l\u00e9ments sont 0 ou 1 et\n    repr\u00e9sentant un entier \u00e9crit en binaire. Renvoie l'\u00e9criture\n    d\u00e9cimale de l'entier positif dont la repr\u00e9sentation binaire\n    est donn\u00e9e par le tableau tab\n    \"\"\"\n</code></pre> Exemple : <pre><code>&gt;&gt;&gt; convertir([1, 0, 1, 0, 0, 1, 1])\n83\n&gt;&gt;&gt; convertir([1, 0, 0, 0, 0, 0, 1, 0])\n130\n</code></pre> <pre><code>def convertir(tab):\npuissance = 0\ntotal = 0\nfor i in range(len(tab)-1, -1, -1):\ntotal += tab[i]*(2**puissance)\npuissance += 1\nreturn total\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 11.2 \u00c9nonc\u00e9Correction <p>La fonction <code>tri_insertion</code> suivante prend en argument une liste <code>tab</code> et trie cette liste en utilisant la m\u00e9thode du tri par insertion. Compl\u00e9ter cette fonction pour qu'elle r\u00e9ponde \u00e0 la sp\u00e9cification demand\u00e9e.</p> <p>On rappelle le principe du tri par insertion : on consid\u00e8re les \u00e9l\u00e9ments \u00e0 trier un par un, le premier \u00e9l\u00e9ment constituant, \u00e0 lui tout seul, une liste tri\u00e9e de longueur 1. On range ensuite le second \u00e9l\u00e9ment pour constituer une liste tri\u00e9e de longueur 2, puis on range le troisi\u00e8me \u00e9l\u00e9ment pour avoir une liste tri\u00e9e de longueur 3 et ainsi de suite\u2026 A chaque \u00e9tape, le premier \u00e9l\u00e9ment de la sous-liste non tri\u00e9e est plac\u00e9 dans la sous-liste des \u00e9l\u00e9ments d\u00e9j\u00e0 tri\u00e9s de sorte que cette sous-liste demeure tri\u00e9e.  </p> <p>Le principe du tri par insertion est donc d'ins\u00e9rer \u00e0 la n-i\u00e8me it\u00e9ration, le n-i\u00e8me \u00e9l\u00e9ment \u00e0 la bonne place.</p> <pre><code>def tri_insertion(tab):\nn = len(tab)\nfor i in range(1, n):\nvaleur_insertion = tab[...]\n# la variable j sert \u00e0 d\u00e9terminer o\u00f9 placer la valeur \u00e0 ranger\nj = ...\n# tant qu'on a pas trouv\u00e9 la place de l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer\n# on d\u00e9cale les valeurs du tableau vers la droite\nwhile j &gt; ... and valeur_insertion &lt; tab[...]:\ntab[j] = tab[j-1]\nj = ...\ntab[j] = ...\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; liste = [9, 5, 8, 4, 0, 2, 7, 1, 10, 3, 6]\n&gt;&gt;&gt; tri_insertion(liste)\n&gt;&gt;&gt; liste\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n</code></pre> <pre><code>def tri_insertion(tab):\nn = len(tab)\nfor i in range(1, n):\nvaleur_insertion = tab[i]\n# la variable j sert \u00e0 d\u00e9terminer o\u00f9 placer la valeur \u00e0 ranger\nj = i\n# tant qu'on a pas trouv\u00e9 la place de l'\u00e9l\u00e9ment \u00e0 ins\u00e9rer\n# on d\u00e9cale les valeurs du tableau vers la droite\nwhile j &gt; 0 and valeur_insertion &lt; tab[j-1]:\ntab[j] = tab[j-1]\nj = j - 1\ntab[j] = valeur_insertion\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 12.1 \u00c9nonc\u00e9Correction <p>On consid\u00e8re la classe <code>ABR</code>, dont le constructeur est le suivant :</p> <pre><code>class ABR:\ndef __init__(self, g0, v0, d0):\nself.gauche = g0\nself.cle = v0\nself.droit = d0\ndef __repr__(self):\nif self is None:\nreturn ''\nelse:\nreturn '(' + (self.gauche).__repr__() + ',' + str(self.cle) + ',' +(self.droit).__repr__() + ')'\n</code></pre> <p></p> <p>Ainsi, l\u2019arbre binaire de recherche <code>abr1</code> ci- contre est cr\u00e9\u00e9 par le code python ci- dessous</p> <pre><code>n0 = ABR(None, 0, None)\nn3 = ABR(None, 3, None)\nn2 = ABR(None, 2, n3)\nn3 = ABR(n0, 1, n2)\n</code></pre> <p>Dans tout le code, <code>None</code> correspondra \u00e0 un arbre vide.</p> <p>La classe <code>ABR</code> dispose aussi d\u2019une m\u00e9thode de repr\u00e9sentation (<code>__repr__</code> ), qui affiche entre parenth\u00e8ses le contenu du sous arbre gauche, puis la cl\u00e9 de l\u2019arbre, et enfin le contenu du sous arbre droit. Elle s\u2019utilise en console de la mani\u00e8re suivante :</p> <pre><code>&gt;&gt;&gt; abr1\n((None,0,None),1,(None,2,(None,3,None)))\n</code></pre> <p>\u00c9crire une fonction r\u00e9cursive <code>ajoute(cle, a)</code> qui prend en param\u00e8tres une cl\u00e9 <code>cle</code> et un arbre binaire de recherche <code>a</code>  , et qui renvoie un arbre binaire de recherche dans lequel <code>cle</code> a \u00e9t\u00e9 ins\u00e9r\u00e9e. Dans le cas o\u00f9 <code>cle</code> est d\u00e9j\u00e0 pr\u00e9sente dans <code>a</code>, la fonction renvoie l\u2019arbre <code>a</code> inchang\u00e9.</p> <p>R\u00e9sultats \u00e0 obtenir :</p> <pre><code>&gt;&gt;&gt; a = ajoute(4, abr1)\n&gt;&gt;&gt; a\n((None,0,None),1,(None,2,(None,3,(None,4,None))))\n&gt;&gt;&gt; ajoute(-5, abr1)\n(((None,-5,None),0,None),1,(None,2,(None,3,None)))\n&gt;&gt;&gt; ajoute(2, abr1)\n((None,0,None),1,(None,2,(None,3,None)))\n</code></pre> <pre><code>def ajoute(cle, a): \nif a is None:\na = ABR(None, cle, None)\nelif cle &gt; a.cle:\na.droit = ajoute(cle, a.droit)\nelif cle &lt; a.cle:\na.gauche = ajoute(cle, a.gauche)\nreturn a\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 12.2 \u00c9nonc\u00e9Correction <p>On dispose d\u2019un ensemble d\u2019objets dont on conna\u00eet, pour chacun, la masse. On souhaite ranger l\u2019ensemble de ces objets dans des boites identiques de telle mani\u00e8re que la somme des masses des objets contenus dans une bo\u00eete ne d\u00e9passe pas la capacit\u00e9 <code>c</code> de la bo\u00eete. On souhaite utiliser le moins de bo\u00eetes possibles pour ranger cet ensemble d\u2019objets.</p> <p>Pour r\u00e9soudre ce probl\u00e8me, on utilisera un algorithme glouton consistant \u00e0 placer chacun des objets dans la premi\u00e8re bo\u00eete o\u00f9 cela est possible.</p> <p>Par exemple, pour ranger dans des bo\u00eetes de capacit\u00e9 <code>c = 5</code> un ensemble de trois objets dont les masses sont repr\u00e9sent\u00e9es en Python par la liste <code>[1, 5, 2]</code>, on proc\u00e8de de la fa\u00e7on suivante :</p> <ul> <li>Le premier objet, de masse 1, va dans une premi\u00e8re boite.</li> <li>Le deuxi\u00e8me objet, de masse 5, ne peut pas aller dans la m\u00eame boite que le premier objet car cela d\u00e9passerait la capacit\u00e9 de la boite. On place donc cet objet dans une deuxi\u00e8me bo\u00eete.</li> <li>Le troisi\u00e8me objet, de masse 2, va dans la premi\u00e8re bo\u00eete.</li> </ul> <p>On a donc utilis\u00e9 deux bo\u00eetes de capacit\u00e9 <code>c = 5</code> pour ranger les 3 objets.</p> <p>Compl\u00e9ter la fonction Python <code>empaqueter(liste_masses, c)</code> suivante pour qu\u2019elle renvoie le nombre de bo\u00eetes de capacit\u00e9 c n\u00e9cessaires pour empaqueter un ensemble d\u2019objets dont les masses sont contenues dans la liste <code>liste_masses</code>.</p> <pre><code>def empaqueter(liste_masses, c):\nn = len(liste_masses)\nnb_boites = 0\nboites = [0]*n\nfor masse in ... :\ni = 0\nwhile i &lt;= nb_boites and boites[i] + ... &gt; C:\ni = i + 1\nif i == nb_boites + 1:\n...\nboites[i] = ...\nreturn ...\n</code></pre> <p>Tester ensuite votre fonction : </p><pre><code>&gt;&gt;&gt; empaqueter([7, 6, 3, 4, 8, 5, 9, 2], 11)\n5\n</code></pre> <pre><code>def empaqueterR(liste_masses, c):\nn = len(liste_masses)\nnb_boites = 0\nboites = [0]*n\nfor masse in liste_masses :\ni = 0\nwhile i &lt;= nb_boites and boites[i] + masse &gt; c:\ni = i + 1\nif i == nb_boites + 1:\nnb_boites = nb_boites + 1\nboites[i] = boites[i] + masse\nreturn nb_boites + 1\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 13.1 \u00c9nonc\u00e9Correction <p>\u00c9crire en langage Python une fonction <code>recherche</code> prenant comme param\u00e8tres une variable <code>a</code> de type num\u00e9rique (<code>float</code> ou <code>int</code>) et un tableau <code>tab</code> (type <code>list</code>) et qui renvoie le nombre d'occurrences de <code>a</code> dans <code>tab</code>.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche(5, [])\n0\n&gt;&gt;&gt; recherche(5, [-2, 3, 4, 8])\n0\n&gt;&gt;&gt; recherche(5, [-2, 3, 1, 5, 3, 7, 4])\n1\n&gt;&gt;&gt; recherche(5, [-2, 5, 3, 5, 4, 5])\n3\n</code></pre> <pre><code>def recherche(a, tab):\nnb = 0\nfor element in tab:\nif element == a:\nnb += 1\nreturn nb\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 13.2 \u00c9nonc\u00e9Correction <p>La fonction <code>rendu_monnaie</code> prend en param\u00e8tres deux nombres entiers positifs <code>somme_due</code> et <code>somme_versee</code> et elle permet de proc\u00e9der au rendu de monnaie de la diff\u00e9rence <code>somme_versee \u2013 somme_due</code> pour des achats effectu\u00e9s avec le syst\u00e8me de pi\u00e8ces de la zone Euro. On utilise pour cela un algorithme glouton qui commence par rendre le maximum de pi\u00e8ces de plus grandes valeurs et ainsi de suite. Par la suite, on assimilera les billets \u00e0 des pi\u00e8ces.</p> <p>La fonction <code>rendu_monnaie</code> renvoie un tableau de type <code>list</code> contenant les pi\u00e8ces qui composent le rendu.</p> <p>Toutes les sommes sont exprim\u00e9es en euros. Les valeurs possibles pour les pi\u00e8ces sont donc <code>[1, 2, 5, 10, 20, 50, 100, 200]</code>.</p> <p>Ainsi, l\u2019instruction <code>rendu_monnaie(452, 500)</code> renvoie le tableau <code>[20, 20, 5, 2, 1]</code>.</p> <p>En effet, la somme \u00e0 rendre est de <code>48</code> euros soit <code>20 + 20 + 5 + 2 + 1</code>.</p> <p>Le code de la fonction <code>rendu_monnaie</code> est donn\u00e9 ci-dessous :</p> <pre><code>def rendu_monnaie(somme_due, somme_versee):\npieces = [1, 2, 5, 10, 20, 50, 100, 200]\nrendu = ...\na_rendre = ...\ni = len(pieces) - 1\nwhile a_rendre &gt; ... :\nif pieces[i] &lt;= a_rendre :\nrendu.append(...)\na_rendre = ...\nelse :\ni = ...\nreturn rendu\n</code></pre> <p>Compl\u00e9ter ce code et le tester : </p><pre><code>&gt;&gt;&gt; rendu_monnaie(700,700)\n[]\n&gt;&gt;&gt; rendu_monnaie(102,500)\n[200, 100, 50, 20, 20, 5, 2, 1]\n</code></pre> <pre><code>def rendu_monnaie(somme_due, somme_versee):\npieces = [1, 2, 5, 10, 20, 50, 100, 200]\nrendu = []\na_rendre = somme_versee - somme_due\ni = len(pieces) - 1\nwhile a_rendre &gt; 0 :\nif pieces[i] &lt;= a_rendre :\nrendu.append(pieces[i])\na_rendre = a_rendre - pieces[i]\nelse :\ni = i - 1\nreturn rendu\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 14.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres <code>elt</code> un nombre entier et <code>tab</code> un tableau de nombres entiers, et qui renvoie l\u2019indice de la premi\u00e8re occurrence de <code>elt</code> dans <code>tab</code> si <code>elt</code> est dans <code>tab</code> et <code>-1</code> sinon.</p> <p>Ne pas oublier d\u2019ajouter au corps de la fonction une documentation et une ou plusieurs assertions pour v\u00e9rifier les pr\u00e9-conditions.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche(1, [2, 3, 4])\n-1\n&gt;&gt;&gt; recherche(1, [10, 12, 1, 56])\n2\n&gt;&gt;&gt; recherche(50, [1, 50, 1])\n1\n&gt;&gt;&gt; recherche(15, [8, 9, 10, 15])\n3\n</code></pre> <pre><code>def recherche(elt, tab):\n'''\n    renvoie l\u2019indice de la premi\u00e8re occurrence de\n    elt dans tab si elt est dans tab et -1 sinon. \n    '''\nassert tab != [], \"le tableau est vide\"\nfor i in range(len(tab)):\nif tab[i] == elt:\nreturn i        \nreturn -1         \n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 14.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re la fonction <code>insere</code> ci-dessous qui prend en argument un entier <code>a</code> et un tableau <code>tab</code> d'entiers tri\u00e9s par ordre croissant. Cette fonction cr\u00e9e et renvoie un nouveau tableau \u00e0 partir de celui fourni en param\u00e8tre en y ins\u00e9rant la valeur <code>a</code> de sorte que le tableau renvoy\u00e9 soit encore tri\u00e9 par ordre croissant. Les tableaux seront repr\u00e9sent\u00e9s sous la forme de listes Python.</p> <pre><code>def insere(a, tab):\n\"\"\"\n    Ins\u00e8re l'\u00e9l\u00e9ment a (int) dans le tableau tab (list)\n    tri\u00e9 par ordre croissant \u00e0 sa place et renvoie le\n    nouveau tableau.\n    \"\"\"\nl = list(tab) #l contient les m\u00eames \u00e9l\u00e9ments que tab\nl.append(a)\ni = ...\nwhile a &lt; ... and i &gt;= 0:\nl[i+1] = ...\nl[i] = a\ni = ...\nreturn l\n</code></pre> <p>Compl\u00e9ter la fonction <code>insere</code> ci-dessus.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; insere(3, [1, 2, 4, 5])\n[1, 2, 3, 4, 5]\n&gt;&gt;&gt; insere(30, [1, 2, 7, 12, 14, 25])\n[1, 2, 7, 12, 14, 25, 30]\n&gt;&gt;&gt; insere(1, [2, 3, 4])\n[1, 2, 3, 4]\n&gt;&gt;&gt; insere(1, [])\n[1]\n</code></pre> <pre><code>def insere(a, tab):\n\"\"\"\n    Ins\u00e8re l'\u00e9l\u00e9ment a (int) dans le tableau tab (list)\n    tri\u00e9 par ordre croissant \u00e0 sa place et renvoie le\n    nouveau tableau.\n    \"\"\"\nl = list(tab) #l contient les m\u00eames \u00e9l\u00e9ments que tab\nl.append(a)\ni = len(l) - 2\nwhile a &lt; l[i] and i &gt;= 0:\nl[i+1] = l[i]\nl[i] = a\ni = i - 1\nreturn l\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 15.1 \u00c9nonc\u00e9Correction <p>On a relev\u00e9 les valeurs moyennes annuelles des temp\u00e9ratures \u00e0 Paris pour la p\u00e9riode allant de 2013 \u00e0 2019. Les r\u00e9sultats ont \u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9s sous la forme de deux listes : l\u2019une pour les temp\u00e9ratures, l\u2019autre pour les ann\u00e9es : </p><pre><code>t_moy = [14.9, 13.3, 13.1, 12.5, 13.0, 13.6, 13.7]\nannees = [2013, 2014, 2015, 2016, 2017, 2018, 2019]\n</code></pre> <p>\u00c9crire la fonction <code>mini</code> qui prend en param\u00e8tres un tableau <code>releve</code> des relev\u00e9s et un tableau <code>date</code> des dates et qui renvoie la plus petite valeur relev\u00e9e au cours de la p\u00e9riode et l\u2019ann\u00e9e correspondante. On suppose que la temp\u00e9rature minimale est atteinte une seule fois.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; mini(t_moy, annees)\n(12.5, 2016)\n</code></pre> <pre><code>t_moy = [14.9, 13.3, 13.1, 12.5, 13.0, 13.6, 13.7]\nannees = [2013, 2014, 2015, 2016, 2017, 2018, 2019]\ndef mini(releve, date):\ntemp_mini = releve[0]\ndate_mini = date[0]\nfor i in range(len(releve)):\nif releve[i] &lt; temp_mini:\ntemp_mini = releve[i]\ndate_mini = date[i]\nreturn temp_mini, date_mini\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 15.2 \u00c9nonc\u00e9Correction <p>Un mot palindrome peut se lire de la m\u00eame fa\u00e7on de gauche \u00e0 droite ou de droite \u00e0 gauche : bob, radar, et non sont des mots palindromes.</p> <p>De m\u00eame certains nombres sont eux aussi des palindromes : 33, 121, 345543.</p> <p>L\u2019objectif de cet exercice est d\u2019obtenir un programme Python permettant de tester si un nombre est un nombre palindrome.</p> <p>Pour remplir cette t\u00e2che, on vous demande de compl\u00e9ter le code des trois fonctions ci- dessous sachant que la fonction <code>est_nbre_palindrome</code> s\u2019appuiera sur la fonction <code>est_palindrome</code> qui elle-m\u00eame s\u2019appuiera sur la fonction <code>inverse_chaine</code>.</p> <p>La fonction <code>inverse_chaine</code> inverse l'ordre des caract\u00e8res d'une cha\u00eene de caract\u00e8res <code>chaine</code> et renvoie la cha\u00eene invers\u00e9e.</p> <p>La fonction <code>est_palindrome</code> teste si une chaine de caract\u00e8res <code>chaine</code> est un palindrome. Elle renvoie <code>True</code> si c\u2019est le cas et <code>False</code> sinon. Cette fonction s\u2019appuie sur la fonction pr\u00e9c\u00e9dente.</p> <p>La fonction <code>est_nbre_palindrome</code> teste si un nombre <code>nbre</code> est un palindrome. Elle renvoie <code>True</code> si c\u2019est le cas et <code>False</code> sinon. Cette fonction s\u2019appuie sur la fonction pr\u00e9c\u00e9dente.</p> <p>Compl\u00e9ter le code des trois fonctions ci-dessous.</p> <p></p><pre><code>def inverse_chaine(chaine):\nresult = ...\nfor caractere in chaine:\nresult = ...\nreturn result\ndef est_palindrome(chaine):\ninverse = inverse_chaine(chaine)\nreturn ...\ndef est_nbre_palindrome(nbre):\nchaine = ...\nreturn est_palindrome(chaine)\n</code></pre> Exemples : <pre><code>&gt;&gt;&gt; inverse_chaine('bac')\n'cab'\n&gt;&gt;&gt; est_palindrome('NSI')\nFalse\n&gt;&gt;&gt; est_palindrome('ISN-NSI')\nTrue\n&gt;&gt;&gt; est_nbre_palindrome(214312)\nFalse\n&gt;&gt;&gt; est_nbre_palindrome(213312)\nTrue\n</code></pre> <pre><code>def inverse_chaine(chaine):\nresult = ''\nfor caractere in chaine:\nresult = caractere + result\nreturn result\ndef est_palindrome(chaine):\ninverse = inverse_chaine(chaine)\nreturn chaine == inverse\ndef est_nbre_palindrome(nbre):\nchaine = str(nbre)\nreturn est_palindrome(chaine)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 16.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>recherche_indices_classement</code> qui prend en param\u00e8tres un entier <code>elt</code> et une liste d\u2019entiers <code>tab</code>, et qui renvoie trois listes :</p> <ul> <li>la premi\u00e8re liste contient les indices des valeurs de la liste <code>tab</code> strictement inf\u00e9rieures \u00e0 <code>elt</code> ;</li> <li>la deuxi\u00e8me liste contient les indices des valeurs de la liste <code>tab</code> \u00e9gales \u00e0 <code>elt</code> ;</li> <li>la troisi\u00e8me liste contient les indices des valeurs de la liste <code>tab</code> strictement sup\u00e9rieures \u00e0 <code>elt</code>.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; recherche_indices_classement(3, [1, 3, 4, 2, 4, 6, 3, 0])\n([0, 3, 7], [1, 6], [2, 4, 5])\n&gt;&gt;&gt; recherche_indices_classement(3, [1, 4, 2, 4, 6, 0])\n([0, 2, 5], [], [1, 3, 4])\n&gt;&gt;&gt;recherche_indices_classement(3, [1, 1, 1, 1])\n([0, 1, 2, 3], [], [])\n&gt;&gt;&gt; recherche_indices_classement(3, [])\n([], [], [])\n</code></pre> <pre><code>def recherche_indices_classement(elt, tab):\nind_inf = []\nind_egal = []\nind_sup = [] \nfor i in range(len(tab)):\nif tab[i] &lt; elt:\nind_inf.append(i)\nelif tab[i] &gt; elt:\nind_sup.append(i)\nelse:\nind_egal.append(i)\nreturn (ind_inf, ind_egal, ind_sup)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 16.2 \u00c9nonc\u00e9Correction <p>Un professeur de NSI d\u00e9cide de g\u00e9rer les r\u00e9sultats de sa classe sous la forme d\u2019un dictionnaire :</p> <ul> <li>les clefs sont les noms des \u00e9l\u00e8ves ;</li> <li>les valeurs sont des dictionnaires dont les clefs sont les types d\u2019\u00e9preuves sous forme de cha\u00eene de caract\u00e8res et les valeurs sont les notes obtenues associ\u00e9es \u00e0 leurs coefficients dans une liste.</li> </ul> <p>Avec :</p> <pre><code>resultats = {'Dupont': {\n'DS1': [15.5, 4],\n'DM1': [14.5, 1],\n'DS2': [13, 4],\n'PROJET1': [16, 3],\n'DS3': [14, 4]\n},\n'Durand': {\n'DS1': [6 , 4],\n'DM1': [14.5, 1],\n'DS2': [8, 4],\n'PROJET1': [9, 3],\n'IE1': [7, 2],\n'DS3': [8, 4],\n'DS4':[15, 4]\n}\n}\n</code></pre> <p>L\u2019\u00e9l\u00e8ve dont le nom est Durand a ainsi obtenu au DS2 la note de 8 avec un coefficient 4.</p> <p>Le professeur cr\u00e9e une fonction <code>moyenne</code> qui prend en param\u00e8tre le nom d\u2019un de ses \u00e9l\u00e8ves et renvoie sa moyenne arrondie au dixi\u00e8me.</p> <p>Compl\u00e9ter le code du professeur ci-dessous :</p> <pre><code>def moyenne(nom, dico_result):\nif nom in ...:\nnotes = dico_result[nom]\ntotal_points = ...\ntotal_coefficients = ...\nfor ...  in notes.values():\nnote, coefficient = valeurs\ntotal_points = total_points + ... * coefficient\ntotal_coefficients = ... + coefficient\nreturn round( ... / total_coefficients, 1 )\nelse:\nreturn -1\n</code></pre> <pre><code>def moyenne(nom, dico_result):\nif nom in dico_result:\nnotes = dico_result[nom]\ntotal_points = 0.\ntotal_coefficients = 0\nfor valeurs  in notes.values():\nnote, coefficient = valeurs\ntotal_points = total_points + note * coefficient\ntotal_coefficients = total_coefficients + coefficient\nreturn round( total_points / total_coefficients, 1 )\nelse:\nreturn -1\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 17.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>moyenne(liste_notes)</code> qui renvoie la moyenne pond\u00e9r\u00e9e des r\u00e9sultats contenus dans la liste <code>liste_notes</code>, non vide, donn\u00e9e en param\u00e8tre. Cette liste contient des couples <code>(note, coefficient)</code> dans lesquels :</p> <ul> <li><code>note</code> est un nombre de type flottant (<code>float</code>) compris entre 0 et 20 ;</li> <li><code>coefficient</code> est un nombre entier strictement positif.</li> </ul> <p>Ainsi l\u2019expression <code>moyenne([(15,2),(9,1),(12,3)])</code> devra renvoyer <code>12.5</code>.</p> <p>\\(\\dfrac{2 \\times 15 + 1 \\times 9 + 3 \\times 12 }{2+1+3}=12,5\\)</p> <pre><code>def moyenne(liste_notes):\nsomme_notes = 0\nsomme_coeffs = 0\nfor devoir in liste_notes:\nnote = devoir[0]\ncoeff = devoir[1]\nsomme_notes += note * coeff\nsomme_coeffs += coeff\nreturn somme_notes / somme_coeffs\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 17.2 \u00c9nonc\u00e9Correction <p>On cherche \u00e0 d\u00e9terminer les valeurs du triangle de Pascal (Figure 1).</p> <p>Dans le triangle de Pascal, chaque ligne commence et se termine par le nombre 1. Comme l\u2019illustre la Figure 2, on additionne deux valeurs successives d\u2019une ligne pour obtenir la valeur qui se situe sous la deuxi\u00e8me valeur.</p> <p></p> <p>Compl\u00e9ter la fonction <code>pascal</code> ci-apr\u00e8s prenant en param\u00e8tre un entier <code>n</code> sup\u00e9rieur ou \u00e9gal \u00e0 2. Cette fonction doit renvoyer une liste correspondant au triangle de Pascal de la ligne 0 \u00e0 la ligne <code>n</code>. Le tableau repr\u00e9sentant le triangle de Pascal sera contenu dans la variable <code>triangle</code>.</p> <pre><code>def pascal(n):\ntriangle = [[1]]\nfor k in range(1,...):\nligne_k = [...]\nfor i in range(1,k):\nligne_k.append(triangle[...][i-1]+triangle[...][...])\nligne_k.append(...)\ntriangle.append(ligne_k)\nreturn triangle\n</code></pre> <p>Pour <code>n = 4</code>, voici ce qu'on devra obtenir : </p><pre><code>&gt;&gt;&gt; pascal(4)\n[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\n</code></pre> Pour <code>n = 5</code>, voici ce qu'on devra obtenir : <pre><code>&gt;&gt;&gt; pascal(5)\n[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1], [1, 5, 10, 10, 5, 1]]\n</code></pre> <pre><code>def pascal(n):\ntriangle = [[1]]\nfor k in range(1, n+1):\nligne_k = [1]\nfor i in range(1, k):\nligne_k.append(triangle[k-1][i-1] + triangle[k-1][i])\nligne_k.append(1)\ntriangle.append(ligne_k)\nreturn triangle\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 18.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>max_et_indice</code> qui prend en param\u00e8tre une liste non vide <code>tab</code> de nombres entiers et qui renvoie la valeur du plus grand \u00e9l\u00e9ment de cette liste ainsi que l\u2019indice de sa premi\u00e8re apparition dans cette liste.</p> <p>L\u2019utilisation de la fonction native <code>max</code> n\u2019est pas autoris\u00e9e.</p> <p>Ne pas oublier d\u2019ajouter au corps de la fonction une documentation et une ou plusieurs assertions pour v\u00e9rifier les pr\u00e9-conditions.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; max_et_indice([1, 5, 6, 9, 1, 2, 3, 7, 9, 8])\n(9, 3)\n&gt;&gt;&gt; max_et_indice([-2])\n(-2, 0)\n&gt;&gt;&gt; max_et_indice([-1, -1, 3, 3, 3])\n(3, 2)\n&gt;&gt;&gt; max_et_indice([1, 1, 1, 1])\n(1, 0)\n</code></pre> <pre><code>def max_et_indice(tab):\n'''\n    renvoie la valeur du plus grand \u00e9l\u00e9ment de cette liste ainsi\n    que l\u2019indice de sa premi\u00e8re apparition dans cette liste.\n    '''\nassert tab != [], 'le tableau est vide'\nval_max = tab[0]\nind_max = 0\nfor i in range(len(tab)):\nif tab[i] &gt; val_max:\nval_max = tab[i]\nind_max = i\nreturn (val_max, ind_max)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 18.2 \u00c9nonc\u00e9Correction <p>L\u2019ordre des g\u00e8nes sur un chromosome est repr\u00e9sent\u00e9 par un tableau <code>ordre</code> de <code>n</code> cases d\u2019entiers distincts deux \u00e0 deux et compris entre 1 et <code>n</code>.</p> <p>Par exemple, <code>ordre = [5, 4, 3, 6, 7, 2, 1, 8, 9]</code> dans le cas <code>n = 9</code>.</p> <p>On dit qu\u2019il y a un point de rupture dans <code>ordre</code> dans chacune des situations suivantes :</p> <ul> <li>la premi\u00e8re valeur de <code>ordre</code> n\u2019est pas 1 ;</li> <li>l\u2019\u00e9cart entre deux g\u00e8nes cons\u00e9cutifs n\u2019est pas \u00e9gal \u00e0 1 ;</li> <li>la derni\u00e8re valeur de <code>ordre</code> n\u2019est pas n.</li> </ul> <p>Par exemple, si <code>ordre = [5, 4, 3, 6, 7, 2, 1, 8, 9]</code> avec <code>n = 9</code>, on a</p> <ul> <li>un point de rupture au d\u00e9but car 5 est diff\u00e9rent de 1</li> <li>un point de rupture entre 3 et 6 (l\u2019\u00e9cart est de 3)</li> <li>un point de rupture entre 7 et 2 (l\u2019\u00e9cart est de 5)</li> <li>un point de rupture entre 1 et 8 (l\u2019\u00e9cart est de 7)</li> </ul> <p>Il y a donc 4 points de rupture.</p> <p>Compl\u00e9ter les fonctions Python <code>est_un_ordre</code> et <code>nombre_points_rupture</code> propos\u00e9es \u00e0 la page suivante pour que :</p> <ul> <li> <p>la fonction <code>est_un_ordre</code> renvoie <code>True</code> si le tableau pass\u00e9 en param\u00e8tre repr\u00e9sente bien un ordre de g\u00e8nes de chromosome et <code>False</code> sinon ;</p> </li> <li> <p>la fonction <code>nombre_points_rupture</code> renvoie le nombre de points de rupture d\u2019un tableau pass\u00e9 en param\u00e8tre repr\u00e9sentant l\u2019ordre de g\u00e8nes d\u2019un chromosome.</p> </li> </ul> <pre><code>def est_un_ordre(tab):\n'''\n    Renvoie True si tab est de longueur n et contient tous les entiers\n    de 1 \u00e0 n, False sinon\n    '''\nfor i in range(1,...):\nif ...:\nreturn False\nreturn True\ndef nombre_points_rupture(ordre):\n'''\n    Renvoie le nombre de point de rupture de ordre qui repr\u00e9sente un ordre\n    de g\u00e8nes de chromosome\n    '''\nassert ... # ordre n'est pas un ordre de g\u00e8nes\nn = len(ordre)\nnb = 0\nif ordre[...] != 1: # le premier n'est pas 1\nnb = nb + 1\ni = 0\nwhile i &lt; ...:\nif ... not in [-1, 1]: # l'\u00e9cart n'est pas 1\nnb = nb + 1\ni = i + 1\nif ordre[...] != n: # le dernier n'est pas n\nnb = nb + 1\nreturn nb\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; est_un_ordre([1, 6, 2, 8, 3, 7])\nFalse\n&gt;&gt;&gt; est_un_ordre([5, 4, 3, 6, 7, 2, 1, 8, 9])\nTrue\n&gt;&gt;&gt; nombre_points_rupture([5, 4, 3, 6, 7, 2, 1, 8, 9])\n4\n&gt;&gt;&gt; nombre_points_rupture([1, 2, 3, 4, 5])\n0\n&gt;&gt;&gt; nombre_points_rupture([1, 6, 2, 8, 3, 7, 4, 5])\n7\n&gt;&gt;&gt; nombre_points_rupture([2, 1, 3, 4])\n2\n</code></pre> <pre><code>def est_un_ordre(tab):\n'''\n    Renvoie True si tab est de longueur n et contient tous les entiers\n    de 1 \u00e0 n, False sinon\n    '''\nfor i in range(1, len(tab)+1):\nif i not in tab:\nreturn False\nreturn True\ndef nombre_points_rupture(ordre):\n'''\n    Renvoie le nombre de point de rupture de ordre qui repr\u00e9sente un ordre\n    de g\u00e8nes de chromosome\n    '''\nassert est_un_ordre(ordre) # ordre n'est pas un ordre de g\u00e8nes\nn = len(ordre)\nnb = 0\nif ordre[0] != 1: # le premier n'est pas 1\nnb = nb + 1\ni = 0\nwhile i &lt; n-1:\nif ordre[i+1] - ordre[i] not in [-1, 1]: # l'\u00e9cart n'est pas 1\nnb = nb + 1\ni = i + 1\nif ordre[n-1] != n: # le dernier n'est pas n\nnb = nb + 1\nreturn nb\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 19.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres un tableau <code>tab</code> de nombres entiers tri\u00e9s par ordre croissant et un nombre entier <code>n</code>, et qui effectue une recherche dichotomique du nombre entier <code>n</code> dans le tableau non vide <code>tab</code>.</p> <p>Cette fonction doit renvoyer un indice correspondant au nombre cherch\u00e9 s\u2019il est dans le tableau, <code>-1</code> sinon.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche([2, 3, 4, 5, 6], 5)\n3\n&gt;&gt;&gt; recherche([2, 3, 4, 6, 7], 5)\n-1\n</code></pre> <pre><code>def recherche(tab, n):\nind_debut = 0\nind_fin = len(tab) - 1\nwhile ind_debut &lt;= ind_fin:\nind_milieu = (ind_debut + ind_fin) // 2\nif tab[ind_milieu] == n:\nreturn ind_milieu\nelif tab[ind_milieu] &lt; n:\nind_debut = ind_milieu + 1\nelse:\nind_fin = ind_milieu - 1\nreturn -1\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 19.2 \u00c9nonc\u00e9Correction <p>Le codage de C\u00e9sar transforme un message en changeant chaque lettre en la d\u00e9calant dans l\u2019alphabet. Par exemple, avec un d\u00e9calage de 3, le A se transforme en D, le B en E, ..., le X en A, le Y en B et le Z en C. Les autres caract\u00e8res (\u2018!\u2019,\u2019 ?\u2019 ...) ne sont pas cod\u00e9s.</p> <p>La fonction <code>position_alphabet</code> ci-dessous prend en param\u00e8tre un caract\u00e8re <code>lettre</code> et renvoie la position de <code>lettre</code> dans la cha\u00eene de caract\u00e8res <code>ALPHABET</code> s\u2019il s\u2019y trouve.</p> <p>La fonction <code>cesar</code> prend en param\u00e8tre une cha\u00eene de caract\u00e8res <code>message</code> et un nombre entier <code>decalage</code> et renvoie le nouveau message cod\u00e9 avec le codage de C\u00e9sar utilisant le d\u00e9calage <code>decalage</code>.</p> <pre><code>ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\ndef position_alphabet(lettre):\nreturn ord(lettre) - ord('A')\ndef cesar(message, decalage):\nresultat = ''\nfor ... in message:\nif 'A' &lt;= c and c &lt;= 'Z':\nindice = ( ... ) % 26\nresultat = resultat + ALPHABET[indice]\nelse:\nresultat = ...\nreturn resultat\n</code></pre> <p>Compl\u00e9ter la fonction <code>cesar</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; cesar('BONJOUR A TOUS. VIVE LA MATIERE NSI !', 4)\n'FSRNSYV E XSYW. ZMZI PE QEXMIVI RWM !'\n&gt;&gt;&gt; cesar('GTSOTZW F YTZX. ANAJ QF RFYNJWJ SXN !', -5)\n'BONJOUR A TOUS. VIVE LA MATIERE NSI !'\n</code></pre> <pre><code>ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\ndef position_alphabet(lettre):\nreturn ord(lettre) - ord('A')\ndef cesar(message, decalage):\nresultat = ''\nfor c in message:\nif 'A' &lt;= c and c &lt;= 'Z':\nindice = (position_alphabet(c) + decalage) % 26\nresultat = resultat + ALPHABET[indice]\nelse:\nresultat = resultat + c\nreturn resultat\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 20.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>ajoute_dictionnaires</code> qui prend en param\u00e8tres deux dictionnaires <code>d1</code> et <code>d2</code> dont les cl\u00e9s sont des nombres et renvoie le dictionnaire <code>d</code> d\u00e9fini de la fa\u00e7on suivante :</p> <ul> <li>Les cl\u00e9s de <code>d</code> sont celles de <code>d1</code> et celles de <code>d2</code> r\u00e9unies.</li> <li>Si une cl\u00e9 est pr\u00e9sente dans les deux dictionnaires <code>d1</code> et <code>d2</code>, sa valeur associ\u00e9e dans le dictionnaire d est la somme de ses valeurs dans les dictionnaires <code>d1</code> et <code>d2</code>.</li> <li>Si une cl\u00e9 n\u2019est pr\u00e9sente que dans un des deux dictionnaires, sa valeur associ\u00e9e dans le dictionnaire <code>d</code> est la m\u00eame que sa valeur dans le dictionnaire o\u00f9 elle est pr\u00e9sente.</li> </ul> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; ajoute_dictionnaires({1: 5, 2: 7}, {2: 9, 3: 11})\n{1: 5, 2: 16, 3: 11}\n&gt;&gt;&gt; ajoute_dictionnaires({}, {2: 9, 3: 11})\n{2: 9, 3: 11}\n&gt;&gt;&gt; ajoute_dictionnaires({1: 5, 2: 7}, {})\n{1: 5, 2: 7}\n</code></pre> <pre><code>def ajoute_dictionnaires(d1, d2):\nfor cle in d2:\nif cle in d1:\nd1[cle] += d2[cle]\nelse:\nd1[cle] = d2[cle]\nreturn d1\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 20.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re une piste carr\u00e9e qui contient 4 cases par c\u00f4t\u00e9. Les cases sont num\u00e9rot\u00e9es de 0 inclus \u00e0 12 exclu comme ci-dessous :</p> <p></p> <p>L\u2019objectif de l\u2019exercice est d\u2019impl\u00e9menter le jeu suivant :</p> <p>Au d\u00e9part, le joueur place son pion sur la case 0. A chaque coup, il lance un d\u00e9 \u00e9quilibr\u00e9 \u00e0 six faces et avance son pion d\u2019autant de cases que le nombre indiqu\u00e9 par le d\u00e9 (entre 1 et 6 inclus) dans le sens des aiguilles d\u2019une montre.</p> <p>Par exemple, s\u2019il obtient 2 au premier lancer, il pose son pion sur la case 2 puis s\u2019il obtient 6 au deuxi\u00e8me lancer, il le pose sur la case 8, puis s\u2019il obtient \u00e0 nouveau 6, il pose le pion sur la case 2.</p> <p>Le jeu se termine lorsque le joueur a pos\u00e9 son pion sur toutes les cases de la piste.</p> <p>Compl\u00e9ter la fonction <code>nbre_coups</code> ci-dessous de sorte qu\u2019elle renvoie le nombre de lancers al\u00e9atoires n\u00e9cessaires pour terminer le jeu.</p> <p>Proposer ensuite quelques tests pour en v\u00e9rifier le fonctionnement.</p> <pre><code>from random import randint\ndef nbre_coups():\nn = ...\ncases_vues = [0]\ncase_en_cours = 0\nnbre_cases = 12\nwhile ... &lt; ...:\nx = randint(1, 6)\ncase_en_cours = (case_en_cours + ...) % ...\nif ...:\ncases_vues.append(case_en_cours)\nn = ...\nreturn n\n</code></pre> <pre><code>from random import randint\ndef nbre_coups():\nn = 0\ncases_vues = [0]\ncase_en_cours = 0\nnbre_cases = 12\nwhile len(cases_vues) &lt; nbre_cases:\nx = randint(1, 6)\ncase_en_cours = (case_en_cours + x) % nbre_cases\nif case_en_cours not in cases_vues:\ncases_vues.append(case_en_cours)\nn = n + 1\nreturn n\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 21.1 \u00c9nonc\u00e9Correction <p>Le codage par diff\u00e9rence (delta encoding en anglais) permet de compresser un tableau de donn\u00e9es en indiquant pour chaque donn\u00e9e, sa diff\u00e9rence avec la pr\u00e9c\u00e9dente (plut\u00f4t que la donn\u00e9e elle-m\u00eame). On se retrouve alors avec un tableau de donn\u00e9es plus petit, n\u00e9cessitant moins de place en m\u00e9moire. Cette m\u00e9thode se r\u00e9v\u00e8le efficace lorsque les valeurs cons\u00e9cutives sont proches. </p> <p>Programmer la fonction <code>delta(liste)</code> qui prend en param\u00e8tre un tableau non vide de nombres entiers et qui renvoie un tableau contenant les valeurs enti\u00e8res compress\u00e9es \u00e0 l\u2019aide cette technique.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; delta([1000, 800, 802, 1000, 1003])\n[1000, -200, 2, 198, 3]\n&gt;&gt;&gt; delta([42])\n[42] \n</code></pre> <pre><code>def delta(tab):\ndiff = [tab[0]]\nfor i in range(1, len(tab)):\ndiff.append(tab[i] - tab[i-1])\nreturn diff\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 21.2 \u00c9nonc\u00e9Correction <p>Une expression arithm\u00e9tique ne comportant que les quatre op\u00e9rations +, \u2212, \u00d7, \u00f7 peut \u00eatre repr\u00e9sent\u00e9e sous forme d\u2019arbre binaire. Les n\u0153uds internes sont des op\u00e9rateurs et les feuilles sont des nombres. Dans un tel arbre, la disposition des n\u0153uds joue le r\u00f4le des parenth\u00e8ses que nous connaissons bien.  </p> <p></p> <p>En parcourant en profondeur infixe l\u2019arbre binaire ci-dessus, on retrouve l\u2019expression not\u00e9e habituellement :  </p> \\[(3 \\times (8 + 7)) \u2212 (2 + 1)\\] <p>La classe <code>Noeud</code> ci-apr\u00e8s permet d\u2019impl\u00e9menter une structure d\u2019arbre binaire.</p> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>expression_infixe</code> qui prend en param\u00e8tre un objet de la classe <code>Noeud</code> et qui renvoie l\u2019expression arithm\u00e9tique repr\u00e9sent\u00e9e par l\u2019arbre binaire pass\u00e9 en param\u00e8tre, sous forme d\u2019une cha\u00eene de caract\u00e8res contenant des parenth\u00e8ses.  </p> <p>R\u00e9sultat attendu avec l\u2019arbre ci-dessus :</p> <pre><code>&gt;&gt;&gt; e = Noeud(Noeud(Noeud(None, 3, None), '*', Noeud(Noeud(None, 8, None),\n'+', Noeud(None, 7, None))), '-', Noeud(Noeud(None, 2, None), '+',\nNoeud(None, 1, None)))\n&gt;&gt;&gt; expression_infixe(e)\n'((3*(8+7))-(2+1))'\n</code></pre> <pre><code>class Noeud:\n'''\n    classe impl\u00e9mentant un noeud d'arbre binaire\n    '''\ndef __init__(self, g, v, d):\n'''\n        un objet Noeud poss\u00e8de 3 attributs :\n        - gauche : le sous-arbre gauche,\n        - valeur : la valeur de l'\u00e9tiquette,\n        - droit : le sous-arbre droit.\n        '''\nself.gauche = g\nself.valeur = v\nself.droit = d\ndef __str__(self):\n'''\n        renvoie la repr\u00e9sentation du noeud en chaine de caract\u00e8res\n        '''\nreturn str(self.valeur)\ndef est_une_feuille(self):\n'''\n        renvoie True si et seulement si le noeud est une feuille\n        '''\nreturn self.gauche is None and self.droit is None\ndef expression_infixe(e):\ns = ...\nif e.gauche is not None:\ns = '(' + s + expression_infixe(...)\ns = s + ...\nif ... is not None:\ns = s + ... + ...\nreturn s\n</code></pre> <pre><code>class Noeud:\n'''\n    classe impl\u00e9mentant un noeud d'arbre binaire\n    '''\ndef __init__(self, g, v, d):\n'''\n        un objet Noeud poss\u00e8de 3 attributs :\n        - gauche : le sous-arbre gauche,\n        - valeur : la valeur de l'\u00e9tiquette,\n        - droit : le sous-arbre droit.\n        '''\nself.gauche = g\nself.valeur = v\nself.droit = d\ndef __str__(self):\n'''\n        renvoie la repr\u00e9sentation du noeud en chaine de caract\u00e8res\n        '''\nreturn str(self.valeur)\ndef est_une_feuille(self):\n'''\n        renvoie True si et seulement si le noeud est une feuille\n        '''\nreturn self.gauche is None and self.droit is None\ndef expression_infixe(e):\ns = ''\nif e.gauche is not None:\ns = '(' + s + expression_infixe(e.gauche)\ns = s + str(e.valeur)\nif e.droit is not None:\ns = s + expression_infixe(e.droit) + ')'\nreturn s\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 22.1 \u00c9nonc\u00e9Correction <p>On rappelle que :</p> <ul> <li>le nombre \\(a^n\\) est le nombre \\(a \\times a \\times a \\times \\dots \\times a\\), o\u00f9 le facteur \\(a\\) appara\u00eet \\(n\\) fois,</li> <li>en langage Python, l\u2019instruction <code>t[-1]</code> permet d\u2019acc\u00e9der au dernier \u00e9l\u00e9ment du tableau <code>t</code>.</li> </ul> <p>Dans cet exercice, l\u2019op\u00e9rateur <code>**</code>  et la fonction <code>pow</code> ne sont pas autoris\u00e9s.</p> <p>Programmer en langage Python une fonction <code>liste_puissances</code> qui prend en argument un nombre entier <code>a</code>, un entier strictement positif <code>n</code> et qui renvoie la liste de ses puissances \\(\\rm{[a^1, a^2, ..., a^n]}\\).</p> <p>Programmer \u00e9galement une fonction <code>liste_puisssances_borne</code> qui prend en argument un nombre entier <code>a</code> sup\u00e9rieur ou \u00e9gal \u00e0 2 et un entier <code>borne</code>, et qui renvoie la liste de ses puissances, \u00e0 l\u2019exclusion de \\(\\rm{a^0}\\), strictement inf\u00e9rieures \u00e0 <code>borne</code>.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; liste_puissances(3, 5)\n[3, 9, 27, 81, 243]\n&gt;&gt;&gt; liste_puissances(-2, 4)\n[-2, 4, -8, 16]\n&gt;&gt;&gt; liste_puissances_borne(2, 16)\n[2, 4, 8]\n&gt;&gt;&gt; liste_puissances_borne(2, 17)\n[2, 4, 8, 16]\n&gt;&gt;&gt; liste_puissances_borne(5, 5)\n[]\n</code></pre> <pre><code>def liste_puissances(a,n):\npuissances = [a]\nfor i in range(n-1):\npuissances.append(puissances[-1] * a)\nreturn puissances\ndef liste_puissances_borne(a, borne):\nlst = []\nval = a\nwhile val &lt; borne:\nlst.append(val)\nval = val * a\nreturn lst\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 22.2 \u00c9nonc\u00e9Correction <p>On affecte \u00e0 chaque lettre de l'alphabet un code selon le tableau ci-dessous :</p> A B C D E F G H I J K L M 1 2 3 4 5 6 7 8 9 10 11 12 13 N O P Q R S T U V W X Y Z 14 15 16 17 18 19 20 21 22 23 24 25 26 <p>Pour un mot donn\u00e9, on d\u00e9termine d\u2019une part son code alphab\u00e9tique concat\u00e9n\u00e9, obtenu par la juxtaposition des codes de chacun de ses caract\u00e8res, et d\u2019autre part, son code additionn\u00e9, qui est la somme des codes de chacun de ses caract\u00e8res.</p> <p>Par ailleurs, on dit que ce mot est \u00ab parfait \u00bb si le code additionn\u00e9 divise le code concat\u00e9n\u00e9.</p> <p>Exemples :</p> <ul> <li> <p>Pour le mot <code>\"PAUL\"</code>, le code concat\u00e9n\u00e9 est la cha\u00eene <code>'1612112'</code>, soit l\u2019entier 1 612 112. Son code additionn\u00e9 est l\u2019entier 50 car 16 + 1 + 21 + 12 = 50. 50 ne divise pas l\u2019entier 1 612 112 ; par cons\u00e9quent, le mot <code>\"PAUL\"</code> n\u2019est pas parfait.</p> </li> <li> <p>Pour le mot <code>\"ALAIN\"</code>, le code concat\u00e9n\u00e9 est la cha\u00eene <code>'1121914'</code>, soit l\u2019entier 1 121 914. Le code additionn\u00e9 est l\u2019entier 37 car 1 + 12 + 1 + 9 + 14 = 37. 37 divise l\u2019entier 1 121 914 ; par cons\u00e9quent, le mot <code>\"ALAIN\"</code> est parfait.</p> </li> </ul> <p>Compl\u00e9ter la fonction <code>est_parfait</code> ci-dessous qui prend comme argument une cha\u00eene de caract\u00e8res <code>mot</code> (en lettres majuscules) et qui renvoie le code alphab\u00e9tique concat\u00e9n\u00e9, le code additionn\u00e9 de <code>mot</code>, ainsi qu\u2019un bool\u00e9en qui indique si <code>mot</code> est parfait ou pas.</p> <pre><code>dico = {\"A\": 1, \"B\": 2, \"C\": 3, \"D\": 4, \"E\": 5, \"F\": 6,\n\"G\": 7, \"H\": 8, \"I\": 9, \"J\": 10, \"K\": 11, \"L\": 12,\n\"M\": 13, \"N\": 14, \"O\": 15, \"P\": 16, \"Q\": 17,\n\"R\": 18, \"S\": 19, \"T\": 20, \"U\": 21, \"V\": 22,\n\"W\": 23, \"X\": 24, \"Y\": 25, \"Z\": 26}\ndef est_parfait(mot):\n# mot est une cha\u00eene de caract\u00e8res (en lettres majuscules)\ncode_concatene = \"\"\ncode_additionne = ...\nfor c in mot:\ncode_concatene = code_concatene + ...\ncode_additionne = ...\ncode_concatene = int(code_concatene)\nif ... :\nmot_est_parfait = True\nelse:\nmot_est_parfait = False\nreturn code_additionne, code_concatene, mot_est_parfait\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; est_parfait(\"PAUL\")\n(50, 1612112, False)\n&gt;&gt;&gt; est_parfait(\"ALAIN\")\n(37, 1121914, True)\n</code></pre> <pre><code>dico = {\"A\": 1, \"B\": 2, \"C\": 3, \"D\": 4, \"E\": 5, \"F\": 6,\n\"G\": 7, \"H\": 8, \"I\": 9, \"J\": 10, \"K\": 11, \"L\": 12,\n\"M\": 13, \"N\": 14, \"O\": 15, \"P\": 16, \"Q\": 17,\n\"R\": 18, \"S\": 19, \"T\": 20, \"U\": 21, \"V\": 22,\n\"W\": 23, \"X\": 24, \"Y\": 25, \"Z\": 26}\ndef est_parfait(mot):\n# mot est une cha\u00eene de caract\u00e8res (en lettres majuscules)\ncode_concatene = \"\"\ncode_additionne = 0\nfor c in mot:\ncode_concatene = code_concatene + str(dico[c])\ncode_additionne = code_additionne + dico[c]\ncode_concatene = int(code_concatene)\nif code_concatene % code_additionne == 0:\nmot_est_parfait = True\nelse:\nmot_est_parfait = False\nreturn code_additionne, code_concatene, mot_est_parfait\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 23.1 \u00c9nonc\u00e9Correction <p>On consid\u00e8re des tables (des tableaux de dictionnaires) qui contiennent des enregistrements relatifs \u00e0 des animaux h\u00e9berg\u00e9s dans un refuge. Les attributs des enregistrements sont <code>'nom'</code>, <code>'espece'</code>, <code>'age'</code>, <code>'enclos'</code>. Voici un exemple d'une telle table :</p> <pre><code>animaux = [ {'nom':'Medor', 'espece':'chien', 'age':5, 'enclos':2},\n{'nom':'Titine', 'espece':'chat', 'age':2, 'enclos':5},\n{'nom':'Tom', 'espece':'chat', 'age':7, 'enclos':4},\n{'nom':'Belle', 'espece':'chien', 'age':6, 'enclos':3},\n{'nom':'Mirza', 'espece':'chat', 'age':6, 'enclos':5}]\n</code></pre> <p>Programmer une fonction <code>selection_enclos</code> qui :</p> <ul> <li>prend en param\u00e8tres :<ul> <li>une table <code>table_animaux</code> contenant des enregistrements relatifs \u00e0 des animaux (comme dans l'exemple ci-dessus),</li> <li>un num\u00e9ro d'enclos <code>num_enclos</code> ;</li> </ul> </li> <li>renvoie une table contenant les enregistrements de <code>table_animaux</code> dont l'attribut <code>'enclos'</code> est <code>num_enclos</code>.</li> </ul> <p>Exemples avec la table <code>animaux</code> ci-dessus :</p> <pre><code>&gt;&gt;&gt; selection_enclos(animaux, 5)\n[{'nom':'Titine', 'espece':'chat', 'age':2, 'enclos':5},\n{'nom':'Mirza', 'espece':'chat', 'age':6, 'enclos':5}]\n&gt;&gt;&gt; selection_enclos(animaux, 2)\n[{'nom':'Medor', 'espece':'chien', 'age':5, 'enclos':2}]\n&gt;&gt;&gt; selection_enclos(animaux, 7)\n[]\n</code></pre> <pre><code>def selection_enclos(table_animaux, num_enclos):\ntable = []\nfor animal in table_animaux:\nif animal['enclos'] == num_enclos:\ntable.append(animal)\nreturn table\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 23.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re des tableaux de nombres dont tous les \u00e9l\u00e9ments sont pr\u00e9sents exactement trois fois et \u00e0 suivre, sauf un \u00e9l\u00e9ment qui est pr\u00e9sent une unique fois et que l'on appelle \u00ab l'intrus \u00bb. Voici quelques exemples :</p> <p></p><pre><code>tab_a = [3, 3, 3, 9, 9, 9, 1, 1, 1, 7, 2, 2, 2, 4, 4, 4, 8, 8, 8, 5, 5, 5]\n#l'intrus est 7\ntab_b = [8, 5, 5, 5, 9, 9, 9, 18, 18, 18, 3, 3, 3]\n#l'intrus est 8\ntab_c = [5, 5, 5, 1, 1, 1, 0, 0, 0, 6, 6, 6, 3, 8, 8, 8]\n#l'intrus est 3\n</code></pre> On remarque qu'avec de tels tableaux : <ul> <li>pour les indices multiples de 3 situ\u00e9s strictement avant l'intrus, l'\u00e9l\u00e9ment correspondant et son voisin de droite sont \u00e9gaux,</li> <li>pour les indices multiples de 3 situ\u00e9s apr\u00e8s l'intrus, l'\u00e9l\u00e9ment correspondant et son voisin de droite - s'il existe - sont diff\u00e9rents.</li> </ul> <p>Ce que l'on peut observer ci-dessous en observant les valeurs des paires de voisins marqu\u00e9es par des caract\u00e8res ^ :</p> <pre><code>[3, 3, 3, 9, 9, 9, 1, 1, 1, 7, 2, 2, 2, 4, 4, 4, 8, 8, 8, 5, 5, 5]\n^  ^     ^  ^     ^  ^     ^  ^     ^  ^     ^  ^     ^  ^     ^\n0        3        6        9        12       15       18       21\n</code></pre> <p>Dans des listes comme celles ci-dessus, un algorithme r\u00e9cursif pour trouver l'intrus consiste alors \u00e0 choisir un indice <code>i</code> multiple de 3 situ\u00e9 approximativement au milieu des indices parmi lesquels se trouve l'intrus. </p> <p>Puis, en fonction des valeurs de l'\u00e9l\u00e9ment d'indice <code>i</code> et de son voisin de droite, \u00e0 appliquer r\u00e9cursivement l'algorithme \u00e0 la moiti\u00e9 droite ou \u00e0 la moiti\u00e9 gauche des indices parmi lesquels se trouve l'intrus. </p> <p>Par exemple, si on s\u2019int\u00e9resse \u00e0 l\u2019indice 12, on voit les valeurs 2 et 4 qui sont diff\u00e9rentes : l\u2019intrus est donc \u00e0 gauche de l\u2019indice 12 (indice 12 compris)</p> <p>En revanche, si on s\u2019int\u00e9resse \u00e0 l\u2019indice 3, on voit les valeurs 9 et 9 qui sont identiques : l\u2019intrus est donc \u00e0 droite des indices 3-4-5, donc \u00e0 partir de l\u2019indice 6.</p> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>trouver_intrus</code> propos\u00e9e page suivante qui met en \u0153uvre cet algorithme.</p> <pre><code>def trouver_intrus(tab, g, d):\n'''\n    Renvoie la valeur de l'intrus situ\u00e9 entre les indices g et d \n    dans la liste tab o\u00f9 :\n    tab v\u00e9rifie les conditions de l'exercice,\n    g et d sont des multiples de 3.\n    '''\nif g == d:\nreturn ...\nelse:\nnombre_de_triplets = (d - g) // ...\nindice = g + 3 * (nombre_de_triplets // 2)\nif ... :\nreturn ...\nelse:\nreturn ...\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; trouver_intrus([3, 3, 3, 9, 9, 9, 1, 1, 1, 7, 2, 2, 2, 4, 4, 4, 8, 8,\n8, 5, 5, 5], 0, 21)\n7\n&gt;&gt;&gt; trouver_intrus([8, 5, 5, 5, 9, 9, 9, 18, 18, 18, 3, 3, 3], 0, 12)\n8\n&gt;&gt;&gt; trouver_intrus([5, 5, 5, 1, 1, 1, 0, 0, 0, 6, 6, 6, 3, 8, 8, 8], 0, 15)\n3\n</code></pre> <pre><code>def trouver_intrus(tab, g, d):\n'''\n    Renvoie la valeur de l'intrus situ\u00e9 entre les indices g et d \n    dans la liste tab o\u00f9 :\n    tab v\u00e9rifie les conditions de l'exercice,\n    g et d sont des multiples de 3.\n    '''\nif g == d:\nreturn tab[g]\nelse:\nnombre_de_triplets = (d - g) // 3\nindice = g + 3 * (nombre_de_triplets // 2)\nif tab[indice] != tab[indice + 1] :\nreturn trouver_intrus(tab, g, indice)\nelse:\nreturn trouver_intrus(tab, indice + 3, d)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 24.1 \u00c9nonc\u00e9Correction <p>Le nombre d\u2019occurrences d\u2019un caract\u00e8re dans une cha\u00eene de caract\u00e8re est le nombre d\u2019apparitions de ce caract\u00e8re dans la cha\u00eene.</p> <p>Exemples :</p> <ul> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018o\u2019 dans \u2018bonjour\u2019 est 2 ;</li> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018b\u2019 dans \u2018B\u00e9b\u00e9\u2019 est 1 ;</li> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018B\u2019 dans \u2018B\u00e9b\u00e9\u2019 est 1 ;</li> <li>le nombre d\u2019occurrences du caract\u00e8re \u2018 \u2018 dans \u2018Hello world !\u2019 est 2.</li> </ul> <p>On cherche les occurrences des caract\u00e8res dans une phrase. On souhaite stocker ces occurrences dans un dictionnaire dont les clefs seraient les caract\u00e8res de la phrase et les valeurs l\u2019occurrence de ces caract\u00e8res.</p> <p>Par exemple : avec la phrase 'Hello world !' le dictionnaire est le suivant :</p> <p><code>{'H': 1,'e': 1,'l': 3,'o': 2,' ': 2,'w': 1,'r': 1,'d': 1,'!': 1}</code></p> <p>L\u2019ordre des clefs n\u2019a pas d\u2019importance.</p> <p>\u00c9crire une fonction <code>nbr_occurrences</code> prenant comme param\u00e8tre une cha\u00eene de caract\u00e8res <code>chaine</code> et renvoyant le dictionnaire des nombres d\u2019occurrences des caract\u00e8res de cette cha\u00eene.</p> <pre><code>def nbr_occurrences(chaine):\nnb_occ = {}\nfor caractere in chaine:\nif caractere in nb_occ:\nnb_occ[caractere] += 1\nelse:\nnb_occ[caractere] = 1\nreturn nb_occ\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 24.2 \u00c9nonc\u00e9Correction <p>La fonction <code>fusion</code> prend deux listes <code>lst1</code>, <code>lst2</code> d\u2019entiers tri\u00e9es par ordre croissant et les fusionne en une liste tri\u00e9e <code>lst12</code> qu\u2019elle renvoie.</p> <p>Le code Python de la fonction <code>fusion</code> est</p> <pre><code>def fusion(lst1,lst2):\nn1 = len(lst1)\nn2 = len(lst2)\nlst12 = [0] * (n1 + n2)\ni1 = 0\ni2 = 0\ni = 0\nwhile i1 &lt; n1 and ... :\nif lst1[i1] &lt; lst2[i2]:\nlst12[i] = ...\ni1 = ...\nelse:\nlst12[i] = lst2[i2]\ni2 = ...\ni += 1\nwhile i1 &lt; n1:\nlst12[i] = ...\ni1 = i1 + 1\ni = ...\nwhile i2 &lt; n2:\nlst12[i] = ...\ni2 = i2 + 1\ni = ...\nreturn lst12\n</code></pre> <p>Compl\u00e9ter le code.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; fusion([1, 6, 10],[0, 7, 8, 9])\n[0, 1, 6, 7, 8, 9, 10]\n</code></pre> <pre><code>def fusion(lst1, lst2):\nn1 = len(lst1)\nn2 = len(lst2)\nlst12 = [0] * (n1 + n2)\ni1 = 0\ni2 = 0\ni = 0\nwhile i1 &lt; n1 and i2 &lt; n2 :\nif lst1[i1] &lt; lst2[i2]:\nlst12[i] = lst1[i1]\ni1 = i1 + 1\nelse:\nlst12[i] = lst2[i2]\ni2 = i2 + 1\ni += 1\nwhile i1 &lt; n1:\nlst12[i] = lst1[i1]\ni1 = i1 + 1\ni = i + 1\nwhile i2 &lt; n2:\nlst12[i] = lst2[i2]\ni2 = i2 + 1\ni = i + 1\nreturn lst12\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 25.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>enumere</code> qui prend en param\u00e8tre une liste <code>L</code> et renvoie un dictionnaire <code>d</code> dont les cl\u00e9s sont les \u00e9l\u00e9ments de <code>L</code> avec pour valeur associ\u00e9e la liste des indices de l\u2019\u00e9l\u00e9ment dans la liste <code>L</code>.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; enumere([1, 1, 2, 3, 2, 1])\n{1: [0, 1, 5], 2: [2, 4], 3: [3]}\n</code></pre> <pre><code>def enumere(L):\nd = {}\nfor i in range(len(L)):\nif L[i] in d:\nd[L[i]].append(i)\nelse:\nd[L[i]] = [i]\nreturn d\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 25.2 \u00c9nonc\u00e9Correction <p>Un arbre binaire est impl\u00e9ment\u00e9 par la classe <code>Arbre</code> donn\u00e9e ci-dessous. Les attributs <code>fg</code> et <code>fd</code> prennent pour valeurs des instances de la classe <code>Arbre</code> ou <code>None</code>.</p> <pre><code>class Arbre:\ndef __init__(self, etiquette):\nself.v = etiquette\nself.fg = None\nself.fd = None\ndef parcours(arbre, liste):\nif arbre != None:\nparcours(arbre.fg, liste)\nliste.append(arbre.v)\nparcours(arbre.fd, liste)\nreturn liste\n</code></pre> <p>La fonction r\u00e9cursive <code>parcours</code> renvoie la liste des \u00e9tiquettes des n\u0153uds de l\u2019arbre impl\u00e9ment\u00e9 par l\u2019instance <code>arbre</code> dans l\u2019ordre du parcours en profondeur infixe \u00e0 partir d\u2019une liste vide pass\u00e9e en argument.</p> <p>Compl\u00e9ter le code de la fonction <code>insere</code> qui ins\u00e8re un n\u0153ud d\u2019\u00e9tiquette <code>cle</code> en feuille de l\u2019arbre impl\u00e9ment\u00e9 par l\u2019instance <code>arbre</code> selon la sp\u00e9cification indiqu\u00e9e et de fa\u00e7on que l\u2019arbre ainsi compl\u00e9t\u00e9 soit encore un arbre binaire de recherche.</p> <p>Tester ensuite ce code en utilisant la fonction <code>parcours</code> et en ins\u00e9rant successivement des n\u0153uds d\u2019\u00e9tiquette 1, 4, 6 et 8 dans l\u2019arbre binaire de recherche repr\u00e9sent\u00e9 ci- dessous :</p> <p></p> <pre><code>def insere(arbre, cle):\n\"\"\" arbre est une instance de la classe Arbre qui impl\u00e9mente\n        un arbre binaire de recherche.\n    \"\"\"\nif ...:\nif ...:\ninsere(arbre.fg, cle)\nelse:\narbre.fg = Arbre(cle)\nelse:\nif ...:\ninsere(arbre.fd, cle)\nelse:\narbre.fd = Arbre(cle)\n</code></pre> <pre><code>def insere(arbre, cle):\n\"\"\" arbre est une instance de la classe Arbre qui impl\u00e9mente\n    un arbre binaire de recherche.\n\"\"\"\nif cle &lt; arbre.v:\nif arbre.fg is not None:\ninsere(arbre.fg, cle)\nelse:\narbre.fg = Arbre(cle)\nelse:\nif arbre.fd is not None:\ninsere(arbre.fd, cle)\nelse:\narbre.fd = Arbre(cle)\n</code></pre> <p>Tests :</p> <pre><code>&gt;&gt;&gt; a = Arbre(5)\n&gt;&gt;&gt; insere(a, 2)\n&gt;&gt;&gt; insere(a, 7)\n&gt;&gt;&gt; insere(a, 3)\n&gt;&gt;&gt; parcours(a, [])\n[2, 3, 5, 7]\n&gt;&gt;&gt; insere(a, 1)\n&gt;&gt;&gt; insere(a, 4)\n&gt;&gt;&gt; insere(a, 6)\n&gt;&gt;&gt; insere(a, 8)\n&gt;&gt;&gt; parcours(a, [])\n[1, 2, 3, 4, 5, 6, 7, 8]\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 26.1 \u00c9nonc\u00e9Correction <p>Programmer la fonction <code>multiplication</code>, prenant en param\u00e8tres deux nombres entiers <code>n1</code> et <code>n2</code>, et qui renvoie le produit de ces deux nombres.</p> <p>Les seules op\u00e9rations autoris\u00e9es sont l\u2019addition et la soustraction. </p> <pre><code>&gt;&gt;&gt; multiplication(3, 5)\n15\n&gt;&gt;&gt; multiplication(-4, -8)\n32\n&gt;&gt;&gt; multiplication(-2, 6)\n-12\n&gt;&gt;&gt; multiplication(-2, 0)\n0\n</code></pre> <pre><code>def multiplication(n1, n2):\n# on se ram\u00e8ne d'abord au cas o\u00f9 n1 et n2 sont tous les deux positifs :\nif n1 &lt; 0:\nreturn -multiplication(-n1, n2)\nif n2 &lt; 0:\nreturn -multiplication(n1, -n2)\nresultat = 0\nfor _ in range(n2):\nresultat += n1\nreturn resultat\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 26.2 \u00c9nonc\u00e9Correction <p>Recopier et compl\u00e9ter sous Python la fonction suivante en respectant la sp\u00e9cification. On ne recopiera pas les commentaires.</p> <pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau d\u2019entiers tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = ...\nif x == tab[m]:\nreturn ...\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = ...\nreturn ...\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],28)\nTrue\n&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],27)\nFalse\n</code></pre> <pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau d\u2019entiers tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = (debut + fin) // 2\nif x == tab[m]:\nreturn True\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = m - 1\nreturn False\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 27.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>recherche_min</code> qui prend en param\u00e8tre un tableau de nombres non tri\u00e9 <code>tab</code>, et qui renvoie l'indice de la premi\u00e8re occurrence du minimum de ce tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche_min([5])\n0\n&gt;&gt;&gt; recherche_min([2, 4, 1])\n2\n&gt;&gt;&gt; recherche_min([5, 3, 2, 2, 4])\n2\n</code></pre> <pre><code>def recherche_min(tab):\nindice_min = 0\nfor i in range(len(tab)):\nif tab[i] &lt; tab[indice_min]:\nindice_min = i\nreturn indice_min\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 27.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re la fonction <code>separe</code> ci-dessous qui prend en argument un tableau <code>tab</code> dont les \u00e9l\u00e9ments sont des <code>0</code> et des <code>1</code> et qui s\u00e9pare les <code>0</code> des <code>1</code> en pla\u00e7ant les <code>0</code> en d\u00e9but de tableau et les <code>1</code> \u00e0 la suite.</p> <pre><code>def separe(tab):\ngauche = 0\ndroite = ...\nwhile gauche &lt; droite :\nif tab[gauche] == 0 :\ngauche = ...\nelse :\ntab[gauche], tab[droite] = ...\ndroite = ...\nreturn tab\n</code></pre> <p>Compl\u00e9ter la fonction <code>separe</code> ci-dessus.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; separe([1, 0, 1, 0, 1, 0, 1, 0])\n[0, 0, 0, 0, 1, 1, 1, 1]\n&gt;&gt;&gt; separe([1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0])\n[0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n</code></pre> <p>Description d\u2019\u00e9tapes effectu\u00e9es par la fonction separe sur le tableau ci-dessous : <code>tab = [1, 0, 1, 0, 1, 0, 1, 0]</code></p> <ul> <li> <p>Etape 1 : on regarde la premi\u00e8re case, qui contient un 1 : ce 1 va aller dans la seconde partie du tableau final et on l\u2019\u00e9change avec la derni\u00e8re case. Il est \u00e0 pr\u00e9sent bien positionn\u00e9 : on ne prend plus la derni\u00e8re case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> <li> <p>Etape 2 : on regarde \u00e0 nouveau la premi\u00e8re case, qui contient maintenant un 0 : ce 0 va aller dans la premi\u00e8re partie du tableau final et est bien positionn\u00e9 : on ne prend plus la premi\u00e8re case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> <li> <p>Etape 3 : on regarde la seconde case, qui contient un 0 : ce 0 va aller dans la premi\u00e8re partie du tableau final et est bien positionn\u00e9 : on ne prend plus la seconde case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> <li> <p>Etape 4 : on regarde la troisi\u00e8me case, qui contient un 1 : ce 1 va aller dans la seconde partie du tableau final et on l\u2019\u00e9change avec l\u2019avant-derni\u00e8re case. Il est \u00e0 pr\u00e9sent bien positionn\u00e9 : on ne prend plus l\u2019avant-derni\u00e8re case en compte. <code>tab = [0, 0, 1, 0, 1, 0, 1, 1]</code></p> </li> </ul> <p>Et ainsi de suite...</p> <p><code>tab = [0, 0, 0, 0, 1, 1, 1, 1]</code></p> <p>Compl\u00e9ter la fonction <code>separe</code> pr\u00e9sent\u00e9e \u00e0 la page pr\u00e9c\u00e9dente</p> <pre><code>def separe(tab):\ngauche = 0\ndroite = len(tab) - 1\nwhile gauche &lt; droite :\nif tab[gauche] == 0 :\ngauche = gauche + 1\nelse :\ntab[gauche], tab[droite] = tab[droite], tab[gauche]\ndroite = droite - 1\nreturn tab\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 28.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction qui prend en param\u00e8tre un tableau d'entiers non vide et qui renvoie la moyenne de ces entiers. La fonction est sp\u00e9cifi\u00e9e ci-apr\u00e8s et doit passer les assertions fournies. </p><pre><code>def moyenne (tab):\n'''\n    moyenne(list) -&gt; float\n    Entr\u00e9e : un tableau non vide d'entiers\n    Sortie : nombre de type float\n    Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le\n    tableau\n    '''\nassert moyenne([1]) == 1\nassert moyenne([1, 2, 3, 4, 5, 6, 7]) == 4\nassert moyenne([1, 2]) == 1.5\n</code></pre> <pre><code>def moyenne(tab):\n'''\n    moyenne(list) -&gt; float\n    Entr\u00e9e : un tableau non vide d'entiers\n    Sortie : nombre de type float\n    Correspondant \u00e0 la moyenne des valeurs pr\u00e9sentes dans le\n    tableau\n    '''\nsomme = 0\nfor elt in tab:\nsomme += elt\nreturn somme / len(tab)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 28.2 \u00c9nonc\u00e9Correction <p>Le but de l'exercice est de compl\u00e9ter une fonction qui d\u00e9termine si une valeur est pr\u00e9sente dans un tableau de valeurs tri\u00e9es dans l'ordre croissant.</p> <p>L'algorithme traite le cas du tableau vide et il est \u00e9crit pour que la recherche dichotomique ne se fasse que dans le cas o\u00f9 la valeur est comprise entre les valeurs extr\u00eames du tableau.</p> <p>On distingue les trois cas qui renvoient <code>False</code> en renvoyant <code>False, 1</code> , <code>False, 2</code> et <code>False, 3</code>.</p> <p>Compl\u00e9ter l'algorithme de dichotomie donn\u00e9 ci-apr\u00e8s.</p> <pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\n# cas du tableau vide\nif ...:\nreturn False, 1\n# cas o\u00f9 x n'est pas compris entre les valeurs extr\u00eames\nif (x &lt; tab[0]) or ...:\nreturn False, 2\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = ...\nif x == tab[m]:\nreturn ...\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = ...\nreturn ...\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],28)\nTrue\n&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],27)\n(False, 3)\n&gt;&gt;&gt; dichotomie([15, 16, 18, 19, 23, 24, 28, 29, 31, 33],1)\n(False, 2)\n&gt;&gt;&gt; dichotomie([],28)\n(False, 1)\n</code></pre> <pre><code>def dichotomie(tab, x):\n\"\"\"\n    tab : tableau tri\u00e9 dans l\u2019ordre croissant\n    x : nombre entier\n    La fonction renvoie True si tab contient x et False sinon\n    \"\"\"\n# cas du tableau vide\nif tab == []:\nreturn False, 1\n# cas o\u00f9 x n'est pas compris entre les valeurs extr\u00eames\nif (x &lt; tab[0]) or (x &gt; tab[-1]):\nreturn False, 2\ndebut = 0\nfin = len(tab) - 1\nwhile debut &lt;= fin:\nm = (debut + fin) // 2\nif x == tab[m]:\nreturn True\nif x &gt; tab[m]:\ndebut = m + 1\nelse:\nfin = m - 1\nreturn False, 3\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 29.1 \u00c9nonc\u00e9Correction <p>Un arbre binaire est impl\u00e9ment\u00e9 par la classe <code>Arbre</code> donn\u00e9e ci-dessous. Les attributs <code>fg</code> et <code>fd</code> prennent pour valeurs des instances de la classe <code>Arbre</code> ou <code>None</code>.</p> <pre><code>class Arbre:\ndef __init__(self, etiquette):\nself.v = etiquette\nself.fg = None\nself.fd = None\n</code></pre> <p></p> <p>L\u2019arbre ci-dessus sera donc impl\u00e9ment\u00e9 de la mani\u00e8re suivante : </p><pre><code>a = Arbre(1)\na.fg = Arbre(4)\na.fd = Arbre(0)\na.fd.fd = Arbre(7)\n</code></pre> <p>\u00c9crire une fonction r\u00e9cursive <code>taille</code> prenant en param\u00e8tre une instance <code>a</code> de la classe <code>Arbre</code> et qui renvoie la taille de l\u2019arbre que cette instance impl\u00e9mente.</p> <p>\u00c9crire de m\u00eame une fonction r\u00e9cursive <code>hauteur</code> prenant en param\u00e8tre une instance <code>a</code> de la classe <code>Arbre</code> et qui renvoie la hauteur de l\u2019arbre que cette instance impl\u00e9mente.</p> <p>Si un arbre a un seul n\u0153ud, sa taille et sa hauteur sont \u00e9gales \u00e0 1. S\u2019il est vide, sa taille et sa hauteur sont \u00e9gales \u00e0 0.</p> <p>Tester les deux fonctions sur l\u2019arbre repr\u00e9sent\u00e9 ci-dessous :</p> <p></p> <pre><code>def taille(a):\nif a is None:\nreturn 0\nelse:\nreturn 1 + taille(a.fg) + taille(a.fd)\ndef hauteur(a):\nif a is None:\nreturn 0\nelse:\nreturn 1 + max(hauteur(a.fg), hauteur(a.fd))\n</code></pre> <p>Tests :</p> <pre><code>a = Arbre(0)\na.fg = Arbre(1)\na.fd = Arbre(2)\na.fg.fg = Arbre(3)\na.fd.fg = Arbre(4)\na.fd.fd = Arbre(5)\na.fd.fg.fd = Arbre(6)\n</code></pre> <pre><code>&gt;&gt;&gt; taille(a)\n7\n&gt;&gt;&gt; hauteur(a)\n4\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 29.2 \u00c9nonc\u00e9Correction <p>La m\u00e9thode <code>insert</code> de la classe <code>list</code> permet d\u2019ins\u00e9rer un \u00e9l\u00e9ment dans une liste \u00e0 un <code>indice</code> donn\u00e9.</p> <p>Le but de cet exercice est, sans utiliser cette m\u00e9thode, d\u2019\u00e9crire une fonction <code>ajoute</code> r\u00e9alisant cette insertion en produisant une nouvelle liste.</p> <p>Cette fonction <code>ajoute</code> prend en param\u00e8tres trois variables <code>indice</code>, <code>element</code> et <code>liste</code> et renvoie une liste <code>L</code> dans laquelle les \u00e9l\u00e9ments sont ceux de la liste <code>liste</code> avec, en plus, l\u2019\u00e9l\u00e9ment <code>element</code> \u00e0 l\u2019indice <code>indice</code>. On consid\u00e8re que les variables <code>indice</code> et <code>element</code> sont des entiers positifs et que les \u00e9l\u00e9ments de <code>liste</code> sont \u00e9galement des entiers positifs. Les \u00e9l\u00e9ments de la liste <code>liste</code>, dont les indices sont sup\u00e9rieurs ou \u00e9gaux \u00e0 <code>indice</code> apparaissent d\u00e9cal\u00e9s vers la droite dans la liste <code>L</code>. Si <code>indice</code> est sup\u00e9rieur ou \u00e9gal au nombre d\u2019\u00e9l\u00e9ments de la liste <code>liste</code>, l\u2019\u00e9l\u00e9ment element est ajout\u00e9 dans <code>L</code> apr\u00e8s tous les \u00e9l\u00e9ments de la liste <code>liste</code>.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; ajoute(1, 4, [7, 8, 9])\n[7, 4, 8, 9]\n&gt;&gt;&gt; ajoute(3, 4, [7, 8, 9])\n[7, 8, 9, 4]\n&gt;&gt;&gt; ajoute(4, 4, [7, 8, 9])\n[7, 8, 9, 4]\n</code></pre> <p>Compl\u00e9ter et tester le code ci-dessous :</p> <pre><code>def ajoute(indice, element, liste):\nnbre_elts = len(liste)\nL = [0 for i in range(nbre_elts + 1)]\nif ...:\nfor i in range(indice):\nL[i] = ...\nL[...] = ...\nfor i in range(indice + 1, nbre_elts + 1):\nL[i] = ...\nelse:\nfor i in range(nbre_elts):\nL[i] = ...\nL[...] = ...\nreturn L\n</code></pre> <pre><code>def ajoute(indice, element, liste):\nnbre_elts = len(liste)\nL = [0 for i in range(nbre_elts + 1)]\nif indice &lt; nbre_elts:\nfor i in range(indice):\nL[i] = liste[i]\nL[indice] = element\nfor i in range(indice + 1, nbre_elts + 1):\nL[i] = liste[i-1]\nelse:\nfor i in range(nbre_elts):\nL[i] = liste[i]\nL[nbre_elts] = element \nreturn L\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 30.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>moyenne</code> qui prend en param\u00e8tre un tableau non vide de nombres flottants et qui renvoie la moyenne des valeurs du tableau. Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; moyenne([1.0])\n1.0\n&gt;&gt;&gt; moyenne([1.0, 2.0, 4.0])\n2.3333333333333335\n</code></pre> <pre><code>def moyenne(tab):\nsomme = 0\nfor val in tab:\nsomme += val\nreturn somme / len(tab)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 30.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re la fonction <code>binaire</code> ci-dessous qui prend en param\u00e8tre un entier positif <code>a</code> en \u00e9criture d\u00e9cimale et qui renvoie son \u00e9criture binaire sous la forme d'une chaine de caract\u00e8res.</p> <p>L\u2019algorithme utilise la m\u00e9thode des divisions euclidiennes successives comme l\u2019illustre l\u2019exemple ci-apr\u00e8s.</p> <p></p> <p></p><pre><code>def binaire(a):\nbin_a = ...\na = a // 2\nwhile a ... :\nbin_a = ... + bin_a\na = ...\nreturn bin_a\n</code></pre> Compl\u00e9ter le code de la fonction <code>binaire</code>. <p>Exemples : </p><pre><code>&gt;&gt;&gt; binaire(83)\n'1010011'\n&gt;&gt;&gt; binaire(127)\n'1111111'\n&gt;&gt;&gt; binaire(0)\n'0'\n</code></pre> <pre><code>def binaire(a):\nbin_a = str(a%2)\na = a // 2\nwhile a != 0 :\nbin_a = str(a%2) + bin_a\na = a // 2\nreturn bin_a\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 31.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction Python appel\u00e9e <code>nb_repetitions</code> qui prend en param\u00e8tres un \u00e9l\u00e9ment <code>elt</code> et une liste <code>tab</code> et renvoie le nombre de fois o\u00f9 l\u2019\u00e9l\u00e9ment appara\u00eet dans la liste.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; nb_repetitions(5, [2, 5, 3, 5, 6, 9, 5])\n3\n&gt;&gt;&gt; nb_repetitions('A', ['B', 'A', 'B', 'A', 'R'])\n2\n&gt;&gt;&gt; nb_repetitions(12, [1, '!', 7, 21, 36, 44])\n0\n</code></pre> <pre><code>def nb_repetitions(elt, tab):\nnb = 0\nfor element in tab:\nif element == elt:\nnb += 1\nreturn nb\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 31.2 \u00c9nonc\u00e9Correction <p>Pour rappel, la conversion d\u2019un nombre entier positif en binaire peut s\u2019effectuer \u00e0 l\u2019aide des divisions successives comme illustr\u00e9 ici :</p> <p></p> <p>Voici une fonction Python bas\u00e9e sur la m\u00e9thode des divisions successives permettant de convertir un nombre entier positif en binaire :</p> <p></p><pre><code>def binaire(a):\nbin_a = str(...)\na = a // 2\nwhile a ... :\nbin_a = ...(a%2) + ...\na = ...\nreturn bin_a\n</code></pre> Compl\u00e9ter la fonction <code>binaire</code>. <p>Exemples :</p> <pre><code>&gt;&gt;&gt; binaire(0)\n'0'\n&gt;&gt;&gt; binaire(77)\n'1001101'\n</code></pre> <pre><code>def binaire(a):\nbin_a = str(a%2)\na = a // 2\nwhile a != 0 :\nbin_a = str(a%2) + bin_a\na = a // 2\nreturn bin_a\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 32.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>min_et_max</code> qui prend en param\u00e8tre un tableau de nombres <code>tab</code> non vide, et qui renvoie la plus petite et la plus grande valeur du tableau sous la forme d\u2019un dictionnaire \u00e0 deux cl\u00e9s <code>min</code> et <code>max</code>.</p> <p>Les tableaux seront repr\u00e9sent\u00e9s sous forme de liste Python.</p> <p>L\u2019utilisation des fonctions natives <code>min</code>, <code>max</code> et <code>sorted</code>, ainsi que la m\u00e9thode <code>sort</code> n\u2019est pas autoris\u00e9e.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; min_et_max([0, 1, 4, 2, -2, 9, 3, 1, 7, 1])\n{'min': -2, 'max': 9}\n&gt;&gt;&gt; min_et_max([0, 1, 2, 3])\n{'min': 0, 'max': 3}\n&gt;&gt;&gt; min_et_max([3])\n{'min': 3, 'max': 3}\n&gt;&gt;&gt; min_et_max([1, 3, 2, 1, 3])\n{'min': 1, 'max': 3}\n&gt;&gt;&gt; min_et_max([-1, -1, -1, -1, -1])\n{'min': -1, 'max': -1}\n</code></pre> <pre><code>def min_et_max(tab):\nd = {}\nd['min'] = tab[0]\nd['max'] = tab[0]\nfor val in tab:\nif val &lt; d['min']:\nd['min'] = val\nif val &gt; d['max']:\nd['max'] = val\nreturn d\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 32.2 \u00c9nonc\u00e9Correction <p>On dispose d\u2019une classe <code>Carte</code> permettant de cr\u00e9er des objets mod\u00e9lisant des cartes \u00e0 jouer.</p> <p>Compl\u00e9ter la classe <code>Paquet_de_cartes</code> suivante en respectant les sp\u00e9cifications donn\u00e9es dans les cha\u00eenes de documentation.</p> <p>Ajouter une assertion dans la m\u00e9thode <code>get_carte</code> afin de v\u00e9rifier que le param\u00e8tre <code>pos</code> est correct.</p> <pre><code>class Carte:\ndef __init__(self, c, v):\n\"\"\" Initialise les attributs couleur (entre 1 et 4), et valeur (entre 1 et 13). \"\"\"\nself.couleur = c\nself.valeur = v\ndef get_valeur(self):\n\"\"\" Renvoie la valeur de la carte : As, 2, ..., 10, Valet, Dame, Roi \"\"\"\nvaleurs = ['As','2', '3', '4', '5', '6', '7', '8', '9', '10', 'Valet', 'Dame', 'Roi']\nreturn valeurs[self.valeur - 1]\ndef get_couleur(self):\n\"\"\" Renvoie la couleur de la carte (parmi pique, coeur, carreau, tr\u00e8fle). \"\"\"\ncouleurs = ['pique', 'coeur', 'carreau', 'tr\u00e8fle']\nreturn couleurs[self.couleur - 1]\nclass Paquet_de_cartes:\ndef __init__(self):\n\"\"\" Initialise l'attribut contenu avec une liste des 52 objets Carte possibles\n            rang\u00e9s par valeurs croissantes en commen\u00e7ant par pique, puis coeur,\n            carreau et tr\u00e9fle. \"\"\"\n# A compl\u00e9ter\ndef get_carte(self, pos):\n\"\"\" Renvoie la carte qui se trouve \u00e0 la position pos (entier compris entre 0 et 51). \"\"\"\n# A compl\u00e9ter\n</code></pre> <p>Exemple :</p> <pre><code>Exemple :\n&gt;&gt;&gt; jeu = Paquet_de_cartes()\n&gt;&gt;&gt; carte1 = jeu.get_carte(20)\n&gt;&gt;&gt; print(carte1.get_valeur() + \" de \" + carte1.get_couleur())\n8 de coeur\n&gt;&gt;&gt; carte2 = jeu.get_carte(0)\n&gt;&gt;&gt; print(carte2.get_valeur() + \" de \" + carte2.get_couleur())\nAs de pique\n&gt;&gt;&gt; carte3 = jeu.get_carte(52)\nAssertionError : param\u00e8tre pos invalide\n</code></pre> <pre><code>class Carte:\ndef __init__(self, c, v):\n\"\"\" Initialise les attributs couleur (entre 1 et 4), et valeur (entre 1 et 13). \"\"\"\nself.couleur = c\nself.valeur = v\ndef get_valeur(self):\n\"\"\" Renvoie la valeur de la carte : As, 2, ..., 10, Valet, Dame, Roi \"\"\"\nvaleurs = ['As','2', '3', '4', '5', '6', '7', '8', '9', '10', 'Valet', 'Dame', 'Roi']\nreturn valeurs[self.valeur - 1]\ndef get_couleur(self):\n\"\"\" Renvoie la couleur de la carte (parmi pique, coeur, carreau, tr\u00e8fle). \"\"\"\ncouleurs = ['pique', 'coeur', 'carreau', 'tr\u00e8fle']\nreturn couleurs[self.couleur - 1]\nclass Paquet_de_cartes:\ndef __init__(self):\n\"\"\" Initialise l'attribut contenu avec une liste des 52 objets Carte possibles\n            rang\u00e9s par valeurs croissantes en commen\u00e7ant par pique, puis coeur,\n            carreau et tr\u00e9fle. \"\"\"\nself.contenu = [Carte(c, v) for c in range(1, 5) for v in range(1, 14)]  \ndef get_carte(self, pos):\n\"\"\" Renvoie la carte qui se trouve \u00e0 la position pos (entier compris entre 0 et 51). \"\"\"\nassert 0 &lt;= pos &lt;= 51,  'param\u00e8tre pos invalide'\nreturn self.contenu[pos]\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 33.1 \u00c9nonc\u00e9Correction <p>Dans cet exercice, un arbre binaire de caract\u00e8res est stock\u00e9 sous la forme d\u2019un dictionnaire o\u00f9 les clefs sont les caract\u00e8res des n\u0153uds de l\u2019arbre et les valeurs, pour chaque clef, la liste des caract\u00e8res des fils gauche et droit du n\u0153ud.</p> <p>Par exemple, l\u2019arbre</p> <p></p> <p>est stock\u00e9 dans</p> <pre><code>a = {'F':['B','G'], 'B':['A','D'], 'A':['',''], 'D':['C','E'], \\\n'C':['',''], 'E':['',''], 'G':['','I'], 'I':['','H'], \\\n'H':['','']}\n</code></pre> <p>\u00c9crire une fonction r\u00e9cursive <code>taille</code> prenant en param\u00e8tres un arbre binaire <code>arbre</code> sous la forme d\u2019un dictionnaire et un caract\u00e8re <code>lettre</code> qui est la valeur du sommet de l\u2019arbre, et qui renvoie la taille de l\u2019arbre \u00e0 savoir le nombre total de n\u0153uds.  </p> <p>On observe que, par exemple, <code>arbre[lettre][0]</code>, respectivement <code>arbre[lettre][1]</code>, permet d\u2019atteindre la cl\u00e9 du sous-arbre gauche, respectivement droit, de l\u2019arbre <code>arbre</code> de sommet <code>lettre</code>.</p> <p>Exemple : </p><pre><code>&gt;&gt;&gt; taille(a, \u2019F\u2019)\n9\n</code></pre> <pre><code>a = {'F':['B','G'], 'B':['A','D'], 'A':['',''], 'D':['C','E'], 'C':['',''], 'E':['',''], 'G':['','I'], 'I':['','H'], 'H':['','']}\ndef taille(arbre, lettre):\nfils_gauche = arbre[lettre][0]\nfils_droit = arbre[lettre][1]\nif fils_gauche != '' and fils_droit != '':\nreturn 1 + taille(arbre, fils_gauche) + taille(arbre, fils_droit)\nif fils_gauche != '' and fils_droit == '':\nreturn 1 + taille(arbre, fils_gauche)\nif fils_gauche == '' and fils_droit != '':\nreturn 1 + taille(arbre, fils_droit)\nelse:\nreturn 1\n</code></pre> <p>ou plus simplement :</p> <pre><code>def taille(arbre, lettre):\nif lettre == '':\nreturn 0\nreturn 1 + taille(arbre, arbre[lettre][0]) + taille(arbre, arbre[lettre][1])\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 33.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re l'algorithme de tri de tableau suivant : \u00e0 chaque \u00e9tape, on parcourt le sous- tableau des \u00e9l\u00e9ments non rang\u00e9s et on place le plus petit \u00e9l\u00e9ment en premi\u00e8re position de ce sous-tableau.</p> <p>Exemple avec le tableau : <code>t = [41, 55, 21, 18, 12, 6, 25]</code> </p> <ul> <li> <p>\u00c9tape 1 : on parcourt tous les \u00e9l\u00e9ments du tableau, on permute le plus petit \u00e9l\u00e9ment avec le premier. Le tableau devient <code>t = [6, 55, 21, 18, 12, 41, 25]</code></p> </li> <li> <p>\u00c9tape 2 : on parcourt tous les \u00e9l\u00e9ments sauf le premier, on permute le plus petit \u00e9l\u00e9ment trouv\u00e9 avec le second. Le tableau devient : <code>t = [6, 12, 21, 18, 55, 41, 25]</code> </p> </li> </ul> <p>Et ainsi de suite. </p> <p>La code de la fonction <code>tri_selection</code> qui impl\u00e9mente cet algorithme est donn\u00e9 ci- dessous.</p> <pre><code>def tri_selection(tab):\nN = len(tab)\nfor k in range(...):\nimin = ...\nfor i in range(... , N):\nif tab[i] &lt; ... :\nimin = i\n... , tab[imin] = tab[imin] , ...\n</code></pre> <p>Compl\u00e9ter le code de cette fonction de fa\u00e7on \u00e0 obtenir :</p> <pre><code>&gt;&gt;&gt; liste = [41, 55, 21, 18, 12, 6, 25]\n&gt;&gt;&gt; tri_selection(liste)\n&gt;&gt;&gt; liste\n[6, 12, 18, 21, 25, 41, 55]\n</code></pre> <p>On rappelle que l'instruction <code>a, b = b, a</code> \u00e9change les contenus de <code>a</code> et de <code>b</code>.</p> <pre><code>def tri_selection(tab):\nN = len(tab)\nfor k in range(N):\nimin = k\nfor i in range(k, N):\nif tab[i] &lt; tab[imin] :\nimin = i\ntab[k] , tab[imin] = tab[imin] , tab[k]\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 34.1 \u00c9nonc\u00e9Correction <p>Programmer la fonction <code>moyenne</code>   prenant en param\u00e8tre un tableau d'entiers <code>tab</code> (de type <code>list</code>) qui renvoie la moyenne de ses \u00e9l\u00e9ments si le tableau est non vide. Proposer une fa\u00e7on de traiter le cas o\u00f9 le tableau pass\u00e9 en param\u00e8tre est vide.</p> <p>Dans cet exercice, on s\u2019interdira d\u2019utiliser la fonction Python <code>sum</code>.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; moyenne([5,3,8])\n5.333333333333333\n&gt;&gt;&gt; moyenne([1,2,3,4,5,6,7,8,9,10])\n5.5\n&gt;&gt;&gt; moyenne([])\n# Comportement diff\u00e9rent suivant le traitement propos\u00e9.\n</code></pre> <pre><code>def moyenne(tab):\nif tab == []:\nprint('Le tableau donn\u00e9 est vide')\nreturn None\nelse:\nsomme = 0\nfor elt in tab:\nsomme += elt\nreturn somme / len(tab)\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 34.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re un tableau d'entiers <code>tab</code> (de type <code>list</code>) dont les \u00e9l\u00e9ments sont des <code>0</code> ou des <code>1</code>). On se propose de trier ce tableau selon l'algorithme suivant : \u00e0 chaque \u00e9tape du tri, le tableau est constitu\u00e9 de trois zones cons\u00e9cutives, la premi\u00e8re ne contenant que des <code>0</code>, la seconde n'\u00e9tant pas tri\u00e9e et la derni\u00e8re ne contenant que des <code>1</code>.</p> <p></p> Zone de 0Zone non tri\u00e9eZone de 1 <p>Tant que la zone non tri\u00e9e n'est pas r\u00e9duite \u00e0 un seul \u00e9l\u00e9ment, on regarde son premier \u00e9l\u00e9ment :</p> <ul> <li>si cet \u00e9l\u00e9ment vaut 0, on consid\u00e8re qu'il appartient d\u00e9sormais \u00e0 la zone ne contenant que des 0 ;</li> <li>si cet \u00e9l\u00e9ment vaut 1, il est \u00e9chang\u00e9 avec le dernier \u00e9l\u00e9ment de la zone non tri\u00e9e et on consid\u00e8re alors qu\u2019il appartient \u00e0 la zone ne contenant que des 1.</li> </ul> <p>Dans tous les cas, la longueur de la zone non tri\u00e9e diminue de 1.</p> <p>Recopier sous Python en la compl\u00e9tant la fonction <code>tri</code> suivante :</p> <pre><code>def tri(tab):\n# i est le premier indice de la zone non tri\u00e9e,\n# j est le dernier indice de cette zone non tri\u00e9e.\n# Au d\u00e9but, la zone non tri\u00e9e est le tableau complet.\ni = ...\nj = ...\nwhile i != j:\nif tab[i]== 0:\ni = ...\nelse:\nvaleur = tab[j]\ntab[j] = ...\n...\nj = ...\n...\n</code></pre> <p>Exemple : </p><pre><code>&gt;&gt;&gt; tri([0,1,0,1,0,1,0,1,0])\n[0, 0, 0, 0, 0, 1, 1, 1, 1]       \n</code></pre> <pre><code>def tri(tab):\n# i est le premier indice de la zone non tri\u00e9e,\n# j est le dernier indice de cette zone non tri\u00e9e.\n# Au d\u00e9but, la zone non tri\u00e9e est le tableau complet.\ni = 0\nj = len(tab) - 1\nwhile i != j :\nif tab[i] == 0:\ni = i + 1\nelse :\nvaleur = tab[j]\ntab[j] = tab[i]\ntab[i] = valeur\nj = j - 1\nreturn tab\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 35.1 \u00c9nonc\u00e9Correction <p>L'op\u00e9rateur \u00ab ou exclusif \u00bb entre deux bits renvoie 0 si les deux bits sont \u00e9gaux et 1 s'ils sont diff\u00e9rents. Il est symbolis\u00e9 par le caract\u00e8re \u2295. Ainsi :</p> <ul> <li>0 \u2295 0 = 0</li> <li>0 \u2295 1 = 1</li> <li>1 \u2295 0 = 1</li> <li>1 \u2295 1 = 0  </li> </ul> <p>On repr\u00e9sente ici une suite de bits par un tableau contenant des 0 et des 1.</p> <p>Exemples :</p> <pre><code>a = [1, 0, 1, 0, 1, 1, 0, 1]\nb = [0, 1, 1, 1, 0, 1, 0, 0]\nc = [1, 1, 0, 1]\nd = [0, 0, 1, 1]\n</code></pre> <p>\u00c9crire la fonction <code>ou_exclusif</code> qui prend en param\u00e8tres deux tableaux de m\u00eame longueur et qui renvoie un tableau o\u00f9 l\u2019\u00e9l\u00e9ment situ\u00e9 \u00e0 position <code>i</code> est le r\u00e9sultat, par l\u2019op\u00e9rateur \u00ab ou exclusif \u00bb, des \u00e9l\u00e9ments \u00e0 la position <code>i</code> des tableaux pass\u00e9s en param\u00e8tres.</p> <p>En consid\u00e9rant les quatre exemples ci-dessus, cette fonction donne :</p> <pre><code>&gt;&gt;&gt; ou_exclusif(a, b)\n[1, 1, 0, 1, 1, 0, 0, 1])\n&gt;&gt;&gt; ou_exclusif(c, d)\n[1, 1, 1, 0]\n</code></pre> <pre><code>def ou_exclusif(tab1, tab2):\nresultat = []\ntaille = len(tab1)\nfor i in range(taille):\nresultat.append(tab1[i] ^ tab2[i])\nreturn resultat\n</code></pre> <p>Si on ne connait pas la fonction native ^ qui fait le \u00abou exclusif\u00bb de deux entiers en Python, on peut la recoder :</p> <pre><code>def ou_exc(a, b):\nif a == 0 and b == 0:\nreturn 0\nif a == 0 and b == 1:\nreturn 1\nif a == 1 and b == 0:\nreturn 1\nif a == 1 and b == 1:\nreturn 0\n</code></pre> <p>Le code devient alors :</p> <pre><code>def ou_exclusif(tab1, tab2):\nresultat = []\ntaille = len(tab1)\nfor i in range(taille):\nresultat.append(ou_exc(tab1[i],tab2[i]))\nreturn resultat\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 35.2 \u00c9nonc\u00e9Correction <p>Dans cet exercice, on appelle carr\u00e9 d\u2019ordre \\(n\\) un tableau de \\(n\\) lignes et \\(n\\) colonnes dont chaque case contient un entier naturel.</p> <p>Exemples : </p> <p>Un carr\u00e9 est dit semimagique lorsque les sommes des \u00e9l\u00e9ments situ\u00e9s sur chaque ligne, chaque colonne sont \u00e9gales.</p> <ul> <li> <p>Ainsi c2 et c3 sont semimagiques car la somme de chaque ligne, chaque colonne et chaque diagonale est \u00e9gale \u00e0 8 pour c2 et 12 pour c3.</p> </li> <li> <p>Le carre c3bis n'est pas semimagique car la somme de la premi\u00e8re ligne est \u00e9gale \u00e0 15 alors que celle de la deuxi\u00e8me ligne est \u00e9gale \u00e0 10.</p> </li> </ul> <p>La classe <code>Carre</code> ci-apr\u00e8s contient des m\u00e9thodes qui permettent de manipuler des carr\u00e9s.</p> <ul> <li> <p>La m\u00e9thode constructeur cr\u00e9e un carr\u00e9 sous forme d\u2019un tableau \u00e0 deux dimensions \u00e0 partir d\u2019une liste d\u2019entiers, et d\u2019un ordre.</p> </li> <li> <p>La m\u00e9thode <code>affiche</code> permet d\u2019afficher le carr\u00e9 cr\u00e9\u00e9.</p> </li> </ul> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; liste = (3, 4, 5, 4, 4, 4, 5, 4, 3)\n&gt;&gt;&gt; c3 = Carre(liste, 3)\n&gt;&gt;&gt; c3.affiche()\n[3, 4, 5]\n[4, 4, 4]\n[5, 4, 3]\n</code></pre> <p>Compl\u00e9ter la m\u00e9thode <code>est_semimagique</code> qui renvoie <code>True</code> si le carr\u00e9 est semimagique, <code>False</code> sinon. Puis tester la fonction <code>est_semimagique</code> sur les carr\u00e9s c2, c3 et c3bis.</p> <pre><code>class Carre:\ndef __init__(self, liste, n):\nself.ordre = n\nself.tableau = [[liste[i + j * n] for i in range(n)] for j in range(n)]\ndef affiche(self):\n'''Affiche un carr\u00e9'''\nfor i in range(self.ordre):\nprint(self.tableau[i])\ndef somme_ligne(self, i):\n'''Calcule la somme des valeurs de la ligne i'''\nsomme = 0\nfor j in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef somme_col(self, j):\n'''Calcule la somme des valeurs de la colonne j'''\nsomme = 0\nfor i in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef est_semimagique(self):\ns = self.somme_ligne(0)\n#test de la somme de chaque ligne\nfor i in range(...):\nif ... != s:\nreturn ...\n#test de la somme de chaque colonne\nfor j in range(...):\nif ... != s:\nreturn ...\nreturn ...\n</code></pre> <p>Listes permettant de g\u00e9n\u00e9rer les carr\u00e9s c2, c3 et c3bis :</p> <pre><code>lst_c2 = [1, 7, 7, 1]\nlst_c3 = [3, 4, 5, 4, 4, 4, 5, 4, 3]\nlst_c3bis = [2, 9, 4, 7, 0, 3, 6, 1, 8]\n</code></pre> <pre><code>class Carre:\ndef __init__(self, liste, n):\nself.ordre = n\nself.tableau = [[liste[i + j * n] for i in range(n)] for j in range(n)]\ndef affiche(self):\n'''Affiche un carr\u00e9'''\nfor i in range(self.ordre):\nprint(self.tableau[i])\ndef somme_ligne(self, i):\n'''Calcule la somme des valeurs de la ligne i'''\nsomme = 0\nfor j in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef somme_col(self, j):\n'''Calcule la somme des valeurs de la colonne j'''\nsomme = 0\nfor i in range(self.ordre):\nsomme = somme + self.tableau[i][j]\nreturn somme\ndef est_semimagique(self):\ns = self.somme_ligne(0)\n#test de la somme de chaque ligne\nfor i in range(self.ordre):\nif self.somme_ligne(i) != s:\nreturn False\n#test de la somme de chaque colonne\nfor j in range(self.ordre):\nif self.somme_col(j) != s:\nreturn False\nreturn True\n</code></pre> <p>Tests avec :</p> <pre><code>lst_c2 = [1, 7, 7, 1]\nlst_c3 = [3, 4, 5, 4, 4, 4, 5, 4, 3]\nlst_c3bis = [2, 9, 4, 7, 0, 3, 6, 1, 8]\n</code></pre> <pre><code>&gt;&gt;&gt; c2 = Carre(lst_c2, 2)\n&gt;&gt;&gt; c2.est_semimagique()\nTrue\n&gt;&gt;&gt; c3 = Carre(lst_c3, 3)\n&gt;&gt;&gt; c3.est_semimagique()\nTrue\n&gt;&gt;&gt; c3bis = Carre(lst_c3bis, 2)\n&gt;&gt;&gt; c3bis.est_semimagique()\nFalse\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 36.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>couples_consecutifs</code> qui prend en param\u00e8tre une liste de nombres entiers <code>tab</code> non vide, et qui renvoie la liste (\u00e9ventuellement vide) des couples d'entiers cons\u00e9cutifs successifs qu'il peut y avoir dans <code>tab</code>.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; couples_consecutifs([1, 4, 3, 5])\n[]\n&gt;&gt;&gt; couples_consecutifs([1, 4, 5, 3])\n[(4, 5)]\n&gt;&gt;&gt; couples_consecutifs([1, 1, 2, 4])\n[(1, 2)]\n&gt;&gt;&gt; couples_consecutifs([7, 1, 2, 5, 3, 4])\n[(1, 2), (3, 4)]\n&gt;&gt;&gt; couples_consecutifs([5, 1, 2, 3, 8, -5, -4, 7])\n[(1, 2), (2, 3), (-5, -4)]\n</code></pre> <pre><code>def couples_consecutifs(tab):\nsolution = []\nfor i in range(len(tab)-1):\nif tab[i] + 1 == tab[i+1]:\nsolution.append((tab[i], tab[i+1]))\nreturn solution\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 36.2 \u00c9nonc\u00e9Correction <p>Soit une image binaire repr\u00e9sent\u00e9e dans un tableau \u00e0 2 dimensions. Les \u00e9l\u00e9ments <code>M[i][j]</code>, appel\u00e9s pixels, sont \u00e9gaux soit \u00e0 <code>0</code> soit \u00e0 <code>1</code>.</p> <p>Une composante d\u2019une image est un sous-ensemble de l\u2019image constitu\u00e9 uniquement de <code>1</code> et de <code>0</code> qui sont c\u00f4te \u00e0 c\u00f4te, soit horizontalement soit verticalement.</p> <p>Par exemple, les composantes de  sont </p> <p>On souhaite, \u00e0 partir d\u2019un pixel \u00e9gal \u00e0 <code>1</code> dans une image <code>M</code>, donner la valeur <code>val</code> \u00e0 tous les pixels de la composante \u00e0 laquelle appartient ce pixel.</p> <p>La fonction <code>propager</code> prend pour param\u00e8tre une image <code>M</code> (repr\u00e9sent\u00e9e par une liste de listes), deux entiers <code>i</code> et <code>j</code> et unevaleur enti\u00e8re <code>val</code>. Elle met \u00e0 la valeur <code>val</code> tous les pixels de la composante du pixel <code>M[i][j]</code> s\u2019il vaut <code>1</code> et ne fait rien s\u2019il vaut <code>0</code>.</p> <p>Par exemple, <code>propager(M, 2, 1, 3)</code> donne </p> <p>Compl\u00e9ter le code r\u00e9cursif de la fonction <code>propager</code> donn\u00e9 ci-dessous :</p> <pre><code>def propager(M, i, j, val):\nif M[i][j] == ...:\nM[i][j] = val\n# l'element en haut fait partie de la composante\nif i-1 &gt;= 0 and M[i-1][j] == ...:\npropager(M, i-1, j, val)\n# l'element en bas fait partie de la composante\nif ... &lt; len(M) and M[i+1][j] == 1:\npropager(M, ..., j, val)\n# l'element \u00e0 gauche fait partie de la composante\nif ... and M[i][j-1] == 1:\npropager(M, ..., ..., val)\n# l'element \u00e0 droite fait partie de la composante\nif ... and ...:\npropager(..., ..., ..., ...)\n</code></pre> <p>Exemple : </p><pre><code>&gt;&gt;&gt; M = [[0, 0, 1, 0], [0, 1, 0, 1], [1, 1, 1, 0], [0, 1, 1, 0]]\n&gt;&gt;&gt; propager(M, 2, 1, 3)\n&gt;&gt;&gt; M\n[[0, 0, 1, 0], [0, 3, 0, 1], [3, 3, 3, 0], [0, 3, 3, 0]]\n</code></pre> <pre><code>def propager(M, i, j, val):\nif M[i][j] == 1:\nM[i][j] = val\n# l'element en haut fait partie de la composante\nif i-1 &gt;= 0 and M[i-1][j] == 1:\npropager(M, i-1, j, val)\n# l'element en bas fait partie de la composante\nif i+1 &lt; len(M) and M[i+1][j] == 1:\npropager(M, i+1, j, val)\n# l'element \u00e0 gauche fait partie de la composante\nif j-1 &gt;= 0 and M[i][j-1] == 1:\npropager(M, i, j-1, val)\n# l'element \u00e0 droite fait partie de la composante\nif j+1 &lt; len(M[i]) and M[i][j+1] == 1:\npropager(M, i, j+1, val)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 37.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>recherche</code> qui prend en param\u00e8tres <code>elt</code> un nombre entier et <code>tab</code> un tableau de nombres entiers, et qui renvoie l\u2019indice de la derni\u00e8re occurrence de <code>elt</code> dans <code>tab</code> si <code>elt</code> est dans <code>tab</code> et <code>-1</code> sinon.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche(1, [2, 3, 4])\n-1\n&gt;&gt;&gt; recherche(1, [10, 12, 1, 56])\n2\n&gt;&gt;&gt; recherche(1, [1, 0, 42, 7])\n0\n&gt;&gt;&gt; recherche(1, [1, 50, 1])\n2\n&gt;&gt;&gt; recherche(1, [8, 1, 10, 1, 7, 1, 8])\n5\n</code></pre> <pre><code>def recherche(elt, tab):\nfor i in range(len(tab)-1, -1, -1):\nif tab[i] == elt:\nreturn i\nreturn -1\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 37.2 \u00c9nonc\u00e9Correction <p>On d\u00e9finit une classe g\u00e9rant une adresse IPv4.</p> <p>On rappelle qu\u2019une adresse IPv4 est une adresse de longueur 4 octets, not\u00e9e en d\u00e9cimale \u00e0 point, en s\u00e9parant chacun des octets par un point. On consid\u00e8re un r\u00e9seau priv\u00e9 avec une plage d\u2019adresses IP de <code>192.168.0.0</code> \u00e0 <code>192.168.0.255</code>.</p> <p>On consid\u00e8re que les adresses IP saisies sont valides.</p> <p>Les adresses IP <code>192.168.0.0</code> et <code>192.168.0.255</code> sont des adresses r\u00e9serv\u00e9es.</p> <p>Le code ci-dessous impl\u00e9mente la classe <code>AdresseIP</code>.</p> <p></p><pre><code>class AdresseIP:\ndef __init__(self, adresse):\nself.adresse = ...\ndef liste_octet(self):\n\"\"\"renvoie une liste de nombres entiers,\n        la liste des octets de l'adresse IP\"\"\"\nreturn [int(i) for i in self.adresse.split(\".\")]\ndef est_reservee(self):\n\"\"\"renvoie True si l'adresse IP est une adresse\n        r\u00e9serv\u00e9e, False sinon\"\"\"\nreturn ... or ...\ndef adresse_suivante(self):\n\"\"\"renvoie un objet de AdresseIP avec l'adresse\n        IP qui suit l\u2019adresse self\n        si elle existe et False sinon\"\"\"\nif ... &lt; 254:\noctet_nouveau = ... + ...\nreturn AdresseIP('192.168.0.' + ...)\nelse:\nreturn False\n</code></pre> Compl\u00e9ter le code ci-dessus et instancier trois objets : <code>adresse1</code>, <code>adresse2</code>, <code>adresse3</code> avec respectivement les arguments suivants : <p><code>'192.168.0.1'</code>, <code>'192.168.0.2'</code>, <code>'192.168.0.0'</code></p> <p>V\u00e9rifier que :  </p><pre><code>&gt;&gt;&gt; adresse1.est_reservee()\nFalse\n&gt;&gt;&gt; adresse3.est_reservee()\nTrue\n&gt;&gt;&gt; adresse2.adresse_suivante().adresse\n'192.168.0.3'\n</code></pre> <pre><code>class AdresseIP:\ndef __init__(self, adresse):\nself.adresse = adresse\ndef liste_octet(self):\n\"\"\"renvoie une liste de nombres entiers,\n        la liste des octets de l'adresse IP\"\"\"\nreturn [int(i) for i in self.adresse.split(\".\")]\ndef est_reservee(self):\n\"\"\"renvoie True si l'adresse IP est une adresse\n        r\u00e9serv\u00e9e, False sinon\"\"\"\nreturn self.liste_octet()[3] == 0 or self.liste_octet()[3] == 255\ndef adresse_suivante(self):\n\"\"\"renvoie un objet de AdresseIP avec l'adresse\n        IP qui suit l\u2019adresse self\n        si elle existe et False sinon\"\"\"\nif self.liste_octet()[3] &lt; 254:\noctet_nouveau = self.liste_octet()[3] + 1\nreturn AdresseIP('192.168.0.' + str(octet_nouveau))\nelse:\nreturn False\nadresse1 = AdresseIP('192.168.0.1')\nadresse2 = AdresseIP('192.168.0.2')\nadresse3 = AdresseIP('192.168.0.0')\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 38.1 \u00c9nonc\u00e9Correction <p>On consid\u00e8re des mots \u00e0 trous : ce sont des cha\u00eenes de caract\u00e8res contenant uniquement des majuscules et des caract\u00e8res <code>*</code>. Par exemple <code>INFO*MA*IQUE</code>, <code>***I***E**</code> et <code>*S*</code> sont des mots \u00e0 trous.  </p> <p>Programmer une fonction <code>correspond</code> qui :</p> <ul> <li>prend en param\u00e8tres deux cha\u00eenes de caract\u00e8res <code>mot</code> et <code>mot_a_trous</code> o\u00f9 <code>mot_a_trous</code> est un mot \u00e0 trous comme indiqu\u00e9 ci-dessus, </li> <li>renvoie :<ul> <li><code>True</code> si on peut obtenir <code>mot</code> en rempla\u00e7ant convenablement les caract\u00e8res <code>'*'</code> de <code>mot_a_trous</code>.</li> <li><code>False</code> sinon.</li> </ul> </li> </ul> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; correspond('INFORMATIQUE', 'INFO*MA*IQUE')\nTrue\n&gt;&gt;&gt; correspond('AUTOMATIQUE', 'INFO*MA*IQUE')\nFalse\n&gt;&gt;&gt; correspond('STOP', 'S*')\nFalse\n&gt;&gt;&gt; correspond('AUTO', '*UT*')\nTrue\n</code></pre> <pre><code>def correspond(mot, mot_a_trous):\nif len(mot) != len(mot_a_trous):\nreturn False\nfor i in range(len(mot)):\nif mot[i] != mot_a_trous[i] and mot_a_trous[i] != '*':\nreturn False\nreturn True\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 38.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re au plus 26 personnes A, B, C, D, E, F ... qui peuvent s'envoyer des messages avec deux r\u00e8gles \u00e0 respecter :</p> <ul> <li>chaque personne ne peut envoyer des messages qu'\u00e0 une seule personne (\u00e9ventuellement elle-m\u00eame),</li> <li>chaque personne ne peut recevoir des messages qu'en provenance d'une seule personne (\u00e9ventuellement elle-m\u00eame).</li> </ul> <p>Voici un exemple - avec 6 personnes - de \u00ab plan d'envoi des messages \u00bb qui respecte les r\u00e8gles ci-dessus, puisque chaque personne est pr\u00e9sente une seule fois dans chaque colonne :</p> <ul> <li>A envoie ses messages \u00e0 E</li> <li>E envoie ses messages \u00e0 B</li> <li>B envoie ses messages \u00e0 F</li> <li>F envoie ses messages \u00e0 A</li> <li>C envoie ses messages \u00e0 D</li> <li>D envoie ses messages \u00e0 C</li> </ul> <p>Et le dictionnaire correspondant \u00e0 ce plan d'envoi est le suivant :</p> <p><code>plan_a = {'A':'E', 'B':'F', 'C':'D', 'D':'C', 'E':'B', 'F':'A'}</code></p> <p>Un cycle est une suite de personnes dans laquelle la derni\u00e8re est la m\u00eame que la premi\u00e8re.</p> <p>Sur le plan d'envoi <code>plan_a</code> des messages ci-dessus, il y a deux cycles distincts : un premier cycle avec A, E, B, F et un second cycle avec C et D.</p> <p>En revanche, le plan d\u2019envoi <code>plan_b</code> ci-dessous :</p> <p><code>plan_b = {'A':'C', 'B':'F', 'C':'E', 'D':'A', 'E':'B', 'F':'D'}</code></p> <p>comporte un unique cycle : A, C, E, B, F, D. Dans ce cas, lorsqu\u2019un plan d\u2019envoi comporte un unique cycle, on dit que le plan d\u2019envoi est cyclique.</p> <p>Pour savoir si un plan d'envoi de messages comportant N personnes est cyclique, on peut utiliser l'algorithme ci-dessous :</p> <ul> <li>on part d\u2019un exp\u00e9diteur (ici A) et on inspecte son destinataire dans le plan d'envoi,</li> <li>chaque destinataire devient \u00e0 son tour exp\u00e9diteur, selon le plan d\u2019envoi, tant qu\u2019on ne \u00ab retombe \u00bb pas sur l\u2019exp\u00e9diteur initial,</li> <li>le plan d\u2019envoi est cyclique si on l\u2019a parcouru en entier.</li> </ul> <p>Compl\u00e9ter la fonction <code>est_cyclique</code> en respectant la sp\u00e9cification.</p> <p>Remarque : la fonction python <code>len</code> permet d'obtenir la longueur d'un dictionnaire.</p> <pre><code>def est_cyclique(plan):\n'''\n    Prend en param\u00e8tre un dictionnaire `plan` correspondant \u00e0 un plan d'envoi de messages (ici entre les personnes A, B, C, D, E, F).\n    Renvoie True si le plan d'envoi de messages est cyclique et False sinon.\n    '''\nexpediteur = 'A'\ndestinataire = plan[ ... ]\nnb_destinaires = 1\nwhile destinataire != ...:\ndestinataire = plan[ ... ]\nnb_destinaires += ...\nreturn nb_destinaires == ...\n</code></pre> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; est_cyclique({'A':'E', 'F':'A', 'C':'D', 'E':'B', 'B':'F', 'D':'C'})\nFalse\n&gt;&gt;&gt; est_cyclique({'A':'E', 'F':'C', 'C':'D', 'E':'B', 'B':'F', 'D':'A'})\nTrue\n&gt;&gt;&gt; est_cyclique({'A':'B', 'F':'C', 'C':'D', 'E':'A', 'B':'F', 'D':'E'})\nTrue\n&gt;&gt;&gt; est_cyclique({'A':'B', 'F':'A', 'C':'D', 'E':'C', 'B':'F', 'D':'E'})\nFalse\n</code></pre> <pre><code>def est_cyclique(plan):\n'''\n    Prend en param\u00e8tre un dictionnaire `plan` correspondant \u00e0 un plan d'envoi de messages (ici entre les personnes A, B, C, D, E, F).\n    Renvoie True si le plan d'envoi de messages est cyclique et False sinon.\n    '''\nexpediteur = 'A'\ndestinataire = plan[expediteur]\nnb_destinaires = 1\nwhile destinataire != expediteur:\ndestinataire = plan[destinataire]\nnb_destinaires += 1\nreturn nb_destinaires == len(plan)\n#tests\nprint(est_cyclique({'A':'E', 'F':'A', 'C':'D', 'E':'B', 'B':'F', 'D':'C'}))\nprint(est_cyclique({'A':'E', 'F':'C', 'C':'D', 'E':'B', 'B':'F', 'D':'A'}))\nprint(est_cyclique({'A':'B', 'F':'C', 'C':'D', 'E':'A', 'B':'F', 'D':'E'}))\nprint(est_cyclique({'A':'B', 'F':'A', 'C':'D', 'E':'C', 'B':'F', 'D':'E'}))\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 39.1 \u00c9nonc\u00e9Correction <p>On s\u2019int\u00e9resse \u00e0 la suite d\u2019entiers d\u00e9finie par :</p> <ul> <li>les deux premiers termes sont \u00e9gaux \u00e0 1,</li> <li>ensuite, chaque terme est obtenu en faisant la somme des deux termes qui le pr\u00e9c\u00e8dent.</li> </ul> <p>En math\u00e9matiques, on le formule ainsi :</p> <p>\\(U_1 = 1\\), \\(U_2 = 1\\) et, pour tout entier naturel non nul \\(n\\), par \\(U_{n+2} = U_{n+1} + U_n\\).</p> <p>Cette suite est connue sous le nom de suite de Fibonacci. \u00c9crire en Python une fonction <code>fibonacci</code> qui prend en param\u00e8tre un entier <code>n</code> suppos\u00e9 strictement positif et qui renvoie le terme d\u2019indice <code>n</code> de cette suite.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; fibonacci(1)\n1\n&gt;&gt;&gt; fibonacci(2)\n1\n&gt;&gt;&gt; fibonacci(25)\n75025\n&gt;&gt;&gt; fibonacci(45)\n1134903170\n</code></pre> <p>Version r\u00e9cursive :</p> <pre><code>def fibonacci(n):\nif n == 0 :\nreturn 0   \nelif n == 1 :\nreturn 1\nelse :\nreturn fibonacci(n-1) + fibonacci(n-2)\n</code></pre> <p>Version imp\u00e9rative : </p><pre><code>def fibonacci(n):\na = 0\nb = 1\nfor k in range(n-1):\nt = b\nb = a + b\na = t\nreturn b\n</code></pre> <p>Version programmation dynamique :</p> <pre><code>def fibonacci(n):\nd = {}\nd[1] = 1\nd[2] = 1\nfor k in range(3, n+1):\nd[k] = d[k-1] + d[k-2]\nreturn d[n]\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 39.2 \u00c9nonc\u00e9Correction <p>On consid\u00e8re la fonction <code>pantheon</code> prenant en param\u00e8tres <code>eleves</code> et <code>notes</code> deux tableaux de m\u00eame longueur, le premier contenant le nom des \u00e9l\u00e8ves et le second, des entiers positifs d\u00e9signant leur note \u00e0 un contr\u00f4le de sorte que <code>eleves[i]</code> a obtenu la note <code>notes[i]</code>. Cette fonction renvoie le couple constitu\u00e9 de la note maximale attribu\u00e9e et des noms des \u00e9l\u00e8ves ayant obtenu cette note regroup\u00e9s dans un tableau. Ainsi, l\u2019instruction <code>pantheon(['a', 'b', 'c', 'd'], [15, 18, 12, 18])</code> renvoie le couple <code>(18, ['b', 'd'])</code>.</p> <pre><code>def pantheon(eleves, notes):\nnote_maxi = 0\nmeilleurs_eleves =  ...\nfor i in range(...) :\nif notes[i] == ... :\nmeilleurs_eleves.append(...)\nelif notes[i] &gt; note_maxi:\nnote_maxi = ...\nmeilleurs_eleves = [...]\nreturn (note_maxi,meilleurs_eleves)\n</code></pre> <p>Compl\u00e9ter ce code.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; eleves_nsi = ['a','b','c','d','e','f','g','h','i','j']\n&gt;&gt;&gt; notes_nsi = [30, 40, 80, 60, 58, 80, 75, 80, 60, 24]\n&gt;&gt;&gt; pantheon(eleves_nsi, notes_nsi)\n(80, ['c', 'f', 'h'])\n&gt;&gt;&gt; pantheon([],[])\n(0, [])\n</code></pre> <pre><code>def pantheon(eleves, notes):\nnote_maxi = 0\nmeilleurs_eleves =  []\nfor i in range(len(eleves)) :\nif notes[i] == note_maxi :\nmeilleurs_eleves.append(eleves[i])\nelif notes[i] &gt; note_maxi:\nnote_maxi = notes[i]\nmeilleurs_eleves = [i]\nreturn (note_maxi, meilleurs_eleves)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 40.1 \u00c9nonc\u00e9Correction <p>Pour cet exercice :</p> <ul> <li> <p>On appelle \u00ab mot \u00bb une cha\u00eene de caract\u00e8res compos\u00e9e avec des caract\u00e8res choisis parmi les 26 lettres minuscules ou majuscules de l'alphabet,</p> </li> <li> <p>On appelle \u00ab phrase \u00bb une cha\u00eene de caract\u00e8res :</p> <ul> <li>compos\u00e9e avec un ou plusieurs \u00ab mots \u00bb s\u00e9par\u00e9s entre eux par un seul caract\u00e8re espace <code>' '</code>,</li> <li>se finissant :<ul> <li>soit par un point <code>'.'</code> qui est alors coll\u00e9 au dernier mot,</li> <li>soit par un point d'exclamation <code>'!'</code> ou d'interrogation <code>'?'</code> qui est alors s\u00e9par\u00e9 du dernier mot par un seul caract\u00e8re espace <code>' '</code>.</li> </ul> </li> </ul> </li> </ul> <p>Exemples :</p> <ul> <li>'Cet exercice est simple.'</li> <li>'Le point d exclamation est separe !'</li> </ul> <p>Apr\u00e8s avoir remarqu\u00e9 le lien entre le nombre de mots et le nombres de caract\u00e8res espace dans une phrase, programmer une fonction <code>nombre_de_mots</code> qui prend en param\u00e8tre une phrase et renvoie le nombre de mots pr\u00e9sents dans cette phrase.</p> <pre><code>&gt;&gt;&gt; nombre_de_mots('Le point d exclamation est separe !')\n6\n&gt;&gt;&gt; nombre_de_mots('Il y a un seul espace entre les mots !')\n9\n&gt;&gt;&gt; nombre_de_mots('Combien de mots y a t il dans cette phrase ?')\n10\n&gt;&gt;&gt; nombre_de_mots('Fin.')\n1\n</code></pre> <pre><code>def nombre_de_mots(phrase):\nnb_mots = 0\nfor caractere in phrase:\nif caractere == ' ' or caractere == '.':\nnb_mots += 1\nreturn nb_mots\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 40.2 \u00c9nonc\u00e9Correction <p>La classe ABR ci-dessous permet d'impl\u00e9menter une structure d'arbre binaire de recherche.</p> <pre><code>class Noeud:\ndef __init__(self, valeur):\n'''M\u00e9thode constructeur pour la classe Noeud.\n        Param\u00e8tre d'entr\u00e9e : valeur (str)'''\nself.valeur = valeur\nself.gauche = None\nself.droit = None\ndef getValeur(self):\n'''M\u00e9thode accesseur pour obtenir la valeur du noeud\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn self.valeur\ndef droitExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant droit existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.droit is not None)\ndef gaucheExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant gauche existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.gauche is not None)\ndef inserer(self, cle):\n'''M\u00e9thode d'insertion de cl\u00e9 dans un arbre binaire de recherche\n        Param\u00e8tre d'entr\u00e9e : cle (int)'''\nif cle &lt; ...:\n# on ins\u00e8re \u00e0 gauche\nif self.gaucheExiste():\n# on descend \u00e0 gauche et on retente l'insertion de la cl\u00e9\n...\nelse:\n# on cr\u00e9e un fils gauche\nself.gauche = ...\nelif cle &gt; ... :\n# on ins\u00e8re \u00e0 droite\nif ... :\n# on descend \u00e0 droite et on retente l'insertion de la cl\u00e9\n...\nelse:\n# on cr\u00e9e un fils droit\n... = Noeud(cle)\n</code></pre> <p>Compl\u00e9ter la fonction r\u00e9cursive <code>inserer</code> afin qu'elle permette d\u2019ins\u00e9rer un n\u0153ud dans l\u2019arbre binaire de recherche propos\u00e9, \u00e0 l\u2019aide de sa cl\u00e9.</p> <p>Voici un exemple d'utilisation :</p> <pre><code>&gt;&gt;&gt; arbre = Noeud(7)\n&gt;&gt;&gt; for cle in (3, 9, 1, 6):\narbre.inserer(cle)\n&gt;&gt;&gt; arbre.gauche.getValeur()\n3\n&gt;&gt;&gt; arbre.droit.getValeur()\n9\n&gt;&gt;&gt; arbre.gauche.gauche.getValeur()\n1\n&gt;&gt;&gt; arbre.gauche.droit.getValeur()\n6\n</code></pre> <pre><code>class Noeud:\ndef __init__(self, valeur):\n'''M\u00e9thode constructeur pour la classe Noeud.\n        Param\u00e8tre d'entr\u00e9e : valeur (str)'''\nself.valeur = valeur\nself.gauche = None\nself.droit = None\ndef getValeur(self):\n'''M\u00e9thode accesseur pour obtenir la valeur du noeud\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn self.valeur\ndef droitExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant droit existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.droit is not None)\ndef gaucheExiste(self):\n'''M\u00e9thode renvoyant True si l'enfant gauche existe\n        Aucun param\u00e8tre en entr\u00e9e'''\nreturn (self.gauche is not None)\ndef inserer(self, cle):\n'''M\u00e9thode d'insertion de cl\u00e9 dans un arbre binaire de recherche\n        Param\u00e8tre d'entr\u00e9e : cle (int)'''\nif cle &lt; self.valeur:\n# on ins\u00e8re \u00e0 gauche\nif self.gaucheExiste():\n# on descend \u00e0 gauche et on retente l'insertion de la cl\u00e9\nself.gauche.inserer(cle)\nelse:\n# on cr\u00e9e un fils gauche\nself.gauche = Noeud(cle)\nelif cle &gt; self.valeur:\n# on ins\u00e8re \u00e0 droite\nif self.droitExiste():\n# on descend \u00e0 droite et on retente l'insertion de la cl\u00e9\nself.droit.inserer(cle)\nelse:\n# on cr\u00e9e un fils droit\nself.droit = Noeud(cle)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 41.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>recherche(caractere, chaine)</code> qui prend en param\u00e8tres <code>caractere</code>, un unique caract\u00e8re (c\u2019est-\u00e0-dire une cha\u00eene de caract\u00e8re de longueur 1), et <code>chaine</code>, une cha\u00eene de caract\u00e8res. Cette fonction renvoie le nombre d\u2019occurrences de <code>caractere</code> dans <code>chaine</code>, c\u2019est-\u00e0-dire le nombre de fois o\u00f9 <code>caractere</code> appara\u00eet dans chaine.</p> <p>Exemples : </p><pre><code>&gt;&gt;&gt; recherche('e', \"sciences\")\n2\n&gt;&gt;&gt; recherche('i',\"mississippi\")\n4\n&gt;&gt;&gt; recherche('a',\"mississippi\")\n0\n</code></pre> <pre><code>def recherche(caractere, chaine):\nsomme = 0\nfor lettre in chaine:\nif lettre == caractere:\nsomme += 1\nreturn somme\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 41.2 \u00c9nonc\u00e9Correction <p>On s\u2019int\u00e9resse \u00e0 un algorithme r\u00e9cursif qui permet de rendre la monnaie \u00e0 partir d\u2019une liste donn\u00e9e de valeurs de pi\u00e8ces et de billets.</p> <p>Le syst\u00e8me mon\u00e9taire est donn\u00e9 sous forme d\u2019une liste <code>valeurs = [100, 50, 20, 10, 5, 2, 1]</code>. On suppose que les pi\u00e8ces et billets sont disponibles sans limitation.</p> <p>On cherche \u00e0 donner la liste des valeurs \u00e0 rendre pour une somme donn\u00e9e en argument. L\u2019algorithme utilis\u00e9 est de type glouton.</p> <p>Compl\u00e9ter le code Python ci-dessous de la fonction <code>rendu_glouton</code> qui impl\u00e9mente cet algorithme et renvoie la liste des pi\u00e8ces \u00e0 rendre.</p> <pre><code>valeurs = [100, 50, 20, 10, 5, 2, 1]\ndef rendu_glouton(a_rendre, rang):\nif a_rendre == 0:\nreturn ...\nv = valeurs[rang]\nif v &lt;= ... :\nreturn ... + rendu_glouton(a_rendre - v, rang)\nelse :\nreturn rendu_glouton(a_rendre, ...)\n</code></pre> <p>On devra obtenir :</p> <pre><code>&gt;&gt;&gt;rendu_glouton(67, 0)\n[50, 10, 5, 2]\n&gt;&gt;&gt;rendu_glouton(291, 0)\n[100, 100, 50, 20, 20, 1]\n&gt;&gt;&gt; rendu_glouton(291,1) # si on ne dispose pas de billets de 100\n[50, 50, 50, 50, 50, 20, 20, 1]\n</code></pre> <pre><code>valeurs = [100,50,20,10,5,2,1]\ndef rendu_glouton(a_rendre, rang):\nif a_rendre == 0:\nreturn []\nv = valeurs[rang]\nif v &lt;= a_rendre :\nreturn [v] + rendu_glouton(a_rendre - v, rang)\nelse :\nreturn rendu_glouton(a_rendre, rang + 1)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 42.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>tri_selection</code> qui prend en param\u00e8tre une liste <code>tab</code> de nombres entiers et qui renvoie la liste tri\u00e9e par ordre croissant. Il est demand\u00e9 de ne pas cr\u00e9er de nouvelle liste mais de modifier celle fournie.</p> <p>On utilisera l\u2019algorithme suivant :</p> <ul> <li>on recherche le plus petit \u00e9l\u00e9ment de la liste, en la parcourant du rang 0 au dernier rang, et on l'\u00e9change avec l'\u00e9l\u00e9ment d'indice 0 ;</li> <li>on recherche ensuite le plus petit \u00e9l\u00e9ment de la liste restreinte du rang 1 au dernier rang, et on l'\u00e9change avec l'\u00e9l\u00e9ment d'indice 1 ;</li> <li>on continue de cette fa\u00e7on jusqu'\u00e0 ce que la liste soit enti\u00e8rement tri\u00e9e.</li> </ul> <p>Exemple : </p><pre><code>&gt;&gt;&gt; tri_selection([1, 52, 6, -9, 12])\n[-9, 1, 6, 12, 52]\n</code></pre> <pre><code>def tri_selection(tab):\nfor i in range(len(tab)-1):\nindice_min = i\nfor j in range(i+1, len(tab)):\nif tab[j] &lt; tab[indice_min]:\nindice_min = j\ntab[i], tab[indice_min] = tab[indice_min], tab[i]\nreturn tab\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 42.2 \u00c9nonc\u00e9Correction <p>Le jeu du \u00ab plus ou moins \u00bb consiste \u00e0 deviner un nombre entier choisi entre 1 et 99.</p> <p>Un \u00e9l\u00e8ve de NSI d\u00e9cide de le coder en langage Python de la mani\u00e8re suivante :</p> <ul> <li>le programme g\u00e9n\u00e8re un nombre entier al\u00e9atoire compris entre 1 et 99 ;</li> <li>si la proposition de l\u2019utilisateur est plus petite que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ;</li> <li>si la proposition de l\u2019utilisateur est plus grande que le nombre cherch\u00e9, l\u2019utilisateur en est averti. Il peut alors en tester un autre ;</li> <li>si l\u2019utilisateur trouve le bon nombre en 10 essais ou moins, il gagne ;</li> <li>si l\u2019utilisateur a fait plus de 10 essais sans trouver le bon nombre, il perd.</li> </ul> <p>La fonction <code>randint</code> est utilis\u00e9e. Si a et b sont des entiers tels que <code>a &lt;= b</code>, <code>randint(a,b)</code> renvoie un nombre entier compris entre <code>a</code> et <code>b</code>.</p> <p>Compl\u00e9ter le code ci-dessous et le tester :</p> <pre><code>from random import randint\ndef plus_ou_moins():\nnb_mystere = randint(1,...)\nnb_test = int(input(\"Proposez un nombre entre 1 et 99 : \"))\ncompteur = ...\nwhile nb_mystere != ... and compteur &lt; ... :\ncompteur = compteur + ...\nif nb_mystere ... nb_test:\nnb_test = int(input(\"Trop petit ! Testez encore : \"))\nelse:\nnb_test = int(input(\"Trop grand ! Testez encore : \"))\nif nb_mystere == nb_test:\nprint (\"Bravo ! Le nombre \u00e9tait \",...)\nprint(\"Nombre d'essais: \",...)\nelse:\nprint (\"Perdu ! Le nombre \u00e9tait \",...)\n</code></pre> <pre><code>from random import randint\ndef plus_ou_moins():\nnb_mystere = randint(1,99)\nnb_test = int(input('Proposez un nombre entre 1 et 99 : '))\ncompteur = 1\nwhile nb_mystere != nb_test and compteur &lt; 10 :\ncompteur = compteur + 1\nif nb_mystere &gt; nb_test:\nnb_test = int(input('Trop petit ! Testez encore : '))\nelse:\nnb_test = int(input('Trop grand ! Testez encore : '))\nif nb_mystere == nb_test:\nprint ('Bravo ! Le nombre \u00e9tait ', nb_mystere)\nprint('Nombre d essais: ', compteur)\nelse:\nprint ('Perdu ! Le nombre \u00e9tait ', nb_mystere)\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 43.1 \u00c9nonc\u00e9Correction <p>\u00c9crire une fonction <code>ecriture_binaire_entier_positif</code> qui prend en param\u00e8tre un entier positif <code>n</code> et renvoie une liste d'entiers correspondant \u00e0 l\u2018\u00e9criture binaire de <code>n</code>.</p> <p>Ne pas oublier d\u2019ajouter au corps de la fonction une documentation et une ou plusieurs assertions pour v\u00e9rifier les pr\u00e9-conditions.</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; ecriture_binaire_entier_positif(0)\n[0]\n&gt;&gt;&gt; ecriture_binaire_entier_positif(2)\n[1, 0]\n&gt;&gt;&gt; ecriture_binaire_entier_positif(105)\n[1, 1, 0, 1, 0, 0, 1]\n</code></pre> <p>Aide :</p> <ul> <li>l'op\u00e9rateur <code>//</code> donne le quotient de la division euclidienne : <code>5//2</code> donne <code>2</code> ;</li> <li>l'op\u00e9rateur <code>%</code> donne le reste de la division euclidienne :<code>5%2</code> donne <code>1</code> ;</li> <li><code>append</code> est une m\u00e9thode qui ajoute un \u00e9l\u00e9ment \u00e0 une liste existante : Soit <code>T=[5,2,4]</code>, alors <code>T.append(10)</code> ajoute <code>10</code> \u00e0 la liste <code>T</code>. Ainsi, <code>T</code> devient <code>[5,2,4,10]</code>.</li> <li><code>reverse</code> est une m\u00e9thode qui renverse les \u00e9l\u00e9ments d'une liste. Soit <code>T=[5,2,4,10]</code>. Apr\u00e8s <code>T.reverse()</code>, la liste devient <code>[10,4,2,5]</code>.</li> </ul> <p>On remarquera qu\u2019on r\u00e9cup\u00e8re la repr\u00e9sentation binaire d\u2019un entier <code>n</code> en partant de la gauche en appliquant successivement les instructions :</p> <p><code>b = n%2</code></p> <p><code>n = n//2</code></p> <p>r\u00e9p\u00e9t\u00e9es autant que n\u00e9cessaire.</p> <pre><code>def ecriture_binaire_entier_positif(n):\n# cas particulier pour n = 0\nif n == 0:\nreturn [0]\n# cas g\u00e9n\u00e9ral\nb = []\nwhile n != 0:\nb.append(n % 2)\nn = n // 2\nb.reverse()\nreturn b\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 43.2 \u00c9nonc\u00e9Correction <p>La fonction <code>tri_bulles</code> prend en param\u00e8tre une liste <code>T</code> d\u2019entiers non tri\u00e9s et renvoie la liste tri\u00e9e par ordre croissant.</p> <p>Le tri \u00e0 bulles est un tri en place qui commence par placer le plus grand \u00e9l\u00e9ment en derni\u00e8re position en parcourant la liste de gauche \u00e0 droite et en \u00e9changeant au passage les \u00e9l\u00e9ments voisins mal ordonn\u00e9s (si la valeur de l\u2019\u00e9l\u00e9ment d\u2019indice <code>i</code> a une valeur strictement sup\u00e9rieure \u00e0 celle de l\u2019indice <code>i + 1</code>, ils sont \u00e9chang\u00e9s). Le tri place ensuite en avant-derni\u00e8re position le plus grand \u00e9l\u00e9ment de la liste priv\u00e9e de son dernier \u00e9l\u00e9ment en proc\u00e9dant encore \u00e0 des \u00e9changes d\u2019\u00e9l\u00e9ments voisins. Ce principe est r\u00e9p\u00e9t\u00e9 jusqu\u2019\u00e0 placer le minimum en premi\u00e8re position.</p> <p>Exemple : pour trier la liste <code>[7, 9, 4, 3]</code> :</p> <ul> <li>premi\u00e8re \u00e9tape : 7 et 9 ne sont pas \u00e9chang\u00e9s, puis 9 et 4 sont \u00e9chang\u00e9s, puis 9 et 3 sont \u00e9chang\u00e9s, la liste est alors <code>[7, 4, 3, 9]</code></li> <li>deuxi\u00e8me \u00e9tape : 7 et 4 sont \u00e9chang\u00e9s, puis 7 et 3 sont \u00e9chang\u00e9s, la liste est alors <code>[4, 3, 7, 9]</code></li> <li>troisi\u00e8me \u00e9tape : 4 et 3 sont \u00e9chang\u00e9s, la liste est alors <code>[3, 4, 7, 9]</code></li> </ul> <p>Compl\u00e9ter le code Python ci-dessous qui impl\u00e9mente la fonction tri_bulles.</p> <pre><code>def tri_bulles(T):\n'''\n    Renvoie le tableau T tri\u00e9 par ordre croissant\n    '''\nn = len(T)\nfor i in range(...,...,-1):\nfor j in range(i):\nif T[j] &gt; T[...]:\n... = T[j]\nT[j] = T[...]\nT[j+1] = temp\nreturn T\n</code></pre> <p>Exemples : </p><pre><code>&gt;&gt;&gt; tri_bulles([])\n[]\n&gt;&gt;&gt; tri_bulles([7])\n[7]\n&gt;&gt;&gt; tri_bulles([9, 3, 7, 2, 3, 1, 6])\n[1, 2, 3, 3, 6, 7, 9]\n&gt;&gt;&gt; tri_bulles([9, 7, 4, 3])\n[3, 4, 7, 9]\n</code></pre> <pre><code>def tri_bulles(T):\n'''\n    Renvoie le tableau T tri\u00e9 par ordre croissant\n    '''\nn = len(T)\nfor i in range(n-1,-1,-1):\nfor j in range(i):\nif T[j] &gt; T[j+1]:\ntemp = T[j]\nT[j] = T[j+1]\nT[j+1] = temp\nreturn T\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 44.1 \u00c9nonc\u00e9Correction <p>Programmer une fonction <code>renverse</code>, prenant en param\u00e8tre une cha\u00eene de caract\u00e8res non vide <code>mot</code> et renvoie une cha\u00eene de caract\u00e8res en inversant ceux de la cha\u00eene <code>mot</code>.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; renverse(\"informatique\")\n\"euqitamrofni\"\n</code></pre> <pre><code>def renverse(mot):\nsol = ''\nfor lettre in mot:\nsol = lettre + sol\nreturn sol\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 44.2 \u00c9nonc\u00e9Correction <p>Un nombre premier est un nombre entier naturel qui admet exactement deux diviseurs distincts entiers et positifs : 1 et lui-m\u00eame. </p> <p>Le crible d\u2019\u00c9ratosth\u00e8ne permet de d\u00e9terminer les nombres premiers plus petit qu\u2019un certain nombre <code>n</code> fix\u00e9. </p> <p>On consid\u00e8re pour cela un tableau <code>tab</code> de <code>n</code>bool\u00e9ens, initialement tous \u00e9gaux \u00e0 <code>True</code>, sauf <code>tab[0]</code> et <code>tab[1]</code> qui valent <code>False</code>, 0 et 1 n\u2019\u00e9tant pas des nombres premiers.  </p> <p>On parcourt alors ce tableau de gauche \u00e0 droite.  </p> <p>Pour chaque indice <code>i</code> :</p> <ul> <li> <p>si <code>tab[i]</code> vaut <code>True</code> : le nombre <code>i</code> est premier et on donne la valeur <code>False</code> \u00e0 toutes les cases du tableau dont l\u2019indice est un multiple de <code>i</code>, \u00e0 partir de <code>2*i</code> (c\u2019est-\u00e0-dire <code>2*i</code>, <code>3*i</code> ...).</p> </li> <li> <p>si <code>tab[i]</code> vaut <code>False</code> : le nombre <code>i</code> n\u2019est pas premier et on n\u2019effectue aucun changement sur le tableau. </p> </li> </ul> <p>On dispose de la fonction <code>crible</code>, incompl\u00e8te et donn\u00e9e ci-dessous, prenant en param\u00e8tre un entier <code>n</code> strictement positif et renvoyant un tableau contenant tous les nombres premiers plus petits que <code>n</code>.</p> <pre><code>def crible(n):\n\"\"\"\n    Renvoie un tableau contenant tous les nombres premiers plus petits que N\n    \"\"\"\npremiers = []\ntab = [True] * n\ntab[0], tab[1] = False, False\nfor i in range(..., n):\nif tab[i] == ...:\npremiers.append(...)\nfor multiple in range(2*i, n, ...):\ntab[multiple] = ...\nreturn premiers\nassert crible(40) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]\n</code></pre> <p>Compl\u00e9ter le code de cette fonction.</p> <pre><code>def crible(n):\n\"\"\"\n    Renvoie un tableau contenant tous les nombres premiers plus petits que N\n    \"\"\"\npremiers = []\ntab = [True] * n\ntab[0], tab[1] = False, False\nfor i in range(2, n):\nif tab[i] == True:\npremiers.append(i)\nfor multiple in range(2*i, n, i):\ntab[multiple] = False\nreturn premiers\nassert crible(40) == [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Exercice 45.1 \u00c9nonc\u00e9Correction <p>On veut trier par ordre croissant les notes d\u2019une \u00e9valuation qui sont des nombres entiers compris entre 0 et 10 (inclus).</p> <p>Ces notes sont contenues dans une liste <code>notes_eval</code>.</p> <p>\u00c9crire une fonction <code>rangement_valeurs</code> prenant en param\u00e8tre la liste <code>notes_eval</code> et renvoyant une liste de longueur 11 telle que la valeur de cette liste \u00e0 chaque rang est \u00e9gale au nombre de notes valant ce rang. Ainsi le terme de rang 0 indique le nombre de note 0, le terme de rang 1 le nombre de note 1, etc.</p> <p>\u00c9crire ensuite une fonction <code>notes_triees</code> prenant en param\u00e8tre la liste des effectifs des notes et renvoyant une liste contenant la liste, tri\u00e9e dans l\u2019ordre croissant, des notes des \u00e9l\u00e8ves.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; notes_eval = [2, 0, 5, 9, 6, 9, 10, 5, 7, 9, 9, 5, 0, 9, 6, 5, 4]\n&gt;&gt;&gt; effectifs_notes = rangement_valeurs(notes_eval)\n&gt;&gt;&gt; effectifs_notes\n[2, 0, 1, 0, 1, 4, 2, 1, 0, 5, 1]\n&gt;&gt;&gt; notes_triees(effectifs_notes)\n[0, 0, 2, 4, 5, 5, 5, 5, 6, 6, 7, 9, 9, 9, 9, 9, 10]\n</code></pre> <pre><code>def rangement_valeurs(notes_eval):\nlst = [0]*11\nfor note in notes_eval:\nlst[note] += 1\nreturn lst\ndef notes_triees(effectifs_notes):\ntriees = []\nfor i in range(11):\nif effectifs_notes[i] != 0:\nfor _ in range(effectifs_notes[i]):\ntriees.append(i)\nreturn triees\n</code></pre> <p> R\u00e9digez votre code sur Basthon</p> Exercice 45.2 \u00c9nonc\u00e9Correction <p>L\u2019objectif de cet exercice est d\u2019\u00e9crire deux fonctions r\u00e9cursives <code>dec_to_bin</code> et <code>bin_to_dec</code> assurant respectivement la conversion de l\u2019\u00e9criture d\u00e9cimale d\u2019un nombre entier vers son \u00e9criture en binaire et, r\u00e9ciproquement, la conversion de l\u2019\u00e9criture en binaire d\u2019un nombre vers son \u00e9criture d\u00e9cimale.</p> <p>Dans cet exercice, on s\u2019interdit l\u2019usage des fonctions Python <code>bin</code> et <code>int</code>.</p> <p>On rappelle sur l\u2019exemple ci-dessous une fa\u00e7on d\u2019obtenir l\u2019\u00e9criture en binaire du nombre 25 :</p> <p>\\(25 = 1 + 2 \\times 12\\) \\(\\phantom{25} = 1 + 2 \\times 12\\) \\(\\phantom{25} = 1 + 2 (0 + 2 \\times 6)\\) \\(\\phantom{25} = 1 + 2 (0 + 2 (0 + 2 \\times 3))\\) \\(\\phantom{25} = 1 + 2 (0 + 2 (0 + 2 (1 + 2 \\times 1)))\\) \\(\\phantom{25} = 1 \\times 2^0 + 0 \\times 2^1 + 0 \\times 2^2 + 1 \\times 2^3 + 1 \\times 2^4\\) </p> <p>L'\u00e9criture binaire de 25 est donc <code>11001</code>.</p> <p>0n rappelle \u00e9galement que :</p> <ul> <li><code>a // 2</code> renvoie le quotient de la division euclidienne de <code>a</code> par 2.</li> <li><code>a % 2</code> renvoie le reste dans la division euclidienne de <code>a</code> par 2.</li> </ul> <p>On indique enfin qu\u2019en Python si <code>mot = \"informatique\"</code> alors :</p> <ul> <li><code>mot[-1]</code> renvoie <code>'e'</code>, c\u2019est-\u00e0-dire le dernier caract\u00e8re de la cha\u00eene de caract\u00e8res <code>mot</code>.</li> <li><code>mot[:-1]</code> renvoie <code>'informatiqu'</code> , c\u2019est-\u00e0-dire l\u2019ensemble de la cha\u00eene de caract\u00e8res <code>mot</code> priv\u00e9e de son dernier caract\u00e8re.</li> </ul> <p>Compl\u00e9ter, puis tester, les codes de deux fonctions ci-dessous.  On pr\u00e9cise que la fonction r\u00e9cursive <code>dec_to_bin</code> prend en param\u00e8tre un nombre entier et renvoie une cha\u00eene de caract\u00e8res contenant l\u2019\u00e9criture en binaire du nombre pass\u00e9 en param\u00e8tre.</p> <p>Exemple :</p> <pre><code>&gt;&gt;&gt; dec_to_bin(25)\n'11001'\n</code></pre> <p>La fonction r\u00e9cursive <code>bin_to_dec</code> prend en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant l\u2019\u00e9criture d\u2019un nombre en binaire et renvoie l\u2019\u00e9criture d\u00e9cimale de ce nombre.</p> <pre><code>&gt;&gt;&gt; bin_to_dec('101010')\n42\n</code></pre> <pre><code>def dec_to_bin(nb_dec):\nq, r = nb_dec // 2, nb_dec % 2\nif q == ...:\nreturn str(r)\nelse:\nreturn dec_to_bin(...) + ...\ndef bin_to_dec(nb_bin):\nif nb_bin == '0':\nreturn 0\nelif ...:\nreturn 1\nelse:\nif nb_bin[-1] == '0':\nbit_droit = 0\nelse:\nbit_droit = ...\nreturn ... * bin_to_dec(nb_bin[:-1]) + ...\n</code></pre> <pre><code>def dec_to_bin(nb_dec):\nq, r = nb_dec // 2, nb_dec % 2\nif q == 0:\nreturn str(r)\nelse:\nreturn dec_to_bin(q) + str(r)\ndef bin_to_dec(nb_bin):\nif nb_bin == '0':\nreturn 0\nelif nb_bin == '1':\nreturn 1\nelse:\nif nb_bin[-1] == '0':\nbit_droit = 0\nelse:\nbit_droit = 1\nreturn 2 * bin_to_dec(nb_bin[:-1]) + bit_droit\n</code></pre> <p> Compl\u00e9tez le code sur Basthon</p> Sp\u00e9 Physique-Chimie Premi\u00e8re  \u26a1 \u00c9lectricit\u00e9 \u26a1  \ud83d\udd2c Optique \ud83d\udd2c  \ud83d\udd27 M\u00e9canique \ud83d\udd27  \ud83e\uddea Chimie \ud83e\uddea  <ul> <li>Comparaison de deux appareils \u00e0 fondue</li> <li>Chauffage et eau chaude de la maison</li> <li>Centrale \u00e9lectrique de l\u2019Ouest Guyanais</li> <li>Aspects \u00e9nerg\u00e9tiques des ph\u00e9nom\u00e8nes \u00e9lectriques</li> <li>Photopile et d\u00e9veloppement durable</li> <li>Une \u00e9olienne \u00e0 la maison</li> <li>Solar Impulse 2, l\u2019avion solaire</li> <li>Qui peut griller une tranche de pain en p\u00e9dalant ?</li> </ul> <ul> <li>Un drone pour ausculter la couverture v\u00e9g\u00e9tale</li> <li>Smartphone et photographie</li> <li>La photographie</li> <li>La fluorescence au service du diagnostic m\u00e9dical </li> <li>L\u2019otoscope </li> <li>Photographie \u00e0 l\u2019aide d\u2019une lentille boule </li> <li>Photographie argentique noir et blanc</li> </ul> <ul> <li>Ballon-sonde :  - corrig\u00e9</li> <li>Performances d\u2019un cycliste : </li> <li>Synth\u00e8se d\u2019un ester et convoyage de m\u00e9dicaments : </li> <li>L\u2019exp\u00e9dition GOMBESSA 5 : plan\u00e8te M\u00e9diterran\u00e9e : </li> <li>\u00c9tude d\u2019une centrale hydro\u00e9lectrique :  - corrig\u00e9</li> <li>Le jet d\u2019eau de Gen\u00e8ve - </li> <li>Aspects \u00e9nerg\u00e9tiques des ph\u00e9nom\u00e8nes m\u00e9caniques : Le ski de vitesse :  - corrig\u00e9</li> <li>Un ballon pour les comp\u00e9titions internationales de football : </li> <li>\u00c9tude d\u2019une montagne russe :  - corrig\u00e9</li> <li>Une onde un peu particuli\u00e8re, \u00ab l\u2019onde cobra \u00bb : </li> <li>Plong\u00e9e en eau douce : </li> <li>Cloche de plong\u00e9e : </li> <li>La fosse de plong\u00e9e Nemo 33 :  - corrig\u00e9</li> <li>La plong\u00e9e sous-marine en fosse : </li> <li>\u00c9tude d\u2019une structure en b\u00e9ton : de la pose \u00e0 l\u2019analyse : </li> <li>Bouquet final : </li> <li>Ressources d\u2019\u00e9nergie renouvelables :  - corrig\u00e9</li> <li>L\u2019exploit d\u2019Alan Eustace :  - corrig\u00e9</li> <li>Un mod\u00e8le pour la balle de tennis pendant le service : </li> <li>V\u00e9lo \u00e0 assistance \u00e9lectrique :  - corrig\u00e9</li> </ul> <ul> <li>Les comprim\u00e9s de permanganate de potassium sont-ils p\u00e9rim\u00e9s ?</li> <li>Allanto\u00efne :  - correction</li> <li>Dosage spectrophotom\u00e9trique d\u2019un additif alimentaire : le bleu patent\u00e9 V -  - correction</li> <li>Le bleu de m\u00e9thyl\u00e8ne en m\u00e9decine et en biologie -  - correction </li> <li>Recyclage d\u2019une solution de bouillie bordelaise -  - correction</li> <li>D\u00e9termination du degr\u00e9 alcoolique d\u2019un vin d\u2019\u00e9pines -  - correction</li> <li>Centrale \u00e9lectrique de l\u2019Ouest Guyanais (CEOG) -  - correction</li> <li>Des esters qui flattent nos cellules olfactives -  - correction</li> <li>Synth\u00e8se de la menthone \u00e0 partir du menthol -  - correction</li> <li>La d\u00e9tection du tabagisme passif -  - correction</li> <li>Hypochlorites et eaux de Javel -  - correction</li> </ul> Terminale  \u26a1 \u00c9lectricit\u00e9 \u26a1  \ud83d\udd2c Optique \ud83d\udd2c  \ud83d\udd27 M\u00e9canique \ud83d\udd27  \ud83e\uddea Chimie \ud83e\uddea  <ul> <li>Un syst\u00e8me de d\u00e9tection de passager (5 points) -  - corrig\u00e9</li> <li>Mesure d'\u00e9paisseur (5 points) -  - corrig\u00e9</li> <li>Les supercondensateurs (5 points) -  - corrig\u00e9</li> <li>Un microacc\u00e9l\u00e9rom\u00e8tre capacitif (5 points) -  - corrig\u00e9</li> <li>D\u00e9fibrillateur cardiaque (5 points) - </li> <li>Un capteur capacitif (5 points) -  - corrig\u00e9</li> <li>Un sport traditionnel : le lancer de gerbe de paille (10 points) -  - corrig\u00e9</li> <li>Quelques utilisations du condensateur (10 points) -  - corrig\u00e9</li> <li>La mission Grace-FO (10 points) -  - corrig\u00e9</li> </ul> <p>Lunette astronomique - Mesure d'\u00e9paisseur (5 points) -  - corrig\u00e9 - Puissance rayonn\u00e9e par la Lune (5 points) -  - corrig\u00e9 - D\u00e9termination du diam\u00e8tre de Jupiter (5 pts) -  - corrig\u00e9 - Une lunette d\u2019amateur pour voir des \u00e9toiles doubles (5 points) -  - corrig\u00e9 - La \u00ab Grande Lunette \u00bb de Meudon (5 points) -  - corrig\u00e9 - Observation d'un satellite (5 pts) -  - corrig\u00e9 - La pente d'eau de Montech (5 pts) -  - corrig\u00e9 - \u00c9clipse solaire du 10 Juin 2021 (5 points) -  - corrig\u00e9 - Lunette astronomique et observations de Mars (10 points) -  - corrig\u00e9 - Observation de la plan\u00e8te Mars (10 points) -  - corrig\u00e9 Diffraction et interf\u00e9rences - Quelle taille pour les mailles d'un tamis (5 points) -  - corrig\u00e9 - Mesure d'\u00e9paisseur (5 points) -  - corrig\u00e9 - Etude d'un film de savon (5 points) -  - corrig\u00e9 - Accoustique d'une salle (5 points) -  - corrig\u00e9</p> 2nde loi de NewtonMouvements dans un champs uniformeSatellites &amp; Kepler <ul> <li>Un vol inaugural un peu particulier (11 points) -  - corrig\u00e9</li> <li>Le jeu du Cornhole (1\u00e0 points) -  - corrig\u00e9</li> <li>Un saut stratosph\u00e9rique (5 points) -  - corrig\u00e9</li> <li>Performance d\u2019une voiture \u00e9lectrique au d\u00e9marrage (2,5 points) -  - corrig\u00e9</li> <li>Vol d'une mongolfi\u00e8re (10 points) -  - corrig\u00e9</li> <li>Water bottle flip (5 pointts) -  - corrig\u00e9</li> <li>D\u00e9termination de la masse de la Lune (5 points) -  - corrig\u00e9</li> <li>L\u2019installation de l\u2019Homme sur la Lune (5 points) -  - corrig\u00e9</li> <li>\u00c9tude d\u2019une frappe au football (10 points) -  - corrig\u00e9</li> <li>La pente d'eau de Montech (5 points) -  - corrig\u00e9</li> <li>Vers l\u2019ISS (10 points) -  - corrig\u00e9</li> <li>Mission Mars 2020 : le portrait - robot de \u00ab Pers\u00e9v\u00e9rance \u00bb (10 points) -  - corrig\u00e9</li> <li>La physqiue du jonglage (5 points) -  - corrig\u00e9</li> <li>\u00c9tude de manoeuvres avec un gyropode (10 points) -  - corrig\u00e9</li> <li>Vol droit \u00e9quilibr\u00e9 d'un parapentiste (10 points) -  - corrig\u00e9 </li> </ul> <ul> <li>\u00c9tude de la panne d\u2019un drone en plein vol (2,5 points) -  - corrig\u00e9</li> <li>Saut \u00e0 l'\u00e9lastique (5 points) -  - corrig\u00e9</li> <li>Cesta punta (5 points) -  - corrig\u00e9</li> <li>Un sport traditionnel : le lancer de gerbe de paille (10 points) -  - corrig\u00e9</li> <li>Une table de tennis de table connect\u00e9e (5 pts) -  - corrig\u00e9</li> <li>Quelques utilisations du condensateur (10 points) -  - corrig\u00e9</li> <li>La panenka (10 points) -  - corrig\u00e9</li> <li>Valoriser l\u2019\u00e9nergie cin\u00e9tique d\u2019une rame de m\u00e9tro (10 points) -  - corrig\u00e9</li> <li>Impression 3D d'objets m\u00e9talliques (10 points) -  - corrig\u00e9</li> </ul> <ul> <li>Le d\u00e9ploiement des satellites Starlink (2,5 points) -  - corrig\u00e9</li> <li>\u00c9tude de la deuxi\u00e8me loi de Kepler (5 points) -  - corrig\u00e9</li> <li>Au plus pr\u00e8s du soleil et de sa couronne (5 points) -  - corrig\u00e9</li> <li>En orbite autour de la Lune (5 points) -  - corrig\u00e9</li> <li>La mission GRACE-FO (10 points) -  - corrig\u00e9</li> <li>Parker solar proble (10 points) -  - corrig\u00e9</li> <li>Vitesse de la station spatiale internationale (5 points) -  - corrig\u00e9</li> <li>La trajectoire du satellite SOHO (10 points) -  - corrig\u00e9</li> <li>Observation de la Lune depuis la Terre (5 points) -  - corrig\u00e9</li> <li>Mesure de la masse de Jupiter et du Soleil (5 points) -  - corrig\u00e9</li> <li>Orbite d\u2019un satellite Starlink (5 points) -  - corrig\u00e9</li> <li>Observation de la plan\u00e8te Mars (10 points) -  - corrig\u00e9</li> <li>Des satellites pour mieux connaitre les oc\u00e9ans (1\u00e0 points) -  - corrig\u00e9</li> <li>Un tracteur gravitationel pour d\u00e9vier un ast\u00e9ro\u00efde ( 5 points) -  - corrig\u00e9</li> <li>La plan\u00e8te Mercure (5 points) -  - corrig\u00e9</li> </ul> <ul> <li>L\u2019acide lactique et le lactate d\u2019\u00e9thyle -  - correction</li> <li>L'aquarium r\u00e9cifal -  - correction</li> <li>Analyse d'un pygment \u00e0 base d'oxyde de fer -  - correction</li> <li>Une boisson de r\u00e9hydratation -  - correction</li> <li>Capture g\u00e9ologique du dioxyde de carbone -  - correction</li> <li>D\u00e9polluer une eau avec des carapaces de crevettes -  - correction</li> <li>Un indicateur color\u00e9 naturel issu du choux rouge -  - correction</li> <li>Additif alimentaire pour les agneaux -  - correction</li> <li>D\u00e9capage d\u2019une pi\u00e8ce en aluminium -  - correction</li> <li>Un apport de magn\u00e9sium -  - correction</li> <li>Protection des fondations en acier des \u00e9oliennes en mer -  - correction</li> <li>Pile \u00ab zinc-air \u00bb (pas au programme des \u00e9preuves)-  - correction</li> <li>Synth\u00e8se d'un ar\u00f4me -  - correction</li> <li>Four \u00e0 microonde pour synth\u00e8se organique -  - correction</li> <li>Vers la synth\u00e8se du plexiglass -  - correction</li> </ul>"},{"location":"bac/term/","title":"Programme limitatif des Terminales","text":""},{"location":"bac/term/#programme-limitatif-des-terminales","title":"Programme limitatif des Terminales","text":""},{"location":"bac/term/#constitution-et-transformations-de-la-matiere","title":"Constitution et transformations de la mati\u00e8re","text":""},{"location":"bac/term/#determiner-la-composition-dun-systeme-par-des-methodes-physiques-et-chimiques-tout","title":"D\u00e9terminer la composition d'un syst\u00e8me par des m\u00e9thodes physiques et chimiques (tout)","text":"<ul> <li>Mod\u00e9liser des transformations acide-base par des transferts d'ion hydrog\u00e8ne H+</li> <li>Analyser un syst\u00e8me chimique par des m\u00e9thodes physiques</li> <li>Analyser un syst\u00e8me par des m\u00e9thodes chimiques</li> </ul>"},{"location":"bac/term/#modeliser-levolution-temporelle-dun-systeme-siege-dune-transformation","title":"Mod\u00e9liser l'\u00e9volution temporelle d'un syst\u00e8me, si\u00e8ge d'une transformation","text":"<ul> <li>Suivre et mod\u00e9liser l'\u00e9volution temporelle d'un syst\u00e8me si\u00e8ge d'une transformation chimique (uniquement la partie suivante) :<ul> <li>Suivi temporel et mod\u00e9lisation macroscopique</li> <li>Mod\u00e8les microscopiques des m\u00e9canismes r\u00e9actionnels</li> </ul> </li> <li>Nucl\u00e9aire</li> </ul>"},{"location":"bac/term/#prevoir-letat-final-dun-systeme-siege-dune-transformation-chimique","title":"Pr\u00e9voir l'\u00e9tat final d'un syst\u00e8me, si\u00e8ge d'une transformation chimique","text":"<pre><code>- Pr\u00e9voir le sens de l'\u00e9volution spontan\u00e9e d'un syst\u00e8me chimique (uniquement les parties suivantes) :\n- \u00c9tat final d'un syst\u00e8me si\u00e8ge d'une transformation non totale : \u00e9tat d'\u00e9quilibre chimique\n- Mod\u00e8le de l'\u00e9quilibre dynamique\n- Quotient de r\u00e9action Qr\n- Syst\u00e8me \u00e0 l'\u00e9quilibre chimique : constante d'\u00e9quilibre K(T)\n- Crit\u00e8re d'\u00e9volution spontan\u00e9e d'un syst\u00e8me hors \u00e9quilibre chimique\n- Transformation spontan\u00e9e mod\u00e9lis\u00e9e par une r\u00e9action d'oxydo-r\u00e9duction\n- Oxydants et r\u00e9ducteurs usuels\n- Comparer la force des acides et des bases\n- ~~Pas la pile~~\n</code></pre>"},{"location":"bac/term/#forcer-le-sens-devolution-dun-systeme-electrochinime","title":"Forcer le sens d\u2019\u00e9volution d\u2019un syst\u00e8me\" \u00e9lectrochinime","text":""},{"location":"bac/term/#elaborer-des-strategies-en-synthese-organique","title":"\u00c9laborer des strat\u00e9gies en synth\u00e8se organique","text":"<ul> <li>Structure et propri\u00e9t\u00e9s</li> <li>Optimisation d'une \u00e9tape de synth\u00e8se</li> <li>Strat\u00e9gie de synth\u00e8se multi\u00e9tape</li> </ul>"},{"location":"bac/term/#mouvement-et-interactions","title":"Mouvement et interactions","text":"<ul> <li>D\u00e9crire un mouvement</li> <li>Relier les actions appliqu\u00e9es \u00e0 un syst\u00e8me \u00e0 son mouvement</li> <li>M\u00e9canique des fluides</li> </ul>"},{"location":"bac/term/#lenergie-conversions-et-transferts","title":"L'\u00e9nergie : conversions et transferts","text":""},{"location":"bac/term/#decrire-un-systeme-thermodynamique-exemple-du-modele-du-gaz-parfait","title":"D\u00e9crire un syst\u00e8me thermodynamique : exemple du mod\u00e8le du gaz parfait","text":""},{"location":"bac/term/#effectuer-des-bilans-denergie-sur-un-systeme-le-premier-principe-de-la-thermodynamique","title":"Effectuer des bilans d'\u00e9nergie sur un syst\u00e8me : le premier principe de la thermodynamique","text":"<ul> <li>\u00c9nergie interne d'un syst\u00e8me. Aspects microscopiques</li> <li>Premier principe de la thermodynamique. Transfert thermique, travail</li> <li>Capacit\u00e9 thermique d'un syst\u00e8me incompressible. \u00c9nergie interne d'un syst\u00e8me incompressible</li> <li>Modes de transfert thermique. Flux thermique. R\u00e9sistance thermique</li> <li>Bilan terre-atomosph\u00e8re + Loi ph\u00e9nom\u00e9nologique de Newton</li> </ul>"},{"location":"bac/term/#ondes-et-signaux","title":"Ondes et signaux","text":""},{"location":"bac/term/#caracteriser-les-phenomenes-ondulatoires","title":"Caract\u00e9riser les ph\u00e9nom\u00e8nes ondulatoires","text":"<ul> <li>Intensit\u00e9 sonore, intensit\u00e9 sonore de r\u00e9f\u00e9rence, niveau d'intensit\u00e9 sonore. Att\u00e9nuation (en dB)</li> <li>Diffraction d'une onde par une ouverture : conditions d'observation et caract\u00e9ristiques. Angle caract\u00e9ristique de diffraction</li> <li>Interf\u00e9rences de deux ondes, conditions d'observation. Interf\u00e9rences constructives, Interf\u00e9rences destructives</li> <li>Interf\u00e9rences de deux ondes lumineuses, diff\u00e9rence de chemin optique, conditions d'interf\u00e9rences constructives ou destructives</li> <li>Effet Doppler</li> </ul>"},{"location":"bac/term/#former-des-images-decrire-la-lumiere-par-un-flux-de-photons","title":"Former des images, d\u00e9crire la lumi\u00e8re par un flux de photons","text":"<ul> <li> <p>Former des images</p> </li> <li> <p>Photon et effet photo\u00e9lectrique</p> </li> </ul>"},{"location":"bac/term/#etudier-la-dynamique-dun-systeme-electrique","title":"\u00c9tudier la dynamique d'un syst\u00e8me \u00e9lectrique","text":""},{"location":"chimie/","title":"Introduction","text":""},{"location":"chimie/#la-chimie","title":"La chimie","text":"<p>Au programme</p> <p>0 - Rappels du coll\u00e8ge</p> <p>1 - Les atomes</p> <p>2 - Les ions</p> <p>3 - Les mol\u00e9cules</p> <p>4 - La r\u00e9action chimique</p> <p>5 - La chimie des solutions</p> <p>6 - La chimie organique</p> <p>L'atelier de P3S2 portera sur les parties 4, 5 et 6</p> <p>Commencez \u00e0 visionner des vid\u00e9os pour se lancer \u00e0 fond dans l'atelier !</p>"},{"location":"chimie/#5-questions-a-maitriser-pour-les-terms","title":"5 questions \u00e0 maitriser pour les terms","text":""},{"location":"chimie/college/","title":"Quelques rappels du coll\u00e8ge","text":""},{"location":"chimie/college/#quelques-rappels-du-college","title":"Quelques rappels du coll\u00e8ge","text":""},{"location":"chimie/college/#atomes-et-ions","title":"Atomes et ions","text":""},{"location":"chimie/college/#quest-ce-quun-atome-lessentiel-pour-reviser","title":"Qu'est-ce qu'un ATOME ? \u2b50\ufe0f L'essentiel pour r\u00e9viser :","text":""},{"location":"chimie/college/#taille-dun-atome-et-structure-lacunaire-exercice","title":"Taille d'un atome et structure lacunaire \u270f\ufe0f Exercice :","text":""},{"location":"chimie/college/#atome-et-tableau-periodique-au-college-exercice","title":"Atome et tableau p\u00e9riodique au coll\u00e8ge \u270f\ufe0f Exercice :","text":""},{"location":"chimie/college/#configuration-electronique-dun-atome-quiz-pour-reviser","title":"Configuration \u00e9lectronique d'un atome \ud83d\udd1f/\ud83d\udd1f Quiz pour r\u00e9viser :","text":""},{"location":"chimie/college/#revisions-atome-combien-de-protons-electrons-neutrons","title":"R\u00c9VISIONS \ud83c\udfaf ATOME : combien de protons ? \u00e9lectrons ? neutrons ?","text":""},{"location":"chimie/college/#composition-dun-ion-exercice","title":"Composition d'un ION ? \u270f\ufe0f Exercice :","text":""},{"location":"chimie/college/#atome-ou-ion-exercice","title":"Atome ou ion ? \u270f\ufe0f Exercice :","text":""},{"location":"chimie/college/#les-ions-cation-anion-mono-ou-polyatomique","title":"Les IONS \ud83d\udcda Cation ? Anion ? Mono ou Polyatomique ?","text":""},{"location":"chimie/college/#pourquoi-un-ion-est-il-charge","title":"Pourquoi un ion est-il charg\u00e9 ?","text":""},{"location":"chimie/college/#comment-calculer-proton-neutron-et-electron","title":"Comment CALCULER : proton, neutron et \u00e9lectron ?","text":""},{"location":"chimie/college/#chimie-des-solutions","title":"Chimie des solutions","text":""},{"location":"chimie/college/#quest-ce-quune-solution-solute-solvant","title":"Qu'est-ce qu'une solution ? Solut\u00e9 ? Solvant ?","text":""},{"location":"chimie/college/#masse-volumique-pour-identifier-une-espece-chimique","title":"Masse volumique pour identifier une esp\u00e8ce chimique :","text":""},{"location":"chimie/college/#comment-calculer-la-masse-volumique-dun-liquide-exercice","title":"Comment calculer la MASSE VOLUMIQUE d'un liquide ? \u270f\ufe0f Exercice :","text":""},{"location":"chimie/college/#calculer-une-masse-volumique-sujet-brevet","title":"Calculer une masse volumique \ud83c\udfaf Sujet Brevet :","text":""},{"location":"chimie/college/#acidebase","title":"Acide/base","text":""},{"location":"chimie/college/#solution-acide-ou-basique-sujet-brevet-physique-chimie","title":"Solution acide ou basique ? \ud83c\udfaf Sujet Brevet | Physique Chimie :","text":""},{"location":"chimie/college/#quest-ce-que-le-ph-acide-basique-neutre","title":"Qu'est-ce que le pH ? Acide, basique, neutre :","text":""},{"location":"chimie/college/#les-molecules","title":"Les mol\u00e9cules","text":""},{"location":"chimie/college/#molecule-modele-moleculaire-formule-chimique-a-connaitre","title":"Mol\u00e9cule \ud83d\udc49 mod\u00e8le mol\u00e9culaire &amp; formule chimique \u00e0 connaitre :","text":""},{"location":"chimie/college/#quest-ce-quun-modele-moleculaire","title":"Qu'est-ce qu'un MOD\u00c8LE MOL\u00c9CULAIRE ?","text":""},{"location":"chimie/college/#comprendre-la-formule-chimique-dune-molecule-methode","title":"Comprendre la FORMULE chimique d'une MOL\u00c9CULE \ud83d\udca1 M\u00e9thode :","text":""},{"location":"chimie/college/#les-reactions-chimiques","title":"Les r\u00e9actions chimiques","text":""},{"location":"chimie/college/#transformation-chimique-lessentiel-pour-reviser","title":"TRANSFORMATION CHIMIQUE \u2b50\ufe0f L'essentiel pour r\u00e9viser :","text":""},{"location":"chimie/college/#equilibrer-une-equation-chimique-exercice-facile","title":"\u00c9quilibrer une \u00e9quation chimique ? \u2705 Exercice facile :","text":""},{"location":"chimie/college/#formules-chimiques-equilibrer-equation-sujet-brevet","title":"Formules chimiques, \u00e9quilibrer \u00e9quation \ud83c\udfaf Sujet Brevet :","text":""},{"location":"chimie/college/#equilibrer-equation-chimique-sujet-brevet","title":"\u00c9quilibrer \u00e9quation chimique \ud83c\udfaf Sujet Brevet :","text":""},{"location":"chimie/college/#caracterisation-dun-systeme-chimique","title":"Caract\u00e9risation d'un syst\u00e8me chimique","text":""},{"location":"chimie/college/#composition-et-modelisation-simplifiee-de-lair","title":"COMPOSITION et mod\u00e9lisation simplifi\u00e9e de l'air :","text":""},{"location":"chimie/college/#variations-de-temperature-et-vaporisation","title":"Variations de TEMP\u00c9RATURE et VAPORISATION :","text":""},{"location":"chimie/college/#calculer-masse-volumique-dune-bague-exercice","title":"Calculer MASSE VOLUMIQUE d'une bague \ud83d\udc8d Exercice :","text":""},{"location":"chimie/college/#determiner-une-masse-volumique-protocole-experimental","title":"D\u00e9terminer une MASSE VOLUMIQUE \ud83d\udc68\u200d\ud83d\udd2c Protocole exp\u00e9rimental  :","text":""},{"location":"chimie/college/#masse-volumique-formules-unites-et-calculs-methode-facile","title":"MASSE VOLUMIQUE : formules, unit\u00e9s et calculs \u2705 M\u00e9thode facile :","text":""},{"location":"chimie/college/#comment-calculer-une-masse-volumique","title":"Comment calculer une MASSE VOLUMIQUE ?","text":""},{"location":"chimie/college/#test-dions-schema-sujet-brevet","title":"Test d'ions, sch\u00e9ma \ud83c\udfaf Sujet Brevet :","text":""},{"location":"chimie/atome/","title":"Atomes et \u00e9l\u00e9ments chimiques","text":""},{"location":"chimie/atome/#latome-et-lelement-chimique","title":"\ud83d\udfe2 L'atome et l'\u00e9l\u00e9ment chimique","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/atome/#consitution-dun-atome","title":"Consitution d'un atome","text":""},{"location":"chimie/atome/#constitution-de-latome","title":"Constitution de l'atome","text":""},{"location":"chimie/atome/#atome-masse-et-compostion","title":"Atome, masse et compostion","text":""},{"location":"chimie/atome/#les-isotopes","title":"Les isotopes","text":""},{"location":"chimie/atome/#identifier-des-isotopes","title":"Identifier des isotopes","text":""},{"location":"chimie/atome/#masse-dun-atome","title":"Masse d'un atome","text":""},{"location":"chimie/atome/#calculer-la-masse-dun-atome","title":"Calculer la masse d'un atome","text":""},{"location":"chimie/atome/#combien-datome-dor-dans-une-medaille","title":"Combien d'atome d'or dans une m\u00e9daille","text":""},{"location":"chimie/atome/#electrons-de-valence","title":"Electrons de valence","text":""},{"location":"chimie/atome/#cortege-electronique-de-latome","title":"Cort\u00e8ge \u00e9lectronique de l'atome","text":""},{"location":"chimie/atome/#ecrire-une-configuration-electronique","title":"Ecrire une configuration \u00e9lectronique","text":""},{"location":"chimie/atome/#configuration-electronique-dun-atome-ou-dun-ion","title":"Configuration \u00e9lectronique d'un atome ou d'un ion","text":""},{"location":"chimie/atome/#configuration-electronique-dun-gaz-noble","title":"Configuration \u00e9lectronique d'un gaz noble","text":""},{"location":"chimie/atome/#configuration-electronique-et-position-dans-le-tableau-periodique","title":"Configuration \u00e9lectronique et position dans le tableau p\u00e9riodique","text":""},{"location":"chimie/atome/#classification-periodique","title":"Classification p\u00e9riodique","text":""},{"location":"chimie/atome/#atome-et-tableau-periodique-4-enigmes","title":"Atome et tableau p\u00e9riodique : 4 \u00e9nigmes","text":"<p>vB_XmYTy3T5U)</p>"},{"location":"chimie/atome/#identifier-un-element","title":"Identifier un \u00e9l\u00e9ment","text":""},{"location":"chimie/atome/#regle-du-duet-et-de-loctet","title":"Regle du duet et de l'octet","text":""},{"location":"chimie/atome/#configuration-electronique-et-tableau-periodique","title":"Configuration \u00e9lectronique et tableau p\u00e9riodique","text":""},{"location":"chimie/atome/#schema-de-lewis-dun-atome","title":"Sch\u00e9ma de lewis d'un atome","text":""},{"location":"chimie/atome/#modele-de-lewis-liaison-covalente-et-doubets-non-liants","title":"Mod\u00e8le de Lewis, liaison covalente et doubets non-liants","text":""},{"location":"chimie/atome/#construire-un-noyau","title":"Construire un noyau","text":""},{"location":"chimie/atome/#atomes-et-elements","title":"Atomes et \u00e9l\u00e9ments","text":""},{"location":"chimie/atome/#isotopes-et-masse-atomiques","title":"Isotopes et masse atomiques","text":""},{"location":"chimie/caracterisation/","title":"M\u00e9thodes de caract\u00e9risation","text":""},{"location":"chimie/caracterisation/#caracterisation-dune-espece-chimique","title":"Caract\u00e9risation d'une esp\u00e8ce chimique","text":""},{"location":"chimie/caracterisation/#caracterisation-par-la-temperature-de-changement-detat","title":"\ud83d\udfe2 Caract\u00e9risation par la temp\u00e9rature de changement d'\u00e9tat","text":""},{"location":"chimie/caracterisation/#caracterisation-par-sa-masse-volumique","title":"Caract\u00e9risation par sa masse volumique","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/caracterisation/#masse-volumique-dune-espece-chimique","title":"\ud83d\udfe2 Masse volumique d'une esp\u00e8ce chimique","text":""},{"location":"chimie/caracterisation/#calcul-dune-masse-volumique","title":"\ud83d\udfe2 Calcul d'une masse volumique","text":""},{"location":"chimie/caracterisation/#masse-volumique-pour-identifier-une-espece-chimique","title":"\ud83d\udfe2 Masse volumique pour identifier une esp\u00e8ce chimique","text":""},{"location":"chimie/caracterisation/#spectroscopie-infrarouge","title":"Spectroscopie infrarouge","text":""},{"location":"chimie/caracterisation/#identifier-une-espece-chimique-par-la-spectro-ir","title":"\ud83d\udfe1 Identifier une esp\u00e8ce chimique par la spectro IR","text":""},{"location":"chimie/caracterisation/#comment-exploiter-un-spectre-infrarouge","title":"\ud83d\udd34 Comment exploiter un spectre infrarouge","text":""},{"location":"chimie/ion/","title":"Ions","text":""},{"location":"chimie/ion/#les-ions","title":"Les ions","text":""},{"location":"chimie/ion/#formation-des-ions","title":"\ud83d\udfe2 Formation des ions","text":""},{"location":"chimie/ion/#configuration-electronique-dun-ion","title":"Configuration \u00e9lectronique d'un ion","text":""},{"location":"chimie/ion/#comprendre-la-formation-des-ions-avec-le-tableau-periodique","title":"Comprendre la formation des ions avec le tableau p\u00e9riodique","text":""},{"location":"chimie/ion/#comment-se-forme-un-ion","title":"Comment se forme un ion","text":""},{"location":"chimie/ion/#charge-dun-ion","title":"Charge d'un ion","text":""},{"location":"chimie/ion/#quiz-sur-les-ions","title":"Quiz sur les ions","text":""},{"location":"chimie/ion/#les-composes-ioniques","title":"\ud83d\udfe2 Les compos\u00e9s ioniques","text":""},{"location":"chimie/ion/#cation-anion-mono-et-polyatomique","title":"Cation, anion, mono et polyatomique","text":""},{"location":"chimie/ion/#composition-dun-solide-ionique","title":"Composition d'un solide ionique","text":""},{"location":"chimie/ion/#formule-dun-compose-ionique","title":"Formule d'un compos\u00e9 ionique","text":""},{"location":"chimie/ion/#nom-dun-compose-ionique","title":"Nom d'un compos\u00e9 ionique","text":""},{"location":"chimie/ion/#equation-de-dissolution-et-concentration","title":"\ud83d\udfe1 Equation de dissolution et concentration","text":""},{"location":"chimie/ion/#equation-de-dissolution-dun-solide-ionique","title":"Equation de dissolution d'un solide ionique","text":""},{"location":"chimie/ion/#calcul-de-la-concentration-en-ion","title":"Calcul de la concentration en ion","text":""},{"location":"chimie/molecule/","title":"Mol\u00e9cules","text":""},{"location":"chimie/molecule/#les-molecules","title":"Les mol\u00e9cules","text":""},{"location":"chimie/molecule/#formules-chimiques-et-schema-de-lewis","title":"Formules chimiques et sch\u00e9ma de Lewis","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/molecule/#la-formule-chimique","title":"\ud83d\udfe2 La formule chimique","text":""},{"location":"chimie/molecule/#comprendre-le-schema-de-lewis-dune-molecule","title":"\ud83d\udfe2 Comprendre le sch\u00e9ma de Lewis d'une mol\u00e9cule","text":""},{"location":"chimie/molecule/#shema-de-lewis-et-modele-moleculaire","title":"\ud83d\udfe2 Sh\u00e9ma de Lewis et mod\u00e8le mol\u00e9culaire","text":""},{"location":"chimie/molecule/#formules-brutes-developpees-et-semi-developpees","title":"\ud83d\udfe1 Formules brutes, d\u00e9velopp\u00e9es et semi-d\u00e9velopp\u00e9es","text":""},{"location":"chimie/molecule/#determiner-la-formule-brute-dune-molecule","title":"\ud83d\udfe1 D\u00e9terminer la formule brute d'une mol\u00e9cule","text":"<p>![type:video](https://www.youtube.com/embed/</p>"},{"location":"chimie/molecule/#formule-topologique-des-molecules","title":"\ud83d\udd34 Formule topologique des mol\u00e9cules","text":""},{"location":"chimie/molecule/#masse-molaires-moleculaires","title":"\ud83d\udfe2 Masse molaires mol\u00e9culaires","text":""},{"location":"chimie/molecule/#calcul-de-la-masse-dune-molecule","title":"Calcul de la masse d'une mol\u00e9cule","text":""},{"location":"chimie/molecule/#masse-dune-mole-de-molecule-masse-molaire","title":"Masse d'une mole de mol\u00e9cule : masse molaire","text":""},{"location":"chimie/molecule/#geometrie-des-molecules","title":"\ud83d\udfe1 G\u00e9om\u00e9trie des mol\u00e9cules","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/molecule/#schema-de-lewis-et-geometrie","title":"Sch\u00e9ma de Lewis et g\u00e9om\u00e9trie","text":""},{"location":"chimie/molecule/#vocalbulaire","title":"Vocalbulaire","text":""},{"location":"chimie/molecule/#polarite-des-molecules","title":"\ud83d\udfe1 Polarit\u00e9 des mol\u00e9cules","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/molecule/#liaison-polarisee-et-molecule-polaire","title":"Liaison polaris\u00e9e et mol\u00e9cule polaire","text":""},{"location":"chimie/molecule/#determiner-la-polarite-dune-molecule","title":"d\u00e9terminer la polarit\u00e9 d'une mol\u00e9cule","text":""},{"location":"chimie/molecule/#exemple-1-molecule-polaire-ou-apolaire","title":"Exemple #1 : Mol\u00e9cule polaire ou apolaire","text":""},{"location":"chimie/molecule/#exemple-2-molecule-polaire-ou-apolaire","title":"Exemple #2 : mol\u00e9cule polaire ou apolaire","text":""},{"location":"chimie/molecule/#molecule-polaire-et-miscibilite","title":"Mol\u00e9cule polaire et miscibilit\u00e9","text":""},{"location":"chimie/orga/","title":"Chimie organique","text":""},{"location":"chimie/orga/#la-chimie-organique","title":"La chimie organique","text":""},{"location":"chimie/orga/#la-chimie-orga-cest-quoi","title":"La chimie orga ? c'est quoi ?","text":"<p>Au programme</p> <p>1 - \ud83d\udfe1 Nomenclature des mol\u00e9cules organiques</p> <p>2 - \ud83d\udd34 Un peu plus de nomenclature</p>"},{"location":"chimie/orga/nomenclature-premiere/","title":"\ud83d\udfe1 Nomenclature","text":""},{"location":"chimie/orga/nomenclature-premiere/#nomenclature","title":"\ud83d\udfe1 Nomenclature","text":""},{"location":"chimie/orga/nomenclature-premiere/#groupes-caracteristique-et-familles-fonctionnelles","title":"Groupes caract\u00e9ristique et familles fonctionnelles","text":""},{"location":"chimie/orga/nomenclature-premiere/#identifier-les-groupes-caracteristiques","title":"Identifier les groupes caract\u00e9ristiques","text":""},{"location":"chimie/orga/nomenclature-premiere/#determiner-la-famille-dune-molecule","title":"D\u00e9terminer la famille d'une mol\u00e9cule","text":""},{"location":"chimie/orga/nomenclature-premiere/#methode","title":"M\u00e9thode","text":""},{"location":"chimie/orga/nomenclature-premiere/#exemples-simples","title":"Exemples simples","text":""},{"location":"chimie/orga/nomenclature-premiere/#exemples-simples-2","title":"Exemples simples #2","text":""},{"location":"chimie/orga/nomenclature-premiere/#3-exemples-de-nomenclature-des-alcanes","title":"3 exemples de nomenclature des alcanes","text":""},{"location":"chimie/orga/nomenclature-premiere/#3-exemples-de-nomenclature-des-alcools","title":"3 exemples de nomenclature des alcools","text":""},{"location":"chimie/orga/nomenclature-premiere/#exercice-facile","title":"Exercice facile","text":""},{"location":"chimie/orga/nomenclature-premiere/#vrai-ou-faux","title":"Vrai ou faux ?","text":""},{"location":"chimie/orga/nomenclature-term/","title":"\ud83d\udd34 La nomenclature pour les terminales","text":""},{"location":"chimie/orga/nomenclature-term/#la-nomenclature-pour-les-terminales","title":"\ud83d\udd34 La nomenclature pour les terminales","text":""},{"location":"chimie/orga/nomenclature-term/#nomenclature-des-esters","title":"Nomenclature des esters","text":""},{"location":"chimie/orga/nomenclature-term/#exercice-bac","title":"Exercice Bac","text":""},{"location":"chimie/orga/nomenclature-term/#famille-de-molecules","title":"Famille de mol\u00e9cules ?","text":""},{"location":"chimie/reaction/","title":"Introduction","text":""},{"location":"chimie/reaction/#reaction-chimique","title":"R\u00e9action chimique","text":""},{"location":"chimie/reaction/#transformation-physique-chimique-ou-nucleaire","title":"\ud83d\udfe2 transformation physique, chimique ou nucl\u00e9aire","text":"<p>Au programme</p> <p>1 - \ud83d\udfe2 La r\u00e9action chimique </p> <p>2 - \ud83d\udfe1 La r\u00e9action d'oxydor\u00e9duction</p> <p>3 - \ud83d\udd34 La r\u00e9action acidobasique</p>"},{"location":"chimie/reaction/acide/","title":"\ud83d\udd34 R\u00e9action acide/base","text":""},{"location":"chimie/reaction/acide/#reactions-acides-bases","title":"\ud83d\udd34 R\u00e9actions acides / bases","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfaeSujets BAC Paul Olivier <p>R\u00e9action acido/basique ou oxydor\u00e9duction ? </p> <p>Acide et base de Br\u00f6nsted </p> <p>Esp\u00e8ces amphot\u00e8res </p> <p>Structure d'un acide de Br\u00f6nsted </p> <p>Comment identifier un couple acide/base ? </p> <p>Exo : Couple acide base ? </p> <p>Exo : Equation de r\u00e9action acide/base </p> <p>Schema de Lewis acide/base </p> <p>Calculer le pH d'une solution </p> <p>Calculer la concentration en ion Oxonium \u00e0 partir du pH </p> <p>Exo bac : Calculer la concentration en ion Oxonium </p> <p>Acide fort ou faible ? </p> <p>Diagramme de pr\u00e9dominance </p> <p>Produit ionique de l'eau et pH </p> Nicolas Galiot <ul> <li> <p>Les transformations acide-base </p> </li> <li> <p>Le pH - Analyser un syst\u00e8me chimique par des m\u00e9thodes physiques </p> </li> <li> <p>Les titrages </p> </li> <li> <p>La Loi de Kolhrausch </p> </li> </ul> Playlist e-profs <p></p> Synth\u00e8se de Florence Raffin <p></p> Les g\u00e9nies des sciences <p>Comparer la force des acides et des bases (constante d'acidit\u00e9) </p> <p>Transformations acide-base et le potentiel hydrog\u00e8ne (ph) </p> Nicolas Galiot <ul> <li> <p>Les transformations acide-base </p> </li> <li> <p>Le pH - Analyser un syst\u00e8me chimique par des m\u00e9thodes physiques </p> </li> <li> <p>Les titrages </p> </li> <li> <p>La Loi de Kolhrausch </p> </li> </ul> Playlist e-profs <p></p> Synth\u00e8se de Florence Raffin <p></p> Les g\u00e9nies des sciences <p>Transformations acide-base et le potentiel hydrog\u00e8ne (ph) </p> <p>Comparer la force des acides et des bases (constante d'acidit\u00e9) </p> <p>Recharger la page si les applications ne se lancent pas</p> <p>Solutions acidobasiques</p> <p> </p> <p>Le pH : les bases</p> <p> </p> <p>\u00c9chelle de pH</p> <p> </p> <p>Sujets corrig\u00e9s sur le site de LaboLyc\u00e9e</p>"},{"location":"chimie/reaction/reaction/","title":"\ud83d\udfe2 Les bases","text":""},{"location":"chimie/reaction/reaction/#la-reaction-modelisation-dune-transformation-chimique","title":"La r\u00e9action : Mod\u00e9lisation d'une transformation chimique","text":""},{"location":"chimie/reaction/reaction/#equation-de-reaction","title":"\ud83d\udfe2 \u00c9quation de r\u00e9action","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/reaction/reaction/#equilibrer-une-equation-chimiqe","title":"\ud83d\udfe2 Equilibrer une \u00e9quation chimiqe","text":""},{"location":"chimie/reaction/reaction/#exemples","title":"\ud83d\udfe2 Exemples","text":""},{"location":"chimie/reaction/reaction/#reactif-limitant-dune-reaction-chimique","title":"R\u00e9actif limitant d'une r\u00e9action chimique","text":""},{"location":"chimie/reaction/reaction/#reactif-limitant","title":"\ud83d\udfe2 R\u00e9actif limitant","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/reaction/reaction/#avancement-dune-reaction","title":"Avancement d'une r\u00e9action","text":""},{"location":"chimie/reaction/reaction/#comment-faire-un-tableau-davancement","title":"\ud83d\udfe1 Comment faire un tableau d'avancement","text":""},{"location":"chimie/reaction/reaction/#tableau-davancement-et-reactif-limitant","title":"\ud83d\udfe1 Tableau d'avancement et r\u00e9actif limitant","text":""},{"location":"chimie/reaction/reaction/#melanges-stoechiometriques-et-tableaux-davancement","title":"\ud83d\udfe1 M\u00e9langes stoechiom\u00e9triques et tableaux d'avancement","text":""},{"location":"chimie/reaction/reaction/#exercice-sur-les-tableaux-davancement","title":"\ud83d\udfe1 Exercice sur les tableaux d'avancement","text":""},{"location":"chimie/reaction/redox/","title":"\ud83d\udfe1 R\u00e9action redox","text":""},{"location":"chimie/reaction/redox/#reaction-doxydo-reduction","title":"\ud83d\udfe1 R\u00e9action d'oxydo-r\u00e9duction","text":""},{"location":"chimie/reaction/redox/#oxydant-et-reducteur","title":"Oxydant et r\u00e9ducteur","text":""},{"location":"chimie/reaction/redox/#identifier-les-couples","title":"Identifier les couples","text":""},{"location":"chimie/reaction/redox/#ajuster-une-demi-equation-doxydoreduction","title":"Ajuster une demi-\u00e9quation d'oxydor\u00e9duction","text":""},{"location":"chimie/reaction/redox/#equilibrer-une-demi-equation-redox","title":"Equilibrer une demi-\u00e9quation redox","text":""},{"location":"chimie/reaction/redox/#4-exemples-de-demi-equation","title":"4 exemples de demi-\u00e9quation","text":""},{"location":"chimie/reaction/redox/#tableau-davancement-oxydoreduction-et-volume-molaire","title":"Tableau d'avancement, oxydor\u00e9duction et volume molaire","text":""},{"location":"chimie/reaction/redox/#exercice-complet","title":"Exercice complet","text":""},{"location":"chimie/solution/","title":"Introduction","text":""},{"location":"chimie/solution/#la-chimie-des-solutions","title":"La chimie des solutions","text":""},{"location":"chimie/solution/#quest-ce-quune-solution","title":"Qu'est-ce qu'une solution ?","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae <p>Au programme</p> <p>1- Comment r\u00e9aliser une solution ?</p> <p>2- Comment calculer diff\u00e9rents param\u00e8tres de la solution ?</p> <p>3- Comment doser les solut\u00e9s d'une solution ?</p>"},{"location":"chimie/solution/calcul/","title":"Calculs en chimie","text":""},{"location":"chimie/solution/calcul/#les-calculs-en-chimie","title":"Les calculs en chimie","text":""},{"location":"chimie/solution/calcul/#masse-de-solute-et-concentration-massique","title":"Masse de solut\u00e9 et concentration massique","text":""},{"location":"chimie/solution/calcul/#composition-massique-et-volumique-dun-melange","title":"\ud83d\udfe2 Composition massique et volumique d'un m\u00e9lange","text":""},{"location":"chimie/solution/calcul/#difference-masse-volumique-et-concentration-massique","title":"\ud83d\udfe2 Diff\u00e9rence masse volumique et concentration massique","text":""},{"location":"chimie/solution/calcul/#masse-et-composition-massique-dune-solution","title":"\ud83d\udfe2 Masse et composition massique d'une solution","text":""},{"location":"chimie/solution/calcul/#calculer-la-concentration-en-masse","title":"\ud83d\udfe2 Calculer la concentration en masse","text":""},{"location":"chimie/solution/calcul/#quantite-de-matiere-en-mole","title":"Quantit\u00e9 de mati\u00e8re en mole","text":""},{"location":"chimie/solution/calcul/#nombre-davogadro-et-quantite-de-matiere","title":"\ud83d\udfe2 Nombre d'avogadro et quantit\u00e9 de mati\u00e8re","text":""},{"location":"chimie/solution/calcul/#calculer-un-nombre-de-mole","title":"\ud83d\udfe2 Calculer un nombre de mole","text":""},{"location":"chimie/solution/calcul/#combien-de-molecules-dans-un-cachet-de-paracetamol","title":"\ud83d\udfe2 Combien de mol\u00e9cules dans un cachet de parac\u00e9tamol ?","text":""},{"location":"chimie/solution/calcul/#calculer-un-nombre-de-moles","title":"\ud83d\udfe2 Calculer un nombre de moles","text":""},{"location":"chimie/solution/calcul/#combien-de-moles","title":"\ud83d\udfe2 Combien de moles ?","text":""},{"location":"chimie/solution/calcul/#calcul-dun-nombre-de-molecule-et-de-mole","title":"\ud83d\udfe2 Calcul d'un nombre de mol\u00e9cule et de mole","text":""},{"location":"chimie/solution/calcul/#la-masse-dune-mole-de-molecule-masse-molaire","title":"\ud83d\udfe2 La masse d'une mole de mol\u00e9cule : masse molaire","text":""},{"location":"chimie/solution/calcul/#calculs-avances-de-quantite-de-matiere","title":"Calculs avanc\u00e9s de quantit\u00e9 de mati\u00e8re","text":""},{"location":"chimie/solution/calcul/#fiche-de-revision-calculer-une-quantite-de-matiere","title":"\ud83d\udfe1 Fiche de r\u00e9vision : calculer une quantit\u00e9 de mati\u00e8re","text":"A partir d'une masseA partir d'une concentration molaire ou massiqueA partir d'un volume"},{"location":"chimie/solution/calcul/#calcul-de-masses-molaires","title":"\ud83d\udfe1\u00a0Calcul de masses molaires","text":""},{"location":"chimie/solution/calcul/#quantite-de-matiere-et-masse-molaire","title":"\ud83d\udfe1 Quantit\u00e9 de mati\u00e8re et masse molaire","text":""},{"location":"chimie/solution/calcul/#concentration-en-quantite-de-matiere","title":"\ud83d\udfe1 Concentration en quantit\u00e9 de mati\u00e8re","text":""},{"location":"chimie/solution/calcul/#calcul-dune-concentration-molaire-et-massique","title":"\ud83d\udfe1 Calcul d'une concentration molaire et massique","text":""},{"location":"chimie/solution/calcul/#calcul-dune-concentration-apres-dilution","title":"\ud83d\udfe1 Calcul d'une concentration apr\u00e8s dilution","text":""},{"location":"chimie/solution/calcul/#masse-volumique","title":"\ud83d\udfe1 Masse volumique","text":""},{"location":"chimie/solution/calcul/#relation-quantite-de-matiere-et-masse-volumique","title":"\ud83d\udfe1 Relation quantit\u00e9 de mati\u00e8re et masse volumique","text":""},{"location":"chimie/solution/calcul/#relation-quantite-de-matiere-concentration-et-masse-volumique","title":"\ud83d\udfe1 Relation quantit\u00e9 de mati\u00e8re, concentration et masse volumique","text":""},{"location":"chimie/solution/calcul/#volume-molaire-dun-gaz","title":"\ud83d\udfe1 Volume molaire d'un gaz","text":""},{"location":"chimie/solution/calcul/#relation-quantite-de-matiere-et-volume","title":"\ud83d\udfe1 Relation quantit\u00e9 de mati\u00e8re et volume","text":""},{"location":"chimie/solution/dosage/","title":"Dosages","text":""},{"location":"chimie/solution/dosage/#les-dosages-en-chimie","title":"Les dosages en chimie","text":""},{"location":"chimie/solution/dosage/#dosage-par-etalonnage","title":"Dosage par \u00e9talonnage","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfae"},{"location":"chimie/solution/dosage/#les-bases-du-dosage-par-etalonnage","title":"\ud83d\udfe2 Les bases du dosage par \u00e9talonnage","text":""},{"location":"chimie/solution/dosage/#letalonnage-pour-les-pros","title":"\ud83d\udfe1 L'\u00e9talonnage pour les pros","text":""},{"location":"chimie/solution/dosage/#couleur-et-absorbance-dune-solution","title":"\ud83d\udfe1 Couleur et absorbance d'une solution","text":""},{"location":"chimie/solution/dosage/#quelle-est-la-couleur-dune-solution","title":"\ud83d\udfe1 Quelle est la couleur d'une solution ?","text":""},{"location":"chimie/solution/dosage/#absorption-et-concentration-loi-de-beer-lambert","title":"\ud83d\udfe1 Absorption et concentration : loi de Beer-Lambert","text":""},{"location":"chimie/solution/dosage/#les-dosages-par-titrage","title":"Les dosages par titrage","text":""},{"location":"chimie/solution/dosage/#titrage-par-colorimetrie","title":"Titrage par colorim\u00e9trie","text":""},{"location":"chimie/solution/dosage/#le-titrage-colorimetrique","title":"\ud83d\udfe1 Le titrage colorim\u00e9trique","text":""},{"location":"chimie/solution/dosage/#lequivalence-du-titrage","title":"\ud83d\udfe1 L'\u00e9quivalence du titrage","text":""},{"location":"chimie/solution/dosage/#absorbance-et-dosage-par-etalonnage","title":"\ud83d\udd34 Absorbance et dosage par \u00e9talonnage","text":""},{"location":"chimie/solution/dosage/#absorbance-et-couleur-dune-solution","title":"\ud83d\udd34 Absorbance et couleur d'une solution","text":""},{"location":"chimie/solution/dosage/#titrage-conductimetrique","title":"Titrage conductim\u00e9trique","text":""},{"location":"chimie/solution/dosage/#fiche-de-revision-sur-les-titrages","title":"\ud83d\udd34 Fiche de r\u00e9vision sur les titrages","text":""},{"location":"chimie/solution/dosage/#schema-dun-montage-de-titrage","title":"\ud83d\udd34 Sch\u00e9ma d'un montage de titrage","text":""},{"location":"chimie/solution/dosage/#dosage-conductimetrique-et-loi-de-kohlraush","title":"\ud83d\udd34 Dosage conductim\u00e9trique et loi de Kohlraush","text":""},{"location":"chimie/solution/dosage/#justifier-lallure-dune-courbe","title":"\ud83d\udd34 Justifier l'allure d'une courbe","text":""},{"location":"chimie/solution/dosage/#exploiter-la-courbe-dun-titrage-conductimetrique","title":"\ud83d\udd34 Exploiter la courbe d'un titrage conductim\u00e9trique","text":""},{"location":"chimie/solution/dosage/#titrage-phmetrique","title":"Titrage pHm\u00e9trique","text":""},{"location":"chimie/solution/dosage/#le-titrage-phmetrique","title":"\ud83d\udd34 Le titrage pHm\u00e9trique","text":""},{"location":"chimie/solution/dosage/#choisir-un-indicateur-colore","title":"\ud83d\udd34 Choisir un indicateur color\u00e9","text":""},{"location":"chimie/solution/realisation/","title":"R\u00e9aliser des solutions","text":""},{"location":"chimie/solution/realisation/#comment-realiser-une-solution","title":"Comment r\u00e9aliser une solution?","text":""},{"location":"chimie/solution/realisation/#par-dissolution","title":"Par dissolution","text":""},{"location":"chimie/solution/realisation/#quest-ce-quune-dissolution","title":"\ud83d\udfe2  Qu'est-ce qu'une dissolution ?","text":""},{"location":"chimie/solution/realisation/#calcul-de-la-masse-a-prelever","title":"\ud83d\udfe2 Calcul de la masse \u00e0 pr\u00e9lever","text":""},{"location":"chimie/solution/realisation/#par-dillution","title":"Par dillution","text":""},{"location":"chimie/solution/realisation/#volume-de-solution-mere","title":"\ud83d\udfe2 Volume de solution m\u00e8re","text":""},{"location":"chimie/solution/realisation/#quel-volume-de-solution-mere-prelever","title":"\ud83d\udfe2 Quel volume de solution m\u00e8re pr\u00e9lever","text":""},{"location":"chimie/solution/realisation/#solutions-concentrations-et-dilutions","title":"\ud83d\udfe1 Solutions, concentrations et dilutions","text":""},{"location":"chimie/solution/realisation/#calcul-dune-concentration-apres-dilution","title":"\ud83d\udfe1 Calcul d'une concentration apr\u00e8s dilution","text":""},{"location":"chimie/solution/realisation/#protocole-de-dilution","title":"\ud83d\udd34 Protocole de dilution","text":""},{"location":"drumxp/elec/","title":"\u00c9lectronique","text":""},{"location":"drumxp/elec/#electronique","title":"\u00c9lectronique","text":""},{"location":"drumxp/elec/#microcontroleurs","title":"Microcontroleurs","text":""},{"location":"drumxp/elec/#arduino-uno-nano-pro-micro","title":"Arduino Uno / Nano / Pro Micro","text":""},{"location":"drumxp/elec/#samd21","title":"SAMD21","text":""},{"location":"drumxp/elec/#blackpill","title":"Blackpill","text":""},{"location":"drumxp/elec/#rp2040","title":"RP2040","text":""},{"location":"drumxp/elec/#esp32","title":"ESP32","text":""},{"location":"drumxp/elec/#multiplexeurs","title":"Multiplexeurs","text":"<p>CD74HC4067</p>"},{"location":"drumxp/elec/#capteurs-piezo","title":"Capteurs piezo","text":""},{"location":"drumxp/elec/#capteur-de-position","title":"Capteur de position","text":"<p>TCRT5000</p>"},{"location":"drumxp/elec/#ecrans","title":"Ecrans","text":""},{"location":"drumxp/elec/#lcd-shield","title":"LCD shield","text":""},{"location":"drumxp/elec/#ssd1306","title":"SSD1306","text":""},{"location":"drumxp/elec/#boutons","title":"Boutons","text":""},{"location":"drumxp/elec/#5-en-un","title":"5 en un","text":""},{"location":"drumxp/intro/","title":"DrumXP","text":""},{"location":"drumxp/intro/#drumxp","title":"DrumXP","text":"<p>DrumpXP est un projet de fabrication de batterie \u00e9lectronique.</p> <p>Des capteurs piezo (sensibles aux vibrations) sont connect\u00e9s \u00e0 un microcontroleurs qui en traite le signal pour envoyer des commandes MIDI \u00e0 un ordinateur. Un logiciel d'\u00e9mulation de batterie peut alors transformer les signaux MIDI en musique.</p> <pre><code>graph LR\n  A[Piezo]--&gt;|analogique| B{Microcontroleur};\n  B --&gt;|num\u00e9rique| C{PC};\n  C --&gt;|analogique| D{Enceintes};\n  D --&gt;|son| E[Oreilles];\n  E --&gt;|chimique| F[Youpi !];\n  F --&gt;|m\u00e9canique| A;</code></pre>"},{"location":"drumxp/intro/#ce-que-lon-fait","title":"Ce que l'on fait","text":"<ul> <li> <p>Familiarisation avec l'environnement arduino et la librairie Hello-Drum</p> </li> <li> <p>D\u00e9monter le drumpad foutu pour en remplacer l'\u00e9lectronique avec un prototype fait maison.</p> </li> </ul>"},{"location":"drumxp/intro/#en-cours","title":"En cours","text":"<ul> <li> <p>Remplacer les 2 piezos du drumpad qui sont foutus.</p> </li> <li> <p>Concevoir une p\u00e9dales de charleston (hi-hat) :</p> </li> <li> <p>Pour le charley, le capteur utilis\u00e9 est le TCRT5000. Voici comment le connecter \u00e0 l'arduino :    </p> </li> <li>Pour le code adapter celui de cet example en n'utilisant que la p\u00e9dale dans un premier temps.</li> <li>Voir l'example de Ryo Kosaka ici</li> <li>Ensuite, on n'aura plus qu'\u00e0 fabriquer une p\u00e9dale !</li> </ul>"},{"location":"drumxp/logiciels/","title":"Logiciels","text":""},{"location":"drumxp/logiciels/#logiciels","title":"Logiciels","text":""},{"location":"drumxp/logiciels/#patchboxos","title":"PatchboxOS","text":""},{"location":"drumxp/logiciels/#carte-son-haute-definition-i2s","title":"Carte son haute d\u00e9finition i2s","text":""},{"location":"drumxp/logiciels/#drumgizmo","title":"Drumgizmo","text":""},{"location":"drumxp/logiciels/#jack","title":"Jack","text":""},{"location":"drumxp/logiciels/#bluez-avec-ble-midi","title":"Bluez avec BLE-MIDI","text":""},{"location":"drumxp/matos/","title":"Matos","text":""},{"location":"drumxp/matos/#structure-de-la-batterie","title":"Structure de la batterie","text":""},{"location":"drumxp/matos/#pads","title":"Pads","text":""},{"location":"drumxp/matos/#simples","title":"Simples","text":""},{"location":"drumxp/matos/#peaux-maillees-double-zones","title":"Peaux maill\u00e9es (double zones)","text":""},{"location":"drumxp/matos/#grosse-caisse","title":"Grosse caisse","text":""},{"location":"drumxp/matos/#cymbales","title":"Cymbales","text":""},{"location":"drumxp/matos/#charleystone","title":"Charleystone","text":""},{"location":"drumxp/progra/","title":"Programmation de DrumXP","text":""},{"location":"drumxp/progra/#programmation-de-drumxp","title":"Programmation de DrumXP","text":"<p>Sur cette page, toutes les infos n\u00e9cessaires pour programmer nos microcontrolleurs.</p>"},{"location":"drumxp/progra/#environnement-de-developpement","title":"Environnement de d\u00e9veloppement","text":"<p>L'environnement de d\u00e9veloppement (IDE) le plus simple d'utilisation dans un premier temps sera l'IDE Arduino. Pour une utilisation avanc\u00e9e avec un IDE plus polyvalent, on pourra utiliser VS Code (ou sa version libre VSCodium)install\u00e9 sur Linux, dans lequel on installera l'extension PlatformIO qui permet de programm\u00e9 de nombreux types de microprocesseurs.</p>"},{"location":"drumxp/progra/#installation-des-ide","title":"Installation des IDE","text":"ArduinoVScodeVSCodium <ul> <li>T\u00e9l\u00e9charger la derni\u00e8re version ZIP de l'IDE pour Linux ici</li> <li>D\u00e9compresser l'archive dans le dossier de votre choix.</li> <li>Pour lancer l'application, double-cliquer sur le fichier arduino-ide</li> </ul> <pre><code>wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -\nsudo apt-add-repository 'deb https://packages.microsoft.com/repos/code stable main'\nsudo apt update\nsudo apt install code\n</code></pre> <pre><code>wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg | sudo apt-key add -\nsudo apt-add-repository 'deb https://paulcarroty.gitlab.io/vscodium-deb-rpm-repo/debs/ vscodium main'\nsudo apt update\nsudo apt install codium\n</code></pre> Une fois install\u00e9, il vous demandera de choisir votre th\u00e8me pr\u00e9f\u00e9r\u00e9 et si vous souhaitez installer le pack de langue Fran\u00e7ais."},{"location":"drumxp/progra/#installation-de-platformio-sur-vscodevscodium","title":"Installation de PlatformIO sur VScode/VScodium","text":"VSCodeVSCodium <p>L'installation de platformio se fait simplement depuis la librairie du menu Extension.</p> <ul> <li> <p>T\u00e9l\u00e9charger cpptools-linux.vsix : https://github.com/microsoft/vscode-cpptools/releases/download/1.3.1/cpptools-linux.vsix</p> </li> <li> <p>Installer cpptools-linux.vsix dans vscodium Dans le menu extensions / installer \u00e0 partir de vsix.</p> </li> <li> <p>T\u00e9l\u00e9charger le vsix de PlatformIO : https://marketplace.visualstudio.com/items?itemName=platformio.platformio-ide (download dans la colonne de droite)</p> </li> <li> <p>Installer PlatformIO  dans vscodium Dans le menu extensions / installer \u00e0 partir de vsix.</p> </li> <li> <p>Ajouter les r\u00e8gles udev pour la reconnaissance de nos p\u00e9riph\u00e9riques USB. </p><pre><code>curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/master/scripts/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules\n</code></pre> </li> <li> <p>Ajouter notre utilisateur au groupe ayant droit \u00e0 utiliser les devices </p><pre><code>sudo usermod -a -G uucp $USER\n</code></pre> </li> </ul>"},{"location":"drumxp/progra/#installation-de-bibliotheques","title":"Installation de biblioth\u00e8ques","text":"IDE ArduinoPlatformIO <p>Pour installer des librairies sur l'IDE Arduino 2.0, cliquer sur l'icone avec des livres dans le menu de gauche puis rechercher la biblioth\u00e8que \u00e0 installer, par exemple Hellodrum.</p> <ul> <li>Cliquer sur l'icone de PlatformIO puis sur l'icone Librairies</li> <li>Rechercher une biblioth\u00e8que, par exemple Hellodrum, puis l'ajouter au projet de votre choix.</li> </ul>"},{"location":"drumxp/progra/#bibliotheques-utiles","title":"Biblioth\u00e8ques utiles","text":"<p>La principale biblioth\u00e8que que nous utiliserons est Hellodrum, d\u00e9velopp\u00e9es par Ryo Kosaka, mais qui n'\u00e9volue plus trop depuis deux ans... Davy a cr\u00e9\u00e9 un fork pour pouvoir faire \u00e9voluer la biblioth\u00e8que ici.</p> <p>Une autre biblioth\u00e8que incontournable est MIDI Library qui nous permettra d'envoyer des messages musicaux au format MIDI. </p> <p>D'autres biblioth\u00e8ques peuvent \u00eatre utiles selon le mat\u00e9riel utilis\u00e9, par exemple : </p> <ul> <li> <p>USBMIDI pour les cartes qui supportent le MIDI via USB (SAMD21, ESP32-S2...)</p> </li> <li> <p>BLEMIDI pour celles qui supporte le bluetooth (ESP-32)</p> </li> <li> <p>Adafruit TinyUSB Library pour le MIDI via USB avec le Raspberry Pico (RP2040)</p> </li> <li> <p>FlashStorage_SAMD pour pouvoir mettre en m\u00e9moire des donn\u00e9es sur SAMD21 (EEPROM)</p> </li> </ul>"},{"location":"drumxp/progra/#-u8g2lib-pour-utiliser-des-ecrans-ssd1306","title":"- U8g2lib pour utiliser des \u00e9crans SSD1306.","text":"<p>U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=/SCL, / data=/SDA, / reset=*/U8X8_PIN_NONE);</p>"},{"location":"drumxp/progra/#installation-des-cartes-boards","title":"Installation des cartes (boards)","text":"ArduinoPlatformIO <p>Cliquer sur l'icone Gestionnaire de cartes dans le menu de gauche, puis rechercher et installer les cartes qui vous int\u00e9ressent.</p> <p>Cliquer sur l'icone PlatformIO \u00e0 gauche, puis aller dans le menu Boards pour rechercher des cartes dans la base de donn\u00e9es. Contrairement \u00e0 Arduino, les cartes ne s'installent pas mais se renseignent dans le fichier plaformio.ini pr\u00e9sent \u00e0 la cr\u00e9ation d'un nouveau projet (voir apr\u00e8s).</p>"},{"location":"drumxp/progra/#creation-dun-nouveau-projet","title":"Cr\u00e9ation d'un nouveau projet","text":"ArduinoPlatformio <p>A chaque projet correspond un fichier .ino. A l'ouverture d'arduino, un nouveau fichier est cr\u00e9er, \u00e0 vous de choisir son nom et emplacement \u00e0 sa sauvegarde.</p> <p>Pour cr\u00e9er un nouveau projet, se rendre dans le menu Project de PlatformIO, puis Create new project. Il nous est alors demand\u00e9 de renseigner le nom de notre projet et la board qui correspond. Ce param\u00e8tre est ensuite modifiable dans le fichier platformio.ini pr\u00e9sent \u00e0 la racine du projet.</p>"},{"location":"drumxp/progra/#a-surveiller-edrumulus","title":"A surveiller : edrumulus","text":""},{"location":"drumxp/progra/#utilisation-de-hellodrum","title":"Utilisation de Hellodrum","text":""},{"location":"elec/condensateur/","title":"\ud83d\udd34 Les Condensateurs C","text":""},{"location":"elec/condensateur/#consensateurs-electroniques-et-circuits-rc-term","title":"Consensateurs \u00e9lectroniques et circuits RC (Term)","text":""},{"location":"elec/condensateur/#le-condensateur","title":"Le condensateur","text":""},{"location":"elec/condensateur/#les-circuits-rc","title":"Les circuits RC","text":""},{"location":"elec/histoire/","title":"Histoire","text":""},{"location":"elec/histoire/#histoire-de-lelectricite","title":"Histoire de l'\u00e9lectricit\u00e9","text":"<p>Notre vision de l'\u00e9lectricit\u00e9 a beaucoup \u00e9volu\u00e9 depuis l'antiquit\u00e9 (eletron signifiait ambre en grec). I est int\u00e9ressant de voir comment de nombreuses d\u00e9couvertes nous ont amen\u00e9s \u00e0 l'\u00e9tat de nos connaissances actuelles. Il en a pour tous les go\u00fbts, de la version courtes \u00e0 la s\u00e9rie !</p>"},{"location":"elec/histoire/#lhistoire-en-bref-13-minutes","title":"L'histoire en bref (13 minutes)","text":""},{"location":"elec/histoire/#la-grande-histoire-de-lelectricite-55-minutes","title":"La grande histoire de l'\u00e9lectricit\u00e9 (55 minutes)","text":""},{"location":"elec/histoire/#lhistoire-de-lelectricite-en-3-episodes","title":"L'histoire de l'\u00e9lectricit\u00e9 en 3 \u00e9pisodes","text":""},{"location":"elec/histoire/#episode-1-lage-des-revolutions","title":"Episode 1 : L'\u00e2ge des r\u00e9volutions","text":""},{"location":"elec/histoire/#episode-2-lage-des-inventions","title":"Episode 2 : L'\u00e2ge des Inventions","text":""},{"location":"elec/histoire/#episode-3-letincelle","title":"Episode 3 : L\u2019\u00e9tincelle","text":""},{"location":"elec/intensite/","title":"Le Courrant I","text":""},{"location":"elec/intensite/#lintensite-du-courrant-electrique","title":"L'intensit\u00e9 du courrant \u00e9lectrique","text":""},{"location":"elec/intensite/#sens-du-courrant-des-electons-vs-sens-conventionnel","title":"Sens du courrant des \u00e9lectons vs sens conventionnel","text":""},{"location":"elec/intensite/#intensite-dans-un-circuit-en-serie","title":"Intensit\u00e9 dans un circuit en s\u00e9rie","text":""},{"location":"elec/intensite/#intensite-dans-un-circuit-en-derivation","title":"Intensit\u00e9 dans un circuit en d\u00e9rivation","text":""},{"location":"elec/intensite/#mesure-de-lintensite-en-ampere-a","title":"Mesure de l'intensit\u00e9 (en Amp\u00e8re - A)","text":"<p>Note</p> <p></p>"},{"location":"elec/intro/","title":"Introduction","text":""},{"location":"elec/intro/#introduction","title":"Introduction","text":""},{"location":"elec/intro/#lesprit-sorcier-17min","title":"L'esprit sorcier (17min)","text":""},{"location":"elec/intro/#lelectricite-cest-pas-sorcier-26min","title":"L'\u00e9lectricit\u00e9, c'est pas sorcier (26min)","text":""},{"location":"elec/puissance/","title":"Puissance P","text":""},{"location":"elec/puissance/#puissance-et-rendement-dune-conversion-denergie","title":"Puissance et rendement d'une conversion d'\u00e9nergie","text":""},{"location":"elec/puissance/#puissance-electrique-p-u-x-i","title":"Puissance \u00e9lectrique : P = U x I","text":""},{"location":"elec/puissance/#rendement-dune-conversion-energetique","title":"Rendement d'une conversion \u00e9nerg\u00e9tique","text":""},{"location":"elec/resistance/","title":"La R\u00e9sistance R","text":""},{"location":"elec/resistance/#resistance-electrique","title":"R\u00e9sistance \u00e9lectrique","text":""},{"location":"elec/resistance/#role-de-la-resistance-dans-un-circuit","title":"Role de la r\u00e9sistance dans un circuit","text":""},{"location":"elec/resistance/#mesure-dune-resistance-electrique","title":"Mesure d'une r\u00e9sistance \u00e9lectrique","text":""},{"location":"elec/resistance/#la-loi-dohm-u-r-x-i","title":"La loi d'ohm : U = R x I","text":""},{"location":"elec/resistance/#les-resistance-dans-les-circuits-en-serie","title":"Les r\u00e9sistance dans les circuits en s\u00e9rie","text":""},{"location":"elec/sujets_bac_elec/","title":"Vers le bac","text":""},{"location":"elec/sujets_bac_elec/#vers-le-bac","title":"Vers le bac","text":"Sp\u00e9 Phy-Chim 1\u00e8reSp\u00e9 Phy-Chim TermTronc commun Term <ul> <li>Comparaison de deux appareils \u00e0 fondue</li> <li>Chauffage et eau chaude de la maison</li> <li>Centrale \u00e9lectrique de l\u2019Ouest Guyanais</li> <li>Aspects \u00e9nerg\u00e9tiques des ph\u00e9nom\u00e8nes \u00e9lectriques</li> <li>Photopile et d\u00e9veloppement durable</li> <li>Une \u00e9olienne \u00e0 la maison</li> <li>Solar Impulse 2, l\u2019avion solaire</li> <li>Qui peut griller une tranche de pain en p\u00e9dalant ?</li> </ul> <ul> <li>Un syst\u00e8me de d\u00e9tection de passager (5 points) -  - corrig\u00e9</li> <li>Mesure d'\u00e9paisseur (5 points) -  - corrig\u00e9</li> <li>Les supercondensateurs (5 points) -  - corrig\u00e9</li> <li>Un microacc\u00e9l\u00e9rom\u00e8tre capacitif (5 points) -  - corrig\u00e9</li> <li>D\u00e9fibrillateur cardiaque (5 points) - </li> <li>Un capteur capacitif (5 points) -  - corrig\u00e9</li> <li>Un sport traditionnel : le lancer de gerbe de paille (10 points) -  - corrig\u00e9</li> <li>Quelques utilisations du condensateur (10 points) -  - corrig\u00e9</li> <li>La mission Grace-FO (10 points) -  - corrig\u00e9</li> </ul> <ul> <li>L'agrivolta\u00efsme : </li> <li>Capteur photovolta\u00efque : </li> <li>Les impacts de la combustion sur l\u2019environnement et la sant\u00e9 :  - correction</li> <li>Confinement et atmosph\u00e8re :  - correction</li> <li>Les \u00e9oliennes et les chauves-souris : </li> <li>Energie \u2013 \u00c9olienne, un choix d\u2019avenir ? : </li> <li>Minimisation des pertes par effet Joule :  - correction</li> <li>Photosynth\u00e8se et transition \u00e9cologique : </li> <li>La solution hydrog\u00e8ne : </li> <li>Des sph\u00e8res g\u00e9antes immerg\u00e9es sous l\u2019eau: </li> <li>Transporter de l\u2019\u00e9nergie co\u00fbte de l\u2019\u00e9nergie ! :  - correction</li> </ul>"},{"location":"elec/tension/","title":"La Tension U","text":""},{"location":"elec/tension/#la-tension-electrique","title":"La tension \u00e9lectrique","text":""},{"location":"elec/tension/#tension-dans-un-circuit-en-serie","title":"Tension dans un circuit en s\u00e9rie","text":""},{"location":"elec/tension/#tension-dans-un-circuit-en-derivation","title":"Tension dans un circuit en d\u00e9rivation","text":""},{"location":"elec/tension/#mesure-dune-tension-electrique","title":"Mesure d'une tension \u00e9lectrique","text":"<p>Note</p> <p></p>"},{"location":"es/","title":"Enseignement scientifique","text":""},{"location":"es/#enseignement-scientifique","title":"Enseignement scientifique","text":""},{"location":"es/#premiere","title":"\ud83d\udfe1 Premi\u00e8re \ud83d\udfe1","text":"<p> \u2600\ufe0f Le Soleil \u2600\ufe0f   \ud83c\udf0d La Terre \ud83c\udf0d   \ud83d\udd0a Le Son \ud83d\udd0a </p>"},{"location":"es/#terminale","title":"\ud83d\udd34 Terminale \ud83d\udd34","text":"<p> \ud83c\udf26\ufe0f Le Climat \ud83c\udf26\ufe0f   \ud83d\udc3c La biodiversit\u00e9 \ud83d\udc3c   \u26a1 \u00c9lectricit\u00e9 \u26a1 </p>"},{"location":"es/biodiv/","title":"\ud83d\udc3c Biodiversit\u00e9 \ud83d\udd34","text":""},{"location":"es/biodiv/#biodiversite-evolution-demographie-et-ia","title":"Biodiversit\u00e9, \u00e9volution, d\u00e9mographie et IA","text":"La biodiversit\u00e9 et son \u00e9volution  Vid\u00e9os  Manuel en ligne  Animations  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>Principe de la m\u00e9thode de Capture/Marquage/Recapture (CMR)</p> <p></p> <p>Fluctuations d'\u00e9chantillonnage</p> <p></p> L\u2019\u00e9volution, une grille de lecture du monde  Vid\u00e9os  Manuel en ligne  Animations  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>Repr\u00e9sentation de De Finetti</p> <p>Bougez le point triangulaire noir pour modifier la r\u00e9partition (vert/rouge/bleu) des g\u00e9notypes AA, Aa et aa. Plus on se rapproche d'un sommet du triangle, plus on augmente la part du g\u00e9notype indiqu\u00e9 au sommet. En cochant la case \"R\u00e9partition g\u00e9n\u00e9ration suivante\" on a le point qui correspond \u00e0 la r\u00e9partition des trois g\u00e9notypes \u00e0 la g\u00e9n\u00e9ration suivante.  Manipulez et observez.</p> <p>NB. D'apr\u00e8s le th\u00e9or\u00e8me de Viviani, dans un triangle \u00e9quilat\u00e9ral la somme des distances d'un point int\u00e9rieur aux trois c\u00f4t\u00e9s est constante, \u00e9gale \u00e0 la hauteur du triangle (qui ici vaut 1).</p> <p></p> <p>Evolution de la fr\u00e9quence all\u00e9lique</p> <p></p> L\u2019\u00e9volution humaine  Vid\u00e9os  Manuel en ligne  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Les mod\u00e8les d\u00e9mographiques  Vid\u00e9os  Manuel en ligne  Animations  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>Evolution de la population du Japon de 1900 \u00e0 2010. Mod\u00e8le exponentiel</p> <p>En ajustant les positions des points A et B on r\u00e8gle l'intervalle de temps sur lequel on teste un mod\u00e8le exponentiel. La courbe rouge correspond au mod\u00e8le exponentiel (croissance g\u00e9om\u00e9trique) qui prend la population correspondant au premier point comme valeur initiale et celle correspondant au dernier point comme valeur finale. Les coordonn\u00e9es de ces points sont affich\u00e9es en bleu. L'\u00e9quation de la courbe est affich\u00e9e en rouge. A faire : Faire bouger les points A et B pour voir sur quel intervalle de temps un tel mod\u00e8le semble pertinent.</p> <p> </p> <p>Croissance exponentielle vs lin\u00e9aire </p> De l\u2019informatique \u00e0 l\u2019intelligence artificielle  Vid\u00e9os  Manuel en ligne  Animations  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>Sensibilit\u00e9, sp\u00e9cificit\u00e9, valeurs pr\u00e9dictives d'un test de d\u00e9pistage</p> <p>On donne des effectifs partiels pour une maladie et un test de d\u00e9pistage dans un certain \u00e9chantillon de la population. L'objectif de cet exercice est de compl\u00e9ter les effectifs dans ce tableau puis de d\u00e9terminer pour ce test :</p> <ul> <li>sa sensibilit\u00e9 : probabilit\u00e9 que le test soit positif sachant que la personne est malade.</li> <li>sa sp\u00e9cificit\u00e9  : probabilit\u00e9 que le test soit n\u00e9gatif sachant que la personne n'est pas malade.</li> </ul> <p>En supposant que l'\u00e9chantillon est repr\u00e9sentatif de la population et donc que la pr\u00e9valence de la maladie correspond \u00e0 celle dans toute la population, en d\u00e9duire :</p> <ul> <li>la valeur pr\u00e9dictive positive : probabilit\u00e9 qu'une personne ayant un test positif soit malade.</li> <li>la valeur pr\u00e9dictive n\u00e9gative : probabilit\u00e9 qu'une personne ayant un test n\u00e9gatif ne soit pas malade.</li> </ul> <p>Les champs permettent d'enregistrer vos r\u00e9ponses (on peut y noter une op\u00e9ration). En appuyant sur \"V\u00e9rifer\" les r\u00e9ponses sont valid\u00e9es, compar\u00e9es aux bonnes valeurs et colori\u00e9es en vert si juste, ou rouge sinon. \"Solution\" fait appara\u00eetre les r\u00e9ponses et calculs.</p> <p>L\u00e9gende :</p> <ul> <li>vp : Vrai Positif</li> <li>fp : Faux  Positif</li> <li>vn : Vrai N\u00e9gatif</li> <li>fn : Faux N\u00e9gatif</li> </ul> <p> </p> Sujet BAC <p> : Sujets  : Corrig\u00e9s  : Indices  </p> Autotest de d\u00e9pistage du VIH :  <p>Notions : Test de d\u00e9pistage, probabilit\u00e9, fr\u00e9quence, tableau de contingence, pourcentages. Comp\u00e9tences : calculer une fr\u00e9quence, compl\u00e9ter un tableau de contingence, appliquer un pourcentage.  </p> D\u00e9pistage et \u00e9volution du VIH -  <p>Notions : Taux de mutation des virus, vaccinnation, test de d\u00e9pistage, probabilit\u00e9, tableau de contingence, pr\u00e9valence, pourcentages. Comp\u00e9tences : Appliquer une r\u00e8gle de proportionnalit\u00e9 \u00e0 partir de la l\u00e9gende d'un graphique, discuter l'efficacit\u00e9 d'un vaccin en fonction du taux de mutation d'un virus, calculer une pr\u00e9valence \u00e0 partir d'un tableau de contingence, compl\u00e9ter un tableau de contingence.</p> Notre parent, le \u00ab Hobbit \u00bb... :  <p>Notions : Evolution, lien de parent\u00e9, caract\u00e9ristiques anatomiques des hominid\u00e9s, arbre phylog\u00e9nique. Comp\u00e9tences : Extraire des informations de documents pour r\u00e9diger des paragraphes argument\u00e9s.   </p> Le crapaud sonneur \u00e0 ventre jaune :  <p>Notions : M\u00e9thode de Capture/Marquage/Recapture, probabilit\u00e9, fr\u00e9quence, abondance, intervale de confiance, pressions sur la biodiversit\u00e9, mesure de protection/conservation. Comp\u00e9tences : Expliquer la CMR, calculer fr\u00e9quences et abondance, d\u00e9terminer un intervale de confiance, \u00e9mettre des hypoth\u00e8ses sur l'\u00e9volution de l'abondance d'une esp\u00e8ce, proposer des mesures de protection.   </p> Invasion de sangliers \u00e0 Fontainebleau :  <p>Notions : M\u00e9thode de Capture/Marquage/Recapture, probabilit\u00e9, fr\u00e9quence, abondance, intervale de confiance, pressions sur la biodiversit\u00e9, mesure de protection/conservation.  Comp\u00e9tences : Expliquer la CMR, calculer fr\u00e9quences et abondance, \u00e9mettre des hypoth\u00e8ses sur l'\u00e9volution de l'abondance d'une esp\u00e8ce.</p> Des moustiques r\u00e9sistants aux insecticides :  <p>Notions : G\u00e9n\u00e9tique, all\u00e8le, g\u00e8ne, enzyme, mod\u00e8le Hardy-Weinberg, fr\u00e9quence all\u00e9lique, g\u00e9notypique, force \u00e9volutive. Comp\u00e9tences : Expliquer les facteurs g\u00e9n\u00e9tiques de la r\u00e9sistance \u00e0 un insecticide \u00e0 l'aide de documents, calculer des fr\u00e9quences all\u00e9liques et g\u00e9notypiques, comparer avec le mod\u00e8le Hardy-Weinberg, lister diff\u00e9rents facteurs de la force \u00e9volutive.</p> La dengue, une maladie transmise par les moustiques :  <p>Notions : Test de d\u00e9pistage, probabilit\u00e9, fr\u00e9quence, tableau de contingence, pourcentages, intervale de confiance. Comp\u00e9tences : calculer une fr\u00e9quence, compl\u00e9ter un tableau de contingence, comparer des donn\u00e9es en tenant compte de leur intervale de confiance.</p> Population de la France m\u00e9tropolitaine de 1946 \u00e0 2050 :  <p>Notions : D\u00e9mographie, tableau de donn\u00e9e et repr\u00e9sentation graphique, ajustement affine, \u00e9quation de droite, rang d'une suite arithm\u00e9tique. Comp\u00e9tences : identifier la repr\u00e9sentation graphique d'une droite d'ajustement affine, d\u00e9terminer le rang d'un terme d'une suite \u00e0 partir d'un tableau de donn\u00e9es, d\u00e9terminer le terme d'un rang donn\u00e9, comparer un mod\u00e8le avec des valeurs r\u00e9elles, compl\u00e9ter un programme Python, r\u00e9soudre une \u00e9quation affine.</p> \u00c9tude d\u00e9mographique de la population en Afrique du Sud :  <p>Notions : D\u00e9mographie, suite g\u00e9om\u00e9trique, rang d'une suite, logarithme n\u00e9p\u00e9rien, taux d'accoissement . Comp\u00e9tences : reconnaitre les conditions d'une suite g\u00e9om\u00e9trique, d\u00e9terminer le terme d'un rang donn\u00e9, comparer un mod\u00e8le avec des valeurs r\u00e9elles, r\u00e9soudre une \u00e9quation un utilisant de logarithme n\u00e9p\u00e9rien, calculer un taux d'accroissement, expliquer l'\u00e9volution du taux de mortalit\u00e9 \u00e0 l'aide de documents.  </p> Les cons\u00e9quences de la d\u00e9forestation \u00e0 Born\u00e9o sur les populations d\u2019orangs-outans - \" <p>Notions : Superficie, pourcentage, fr\u00e9quence all\u00e9lique, d\u00e9rive g\u00e9n\u00e9tique, fragmentation de l'habitat, mesure de protection.  Comp\u00e9tences : Calculer une superficie, un pourcentage, relier fr\u00e9quences all\u00e9liques, taille de la population et d\u00e9rive g\u00e9n\u00e9tique, expliquer en quoi la fragmentation de l'habitat r\u00e9duit la diversit\u00e9 g\u00e9n\u00e9tique, et comment la pr\u00e9server.  </p> Le parc de Yellowstone : un laboratoire grandeur nature pour l\u2019\u00e9tude des populations :  <p>Notions : Graphiques en barres, suite arythm\u00e9tique, g\u00e9om\u00e9trique, g\u00e9n\u00e9tique, g\u00e9notype, all\u00e8le, mod\u00e8le Hardy-Weinberg.  Comp\u00e9tences : Reconnaitre le type de suite \u00e0 partir d'un graphique, formuler une hypoth\u00e8se sur la diminution d'une population, analyser des fr\u00e9quences g\u00e9notypiques, calculer des fr\u00e9quences all\u00e9liques et g\u00e9notypique, comparer des fr\u00e9quences au mod\u00e8le Hardy-Weinberg.  </p> Les cons\u00e9quences de la g\u00e9ographie naturelle de l\u2019\u00eele de Born\u00e9o et de la d\u00e9forestation sur les populations d\u2019orangs-outans :  <p>Notions : Superficie, pourcentage, fr\u00e9quence all\u00e9lique, d\u00e9rive g\u00e9n\u00e9tique, fragmentation de l'habitat, mesure de protection.  Comp\u00e9tences : Calculer une superficie, un pourcentage, relier fr\u00e9quences all\u00e9liques, taille de la population et d\u00e9rive g\u00e9n\u00e9tique, expliquer en quoi la fragmentation de l'habitat r\u00e9duit la diversit\u00e9 g\u00e9n\u00e9tique, et comment la pr\u00e9server.  </p> Plus au programme <ul> <li>L\u2019\u00e9volution humaine :  </li> <li>Un service de streaming musical : </li> <li>Les \u00e9oliennes et les chauves-souris :  </li> <li>La lutte contre un ravageur des cultures : </li> </ul>"},{"location":"es/climat/","title":"\ud83c\udf26\ufe0f Climat \ud83d\udd34","text":""},{"location":"es/climat/#les-enjeux-du-climat","title":"Les enjeux du climat","text":"L'atmosph\u00e8re terrestre et la vie  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> La complexit\u00e9 du syst\u00e8me climatique  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Le climat du futur  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> \u00c9nergie, d\u00e9veloppement et futur climatique  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Sujets BAC <p> : Sujets  : Corrig\u00e9s  : Indices  </p> L\u2019atmosph\u00e8re de la Terre -  <p>Notions : \u00e9volution de la composition atmosph\u00e9rique, degr\u00e9 Kelvin, diagramme de phase de l'eau, \u00e9quation de r\u00e9action, oxydation du Fer. Comp\u00e9tences : conna\u00eetre la composition atmosph\u00e9rique actuelle, savoir lire un diagramme de phase, \u00e9quilibrer une \u00e9quation de r\u00e9action, conna\u00eetre les date principales de l'histoire de notre atmosph\u00e8re.  </p> Confinement et atmosph\u00e8re -  <p>Notions : Emission de C02, cycle du carbone (r\u00e9servoirs et flux), combustibles fossiles, ressource renouvelable, mole, \u00e9quation de r\u00e9action.  Comp\u00e9tences : Lecture de graphique, identifier les r\u00e9servoirs de carbone et les flux de nature anthropique sur un sch\u00e9ma, faire le bilan des flux, expliquer en quoi les ressources fossiles sont non-renouvelables, calculer une masse de CO2 produite, lister diff\u00e9rentes ressources fossiles.</p> For\u00e7age radiatif et cons\u00e9quences -  <p>Notions : for\u00e7age radiatif (cause et effets), puissance surfacique (W/m2), dilatation des oc\u00e9ans et cons\u00e9quences, alb\u00e9do, fonte des glaces, r\u00e9troaction positive. Comp\u00e9tences D\u00e9finir le for\u00e7age radiatif et en expliquer les causes et cons\u00e9quences, calculer l'\u00e9l\u00e9vation des oc\u00e9ans et en donner les cons\u00e9quences, expliquer les cons\u00e9quences de la fonte des glaces en terme d'alb\u00e9do.   </p> L\u2019histoire du dioxyg\u00e8ne terrestre -  <p>Notions : Photosynth\u00e8se et respiration, cyanobact\u00e9ries, histoire de l'atmosph\u00e8re terrestre, \u00e9quation de r\u00e9action, fer ruban\u00e9s et pal\u00e9osols, couche d'ozone. Comp\u00e9tences : Lecture de graphique, expliquer l'apparition du dioxyg\u00e8ne dans les oc\u00e9ans puis dans l'atmosph\u00e8re, \u00e9quilibrer une \u00e9quation de r\u00e9action, expliquer la formation des fers ruban\u00e9s et pal\u00e9osols, expliquer l'int\u00e9ret de la couche d'ozone pour le d\u00e9veloppement de la vie.  </p> La consommation d\u2019\u00e9nergie en France -  <p>Notions : Consommation d'\u00e9nergie, stocks et flux, lecture de graphique, empreinte Carbone. Comp\u00e9tences: Calculer un pourcentage, analyser un graphique, convertir kiloWatt en Joule avec tableau de proportionnalit\u00e9, lister des moyens de r\u00e9duire notre empreinte Carbone.  </p> Photosynth\u00e8se et transition \u00e9cologique -  <p>Notions : Panneaux solaire, surface, puissance surfacique, \u00e9nergie renouvelable, transition \u00e9cologique, mix \u00e9nerg\u00e9tique. Comp\u00e9tences : Analyse de document, appliquer une r\u00e8gle de proportionnalit\u00e9.  </p> L\u2019Arctique, espace fragile et convoit\u00e9 -  <p>Notions : Alb\u00e9do, fonte des glaces, diff\u00e9rence banquise et calotte glaciaire, thermocline. Comp\u00e9tences : Anlyse de documents, calcul de l'\u00e9l\u00e9vation des oc\u00e9ans.  </p> R\u00e9chauffement climatique et neige past\u00e8que -  <p>Notions : Anomalies de temp\u00e9rature, enneigement des glaciers, alb\u00e9do, r\u00e9troaction positive. Comp\u00e9tences : Analyse de documents, calcul de l'\u00e9l\u00e9vation du niveau des oc\u00e9ans.  </p> L'\u00e9mission de gaz \u00e0 effet de serre en France -  <p>Notions : Objectifs de r\u00e9duction des \u00e9missions de gaz \u00e0 effet de serre, for\u00e7age radiatif, augmentation de la temp\u00e9rature, mole, transport. Comp\u00e9tences : Lecture de graphique, calcul de masse de CO2 \u00e9mis par proportionnalit\u00e9, calcul de quantit\u00e9 de mati\u00e8re, d\u00e9crire des solution et limites pour enjeux du transport.  </p> R\u00e9chauffement climatique et p\u00eache au carrelet -  <p>Notions : Origine des gaz \u00e0 effet de serre, combustibles fossiles, effet de serre, for\u00e7age radiatif, \u00e9l\u00e9vation de la temp\u00e9rature, dilatation des oc\u00e9ans, pr\u00e9dictions. Comp\u00e9tences : \u00c9crire des paragraphes argument\u00e9s, calculer l'\u00e9l\u00e9vation du niveau des oc\u00e9ans, lecture de graphique, expliquer les facteurs d'\u00e9l\u00e9vation du niveau des oc\u00e9ans.  </p> L\u2019empreinte carbone des appareils \u00e9lectrom\u00e9nagers -  <p>Notions : Empreinte carbone, recyclage, r\u00e9paration. Comp\u00e9tences D\u00e9finir des notions, lecture de graphique, lecture de tableau, calcul de pourcentages, taux de variation, lecture de documents textuels, r\u00e9daction de paragraphes argument\u00e9s.  </p> Effondrement des montagnes, biodiversit\u00e9 et climat -  <p>Notions : M\u00e9t\u00e9o et climat, fonte des glaciers, effet de serre, rayonnement infra-rouge, diminution de la pression partielle en CO2 avec l'altitude.   Comp\u00e9tences : Lecture de graphiques, r\u00e9daction de paragraphes argument\u00e9s.  </p> Le protoxyde d\u2019azote et le r\u00e9chauffement climatique -  <p>Notions : Rayonnement infrarouge, \u00e9mission de gaz \u00e0 effet de serre, \u00e9l\u00e9vation de la temp\u00e9rature, spectre d'absorption, longueur d'onde. Comp\u00e9tences : Analyse d'un spectre d'absorption, lecture de graphique, conversion de masse, calcul de pourcentage, analyse de document, paragraphes argument\u00e9s.  </p> L\u2019ozone atmosph\u00e9rique et l\u2019apparition de la vie sur Terre -  <p>Notions : Ozone, nocivit\u00e9 des rayonnements ultraviolets pour l'ADN, longueur d'onde. Comp\u00e9tences : Lecture de graphique, paragraphe argument\u00e9.  </p> \u00c9missions de dioxyde de carbone et cons\u00e9quences sur l\u2019\u00e9conomie du vin -  <p>Notions : Proportionnalit\u00e9, produit de combustion nocifs, \u00e9nergie, masse de combustible, masse de CO2 produite, effet de serre, empreinte carbone, cons\u00e9quences du d\u00e9r\u00e8glement climatique. Comp\u00e9tences : Appliquer une r\u00e8gle de proportionnalit\u00e9, conna\u00eetre des produits de la combustion qui ont un effet nocif pour la sant\u00e9, d\u00e9finir l'empreinte carbone, lecture de graphique, </p> L\u2019origine de la diminution des temp\u00e9ratures globales sur la p\u00e9riode 1945-1975 -  <p>Notions : Effet alb\u00e9do des a\u00e9rosols, for\u00e7age radiatif, gaz \u00e0 effet de serre, \u00e9mission anthropiques, hausse des temp\u00e9ratures. Comp\u00e9tences : Lecture de graphique et sch\u00e9mas, puissances de 10 et conversions Tonnes/kg, r\u00e9dation de texte argument\u00e9.</p> In\u00e9galit\u00e9s des \u00e9missions de \\(CO_2\\) au niveau mondial et vuln\u00e9rabilit\u00e9 au changement climatique -  <p>Notions : Consommations \u00e9nerg\u00e9tiques, emission de CO2, in\u00e9galit\u00e9s Comp\u00e9tences : Lecture de graphique, appliquer une r\u00e8gle de proportionnalit\u00e9, calculer un pourcentage, r\u00e9action de paragraphes argument\u00e9s.</p> Plus au programme 2024 <ul> <li>L\u2019atmosph\u00e8re terrestre et la vie - </li> <li>Une \u00e9l\u00e9vation inqui\u00e9tante du niveau des oc\u00e9ans - </li> </ul>"},{"location":"es/elec/","title":"\u26a1 \u00c9lectricit\u00e9 \ud83d\udd34","text":""},{"location":"es/elec/#electricite","title":"\u00c9lectricit\u00e9","text":"Deux si\u00e8cles d'\u00e9nergie \u00e9lectrique  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Les atouts de l'\u00e9lectricit\u00e9  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Optimisation du transport de l\u2019\u00e9lectricit\u00e9  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Choix \u00e9nerg\u00e9tiques et impacts sur les soci\u00e9t\u00e9s  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Sujet BAC <p> : Sujets  : Corrig\u00e9s  : Indices  </p> L\u2019\u00eele de Sams\u00f8 :  L'agrivolta\u00efsme :  Le complexe de Toco :  La solution hydrog\u00e8ne :  Capteur photovolta\u00efque :  Energie \u2013 \u00c9olienne, un choix d\u2019avenir ? :  Minimisation des pertes par effet Joule :  Des sph\u00e8res g\u00e9antes immerg\u00e9es sous l\u2019eau:  Transporter de l\u2019\u00e9nergie co\u00fbte de l\u2019\u00e9nergie ! :  Les impacts de la combustion sur l\u2019environnement et la sant\u00e9 :  Plus au programme <ul> <li>Les \u00e9oliennes et les chauves-souris : </li> </ul>"},{"location":"es/soleil/","title":"\u2600\ufe0f Soleil \ud83d\udfe1","text":""},{"location":"es/soleil/#le-soleil","title":"\u2600\ufe0f Le Soleil \ud83c\udf08","text":"Le rayonnement solaire  Vid\u00e9os  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Le bilan radiatif terrestre  Vid\u00e9os  Manuel en ligne  Animations  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>\u00c9talement d'un pinceau de lumi\u00e8re \u00e0 la surface de la Terre</p> <p>Bougez les points rouges, faites tourner la Terre. Cette animation a pour but de montrer qu'un pinceau cylindrique de lumi\u00e8re en provenance du Soleil va s'\u00e9taler \u00e0 la surface de la Terre et que cet \u00e9talement d\u00e9pend de la latitude (d\u00e9placement Nord-Sud) mais aussi de l'heure de la journ\u00e9e (en se d\u00e9pla\u00e7ant vers l'Est ou l'Ouest).</p> <p>N.B. On est ici \u00e0 un des \u00e9quinoxes : les rayons solaires sont perpendiculaires \u00e0 la surface du globe au niveau de l'\u00e9quateur.</p> <p> </p> <p>Puissance re\u00e7ue par unit\u00e9 de surface. Mod\u00e8le discret</p> <p>Initialiser : initialise la vue Densit\u00e9 des rayons : fait varier le nombre de rayons par unit\u00e9 de surface. Points : fait appara\u00eetre une grille de particules (une par rayon) comme des photons. Projeter : projette la grille de points \u00e0 la surface de la Terre. zone d'aire constante : fait appara\u00eetre un cercle de rayon fixe \u00e0 la surface de la Terre et calcule le nombre de points qui \u00e0 l'int\u00e9rieur de cette zone.</p> <p>Cette mod\u00e9lisation discr\u00e9tise la situation r\u00e9elle. Ce nombre de points par unit\u00e9 de surface donne une id\u00e9e de la variation de puissance re\u00e7ue par unit\u00e9 de surface selon la latitude \u00e0 laquelle on se trouve et l'heure de la journ\u00e9e.</p> <p> </p> \u00c9nergie solaire et photosynth\u00e8se  Vid\u00e9os  Manuel en ligne  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> \u00c9nergie solaire et humanit\u00e9  Manuel en ligne  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Sujet Bac <p> : Sujets  : Corrig\u00e9s  : Indices  </p> L'e\u0301nergie rayonne\u0301e par les e\u0301toiles et utilisation biologique du rayonnement solaire  Temp\u00e9rature moyenne de surface de la Terre  Le rayonnement solaire re\u00e7u sur Terre  Seul sur Mars** -  Le soleil, source de vie sur Terre ?  La Terre et V\u00e9nus, des plan\u00e8tes qui se ressemblent  Plus au programme en 2024 <ul> <li>Effet de serre et temp\u00e9rature terrestre :  - (/assets/sujets/es/1re/EffetSerre-indice.pdf)</li> <li>L'\u00e9nergie lumineuse et son utilisation par les algues - </li> <li>La photosynth\u00e8se pour recharger nos batteries : </li> <li>La pile v\u00e9g\u00e9tale : </li> <li>Temp\u00e9ratures de surface de quelques objets du syst\u00e8me solaire : </li> </ul>"},{"location":"es/son/","title":"\ud83d\udd0a Le son \ud83d\udc42","text":""},{"location":"es/son/#le-son","title":"\ud83d\udd0a Le son \ud83d\udc42","text":"Le son, ph\u00e9nom\u00e8ne vibratoire  Vid\u00e9os  Manuel en ligne  Animations  Sons \u00e0 analyser  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>Ondes : amplitude et fr\u00e9quence</p> <p> </p> <p>Sons compos\u00e9s et spectres</p> <p> </p> <p>Fr\u00e9quence de r\u00e9sonance d'une corde</p> <p>Consigne</p> <p>Fixer l'amortissement de l'onde \u00e0 0 et chercher la fr\u00e9quence de r\u00e9sonance pour une tension de corde donn\u00e9e\"</p> <p> </p> <ul> <li>La4 du saxophone</li> <li>La4 de la guitare</li> <li>La4 du diapason</li> <li>La4 du piano</li> <li>Si4 de la guitare</li> </ul> Musique et nombres  Vid\u00e9os  Manuel en ligne  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Le son, une information \u00e0 coder  Vid\u00e9os  Manuel en ligne  Animations  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> <p>\u00c9chantillonnage et quantification d'un son</p> <p> </p> Entendre la musique  Vid\u00e9os  Manuel en ligne  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Sujets BAC <p> : Sujets  : Corrig\u00e9s  : Indices  </p> Un d\u00e9cret qui fait grand bruit :  L'oreille et l'audition :  Pr\u00e9vention d'un traumatisme acoustique :  -  Le son, de l'analogique au num\u00e9rique :  En plus pour celleux qui ont la Sp\u00e9 Maths Implant cochl\u00e9aire :  Pertes auditives apr\u00e8s un concert :  - indices Gamme temp\u00e9r\u00e9e et gamme de Pythagore :  Enregistrements de fichiers sonores :  La num\u00e9risation et le stockage d'un son :  Num\u00e9risation et compression d'un signal sonore :  Plus au programme en 2024 Les dangers des sons :  Production d'un son :  -  Masse tension fr\u00e9quence :  La guitare \u00e9lectrique :  Gamme temp\u00e9r\u00e9e et guitare classique :  Production d'un son :"},{"location":"es/son/intro/","title":":material-music: Son et musique, porteurs d'information :material-music:","text":""},{"location":"es/son/intro/#son-et-musique-porteurs-dinformation","title":"Son et musique, porteurs d'information","text":"<p>Au programme</p> <p>Dans ce chapitre du tronc commun d'enseignement scientifique de premi\u00e8re, vous aborderez :</p> <ol> <li> <p>Qu'est-ce qu'une onde sonore ?</p> </li> <li> <p>Pourquoi des sons sont-il harmonieux ?</p> </li> <li> <p>Comment enregistrer notre musque dans un ordinateur ?</p> </li> <li> <p>Comment nos oreilles ont le plaisir (ou pas) d'entendre ?</p> </li> </ol>"},{"location":"es/son/maths/","title":"L'art de faire entendre les nombres","text":""},{"location":"es/son/maths/#lart-de-faire-entendre-les-nombres","title":"L'art de faire entendre les nombres","text":"<p>https://www.youtube.com/watch?v=9-l952k8y9Q&amp;ab_channel=RichardPaut</p>  Vid\u00e9os  Manuel en ligne  Sujets bac  <p></p> <ul> <li>Cours</li> <li>S'\u00e9chauffer</li> <li>S'entrainer</li> <li>Aller plus loin</li> <li>Expert\u00b7e\u00b7s</li> </ul> <ul> <li>La guitare \u00e9lectrique : </li> <li>Gamme temp\u00e9r\u00e9e et guitare classique : </li> <li>Gamme temp\u00e9r\u00e9e et gamme de Pythagore : </li> </ul>"},{"location":"es/son/numerisation/","title":":material-book-music: Num\u00e9riser un son :material-book-music:","text":""},{"location":"es/son/numerisation/#numeriser-un-son","title":"Num\u00e9riser un son","text":"Vid\u00e9os  Manuel en ligne  Sujets bac  <ul> <li>Cours</li> <li>S'\u00e9chauffer</li> <li>S'entrainer</li> <li>Aller plus loin</li> <li>Expert\u00b7e\u00b7s</li> </ul> <ul> <li>Production d'un son : </li> <li>Le son, de l'analogique au num\u00e9rique :  - corrig\u00e9</li> <li>Enregistrements de fichiers sonores : </li> <li>La num\u00e9risation et le stockage d'un son : </li> </ul>"},{"location":"es/son/numerisation/#parametre-de-numerisation-dun-son","title":"Param\u00e8tre de num\u00e9risation d'un son","text":""},{"location":"es/son/numerisation/#compression-des-fichiers-audio","title":"Compression des fichiers audio","text":""},{"location":"es/son/ondes/","title":"Caract\u00e9ristiques des ondes sonores","text":""},{"location":"es/son/ondes/#caracteristiques-des-ondes-sonores","title":"Caract\u00e9ristiques des ondes sonores","text":"Vid\u00e9os  Manuel en ligne  Sujets bac  Animations  <ul> <li>Cours</li> <li>S'\u00e9chauffer</li> <li>S'entrainer</li> <li>Aller plus loin</li> <li>Expert\u00b7e\u00b7s</li> </ul> <ul> <li>Production d'un son :  - corrig\u00e9</li> <li>Masse tension fr\u00e9quence : </li> <li>La guitare \u00e9lectrique : </li> </ul>  Ondes : amplitude et fr\u00e9quence  Sons compos\u00e9s et sepectres  Fr\u00e9quence de r\u00e9sonnance d'une corde  <p>Consigne</p> <p>Fixer l'amortissement de l'onde \u00e0 0 et charcher la fr\u00e9quence de r\u00e9sonnance pour une tension de corde donn\u00e9e\"</p> <p> </p>"},{"location":"es/son/ondes/#les-bases-de-la-physque-des-ondes","title":"Les bases de la physque des ondes","text":""},{"location":"es/son/ondes/#signal-periodique-motif-elementaire-et-periode","title":"Signal p\u00e9riodique, motif \u00e9l\u00e9mentaire et p\u00e9riode","text":""},{"location":"es/son/ondes/#determiner-une-periode-t-3-exemples","title":"D\u00e9terminer une p\u00e9riode T (3 exemples)","text":""},{"location":"es/son/ondes/#calculer-la-frequence-dun-signal-sonore","title":"Calculer la fr\u00e9quence d'un signal sonore","text":""},{"location":"es/son/ondes/#caracteristiques-dun-son","title":"Caract\u00e9ristiques d'un son","text":""},{"location":"es/son/ondes/#hauteur-et-timbre-signaux-sonore","title":"Hauteur et timbre signaux sonore","text":""},{"location":"es/son/ondes/#intensite-sonore-dun-son-i-ps","title":"Intensit\u00e9 sonore d'un son I = P/S","text":""},{"location":"es/son/ondes/#intensite-sonore-timbre-et-hauteur-exo","title":"Intensit\u00e9 sonore, timbre et hauteur (exo)","text":""},{"location":"es/son/ondes/#analyse-spectrale","title":"Analyse spectrale","text":""},{"location":"es/son/ondes/#decomposition-dun-son-et-spectre-en-frequence-enseignement-scientifique-son-et-musique","title":"D\u00e9composition d'un son et spectre en fr\u00e9quence Enseignement scientifique : Son et musique","text":""},{"location":"es/son/ondes/#distinguer-un-son-pur-dun-son-compose-sinusoide-et-spectre","title":"Distinguer un son pur d'un son compos\u00e9 (sinuso\u00efde et spectre)","text":""},{"location":"es/son/ondes/#analyser-un-spectre-en-frequence-dun-son","title":"Analyser un spectre en fr\u00e9quence d'un son.","text":""},{"location":"es/son/oreille/","title":"Entendre un son","text":""},{"location":"es/son/oreille/#entendre-un-son","title":"Entendre un son","text":"Vid\u00e9os  Manuel en ligne  Sujets bac  <ul> <li>Cours</li> <li>S'\u00e9chauffer</li> <li>S'entrainer</li> <li>Aller plus loin</li> <li>Expert\u00b7e\u00b7s</li> </ul> <ul> <li>Pertes auditives apr\u00e8s un concert :  - indices<ul> <li>Un d\u00e9cret qui fait grand bruit : </li> <li>L'oreille et l'audition :  - corrig\u00e9</li> <li>Les dangers des sons : </li> <li>Pr\u00e9vention d'un traumatisme accoustique :  - corrig\u00e9</li> <li>Implant cochl\u00e9aire : </li> </ul> </li> </ul>"},{"location":"es/son/oreille/#entendre-les-sons","title":"Entendre les sons","text":""},{"location":"es/son/oreille/#niveau-dintensite-sonore","title":"Niveau d'intensit\u00e9 sonore","text":""},{"location":"es/terre/","title":"\ud83c\udf0d Terre \ud83d\udfe1","text":""},{"location":"es/terre/#la-terre","title":"\ud83c\udf0d La Terre \ud83c\udf0d","text":"La forme de la Terre  Vid\u00e9os  Manuel en ligne  Animations  <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Anaxagore vs Eratosth\u00e8ne <p>Avec les donn\u00e9es initiales :</p> <ul> <li> <p>Distance Sy\u00e8ne - Alexandrie de 5000 stades (environ 800 km)</p> </li> <li> <p>Le jour du solstice d'\u00e9t\u00e9 \u00e0 Alexandrie, les rayons lumineux forment avec la verticale un angle correspondant \u00e0 1/50e de tour (soit 7,2\u00b0 avec nos unit\u00e9s).</p> </li> </ul> <p>Eratosth\u00e8ne et Anaxagore avaient des mod\u00e8les diff\u00e9rents de la Terre. </p> <ul> <li> <p>Si comme Anaxagore on suppose la Terre plate on peut en d\u00e9duire la distance au Soleil.</p> </li> <li> <p>Eratosth\u00e8ne suppose la Terre sph\u00e9rique, les rayons solaires parall\u00e8les et que Sy\u00e8ne et Alexandrie sont sur un m\u00eame m\u00e9ridien et en d\u00e9duit la circonf\u00e9rence de la Terre.</p> </li> </ul> <p> </p> Exp\u00e9rience d'Eratosth\u00e8ne <p>Au solstice d'\u00e9t\u00e9, \u00e0 midi solaire, les rayons du Soleil arrivent \u00e0 Sy\u00e8ne (Assouan) perpendiculairement \u00e0 la surface terrestre. Un b\u00e2ton plant\u00e9 perpendiculairement n'aurait pas d'ombre, le Soleil \u00e9claire le fond des puits, autrement dit : un rayon passerait par le centre de la Terre s'il n'\u00e9tait pas arr\u00eat\u00e9 par sa surface.</p> <p>Alexandrie se trouve (environ) sur le m\u00eame m\u00e9ridien plus au nord. La mesure de l'angle que font le rayons solaires donne environ un cinquanti\u00e8me de tour. </p> <p>Cette figure montre une vue de la Terre coup\u00e9e selon ce m\u00e9ridien, les graduations sont au nombre de 50. On comprend que si l'on mesure la distance Alexandrie-Sy\u00e8ne \u00e0 la surface de la Terre, il suffira de multiplier </p> <p>cette longueur par 50 pour obtenir la circonf\u00e9rence terrestre.</p> <p> </p> Chemin le plus court \u00e0 la surface de la Terre <p>Chercher le plus court chemin entre deux points \u00e0 la surface de la Terre. Cette applet trace un arc de cercle rose d'extr\u00e9mit\u00e9s A et B, passant par le point blanc et calcule sa longueur en kilom\u00e8tres. L'objectif est de placer le point blanc de telle sorte que le chemin soit le plus court possible et de trouver quelle est la particularit\u00e9 du cercle permettant d'atteindre ce minimum (qui est affich\u00e9). D est le centre du cercle rose.</p> <p>On pourra ensuite chercher \u00e0 construire le cercle contenant cet arc optimal.  </p> Revoir latitude et longitude sur Terre <p> </p> L'histoire de l\u2019\u00e2ge de la Terre  Vid\u00e9os  Manuel en ligne  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> La Terre dans l\u2019Univers  Vid\u00e9os  Manuel en ligne  <p></p> <ul> <li>Cours</li> <li>\u00c9chauffement</li> <li>Apprenti</li> <li>Initi\u00e9</li> <li>Expert</li> </ul> Sujets BAC <p> : Sujets  : Corrig\u00e9s  : Indices  </p> Histoire d'eau : Deux m\u00e9thodes historiques permettant d\u2019estimer l\u2019\u00e2ge de la Terre :  Approche historique de l'age de la Terre :  Les phases de la Lune  La lumi\u00e8re cendr\u00e9e de la Lune :  En plus pour celleux qui ont la SP\u00e9 Maths Mesure du m\u00e9ridien terrestre :  New-York - P\u00e9kin en avion :  Terre Plate ou Terre sph\u00e9rique :  La forme de la Terre \u00e0 l\u2019Antiquit\u00e9 :  D\u00e9termination de l'age de la Terre par Buffon :  Plus au programme en 2024 D\u00e9termination de l\u2019\u00e2ge de la Terre avec algorithme :  L'histoire de l'age de la Terre #1 :  L'histoire de l'age de la Terre #2 :  L'archipel d'Hawa\u00ef et les monts de l'empereur :  La Terre, sa composition et sa taille :"},{"location":"maths/","title":"Maths","text":""},{"location":"maths/#maths","title":"Maths","text":"<p>Tronc Commun 1\u00e8re</p> <p>Sp\u00e9cialit\u00e9 Math\u00e9matiques 1\u00e8re</p> Ressources FormulairesCalculatrices et PythonManuelsCahiers\ud83c\udfac Vid\u00e9os \ud83c\udfacMathenpocheExos corrig\u00e9sSujets BAC <p>A imprimer et garder sous le coude pour travailler exercices et activit\u00e9s : Formulaire Maths 2de et 1\u00e8re et Formulaire Python</p> <p>Vous pourrez fonctionner cette ann\u00e9e (y compris \u00e0 l\u2019examen) avec vos calculatrices \u00ab\u00a0coll\u00e8ge\u00a0\u00bb. Si vous avez une calculatrice \u00ab\u00a0graphique\u00a0\u00bb, voici des tutoriels pour Casio et Texas Instruments. Pour apprendre Python c\u2019est ici (cr\u00e9ez vous un compte). Pour coder en Python c\u2019est ici.</p> <p>Les manuels \u00ab\u00a0libres\u00a0\u00bb de Sesamaths sont disponible au format pdf 2nde, Spe 1\u00e8re, corrig\u00e9 Spe1\u00e8re. </p> <p>Les versions num\u00e9riques \u00ab\u00a0enrichies\u00a0\u00bb d\u2019animations et d\u2019exercices interactifs sont \u00e9galement en acc\u00e8s libre ici, Sp\u00e9 1\u00e8re</p> <p>Choisissez le libre ! Ci-dessous le \u00ab\u00a0cahier de math\u00e9matiques\u00a0\u00bb num\u00e9rique \u00ab\u00a0libre\u00a0\u00bb de Tronc Commun 1\u00e8re produit par l\u2019association \u00ab\u00a0Sesamaths\u00a0\u00bb et l\u2019\u00e9diteur Magnard. La version pdf est disponible ici, n\u2019h\u00e9sitez pas \u00e0 la t\u00e9l\u00e9charger, c\u2019est tout \u00e0 fait l\u00e9gal. Son corrig\u00e9 est ici. </p> <p>Pour la version num\u00e9rique, cliquez ici. Pour vous connecter et b\u00e9n\u00e9ficier des compl\u00e9ments, connectez vous (xavier.kerbiriou et me demander le mot de passe).</p> <p>Sur la cha\u00eene Youtube d\u2019Yvan Monka. C\u2019est tr\u00e8s complet, bien class\u00e9, accessible, et \u00e7a couvre tous les programmes de la 6\u00e8me \u00e0 la terminale S. Plus qu\u2019\u00e0 y passer du temps !!!</p> <p>Les pr\u00e9requis, des r\u00e9sum\u00e9s de cours et des exercices pour l\u2019ensemble du programme de Sp\u00e9cialit\u00e9 Maths 2de ici</p> <p>Plus de 700 exercices corrig\u00e9s pour la seconde.</p> <p>Les sujets et leurs corrig\u00e9s sur le site de l\u2019APMEP</p> Approches plus appliqu\u00e9es (lyc\u00e9e pro) <p>Modules d\u2019apprentissage Opale produits par votre MEE. N\u2019oubliez pas, dans un exercice interactif, de cliquer sur \u00ab\u00a0correction\u00a0\u00bb avant de cliquer sur la fl\u00e8che pour passer au suivant\u2026</p> Th\u00e8me Niveau Module La proportionnalit\u00e9 3\u00e8me-2nde Module 1 Les pourcentages 3\u00e8me-2nde Module 1 La trigonom\u00e9trie 3\u00e8me-2nde Module 1 Les \u00e9quations 1er degr\u00e9 Module 1 G\u00e9om\u00e9trie - De l\u2019espace au plan 3\u00e8me-2nde Module 1 G\u00e9om\u00e9trie et nombres 3\u00e8me-2nde Module 1 Notions de fonctions 2nde Module 1 Fonctions affines 3\u00e8me-2nde Module 1 Statistiques 2nde Module 1 Probabilit\u00e9s 2nde Module 1 Fonctions de r\u00e9f\u00e9rence 2nde Module 1 Suites arithm\u00e9tiques et g\u00e9om\u00e9triques Sp\u00e9 1\u00e8re Module 1 Fonctions du 2nd degr\u00e9 Sp\u00e9 1\u00e8re Module 1 \u00c9quations du 2nd degr\u00e9 Sp\u00e9 1\u00e8re Module 1Module 2 (\u00e9quations slt) D\u00e9rivation Sp\u00e9 1\u00e8re Module 1 Module 2"},{"location":"maths/spe/","title":"Tronc Commun Maths 1\u00e8re","text":""},{"location":"maths/spe/#tronc-commun-maths-1ere","title":"Tronc Commun Maths 1\u00e8re","text":"<p>Concerne K\u00e9lian, Valentin et Lilou-Ann</p> Au programme <ul> <li>Chapitre 1: Second degr\u00e9</li> <li>Chapitre 2: Suites num\u00e9riques (g\u00e9n\u00e9ralit\u00e9s)</li> <li>Chapitre 3: D\u00e9rivation (1)</li> <li>Chapitre 4: Probabilit\u00e9s conditionnelles</li> <li>Chapitre 5: Suites arithm\u00e9tiques et g\u00e9om\u00e9triques</li> <li>Chapitre 6: Produit scalaire</li> <li>Chapitre 7: D\u00e9rivation (2)</li> <li>Chapitre 8: Variables al\u00e9atoires</li> <li>Chapitre 9: Fonctions exponentielles</li> </ul>"},{"location":"maths/spe/2nd-degre/","title":"Second degr\u00e9","text":""},{"location":"maths/spe/2nd-degre/#second-degre","title":"Second degr\u00e9","text":"Pr\u00e9requis <ul> <li>Utiliser les identit\u00e9s remarquables \u2013 D\u00e9veloppement(1) </li> <li>Utiliser les identit\u00e9s remarquables \u2013 D\u00e9veloppement(2) </li> <li>Utiliser les identit\u00e9s remarquables \u2013 D\u00e9veloppement(3) </li> <li>Utiliser les identit\u00e9s remarquables \u2013 Reconnaitre un produit remarquable. (1) </li> <li>Utiliser les identit\u00e9s remarquables \u2013 Reconnaitre un produit remarquable. (2) </li> <li>Utiliser les identit\u00e9s remarquables \u2013 Factorisation avec un produit remarquable </li> <li>Utiliser les identit\u00e9s remarquables \u2013 Factorisation avec un produit remarquable </li> <li>R\u00e9soudre des \u00e9quations avec la fonction carr\u00e9e \u2013 R\u00e9soudre une \u00e9quation </li> <li>R\u00e9soudre des \u00e9quations avec la fonction carr\u00e9e \u2013 Equation produit </li> <li>R\u00e9soudre des \u00e9quations avec un produit nul (1) </li> <li>R\u00e9soudre des \u00e9quations avec un produit nul (2) </li> <li>R\u00e9soudre des \u00e9quations avec un produit nul (3) </li> <li>R\u00e9soudre des \u00e9quations avec un produit nul (4) </li> <li>Savoir utiliser un tableau de variations \u2013 Extremum d\u2019une fonction </li> <li>Savoir utiliser un tableau de variations \u2013 Comparaison sur un tableau de variations </li> <li>Dresser un tableau de signes \u2013 Signe d\u2019une fonction affine </li> <li>Dresser un tableau de signes \u2013 Signe d\u2019un produit de fonctions affines </li> <li>Dresser un tableau de signes \u2013 Signe d\u2019un quotient de fonctions affines </li> </ul> Cours <ul> <li>Activit\u00e9s d\u2019introduction</li> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> \u00c9tudier le signe d\u2019une fonction polyn\u00f4me du second degr\u00e9 donn\u00e9e sous forme factoris\u00e9e Donner la forme canonique d\u2019une fonction polyn\u00f4me du second degr\u00e9 R\u00e9soudre une \u00e9quation du second degr\u00e9 S\u2019entra\u00eener et r\u00e9viser Exos en ligneExos papierVid\u00e9os <p>-\u00c9crire sous forme canonique (1) -\u00c9crire sous forme canonique (2) -\u00c9tudier les variations d\u2019une fonction -R\u00e9soudre des \u00e9quations (1) -R\u00e9soudre des \u00e9quations (2) -\u00c9tudier le signe d\u2019un trin\u00f4me et r\u00e9soudre des in\u00e9quations \u2013 Signe d\u2019un trin\u00f4me -\u00c9tudier le signe d\u2019un trin\u00f4me et r\u00e9soudre des in\u00e9quations \u2013 R\u00e9solution d\u2019in\u00e9quations \u2013 Signe d\u2019un trin\u00f4me </p> <ul> <li>savoir-faire et la correction </li> <li>savoir-faire et la correction</li> </ul> D\u00e9terminer l\u2019extremum d\u2019une fonction polyn\u00f4me du second degr\u00e9 <p></p> D\u00e9terminer les caract\u00e9ristiques d\u2019une parabole <p></p> \u00c9tudier la position relative de deux courbes <p></p> Calculatrice : r\u00e9soudre une \u00e9quation du second degr\u00e9 <p></p> D\u00e9terminer la forme canonique d\u2019une fonction polyn\u00f4me du second degr\u00e9 <p></p> D\u00e9terminer l\u2019expression d\u2019une fonction polyn\u00f4me du second degr\u00e9 <p></p> D\u00e9terminer les variations d\u2019une fonction polyn\u00f4me du second degr\u00e9 <p></p> Factoriser un trin\u00f4me du second degr\u00e9 <p></p> R\u00e9soudre une in\u00e9quation en \u00e9tudiant le signe d\u2019un trin\u00f4me <p></p> \u00c9tudier la position relative de deux courbes <p></p>"},{"location":"maths/spe/aleatoire/","title":"Variables al\u00e9atoires","text":""},{"location":"maths/spe/aleatoire/#variables-aleatoires","title":"Variables al\u00e9atoires","text":"Pr\u00e9requis <ul> <li>Calculer une probabilit\u00e9 avec un tableau </li> <li>Calculer et interpr\u00e9ter des moyennes et des \u00e9cart-types </li> <li>Simuler une exp\u00e9rience \u00e0 deux issues. </li> </ul> Cours <ul> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Interpr\u00e9ter et utiliser les notations X=0, X&lt;a, P(X=a), P(X&lt;a) + Mod\u00e9liser une situation avec une variable al\u00e9atoire. Calculer une esp\u00e9rance, une variance, un \u00e9cart type S\u2019entra\u00eener et r\u00e9viser Exos en ligneExos en vid\u00e9oExos papier <ul> <li>D\u00e9terminer la loi de probabilit\u00e9 d\u2019une variable al\u00e9atoire </li> <li>Calculer et utiliser une esp\u00e9rance </li> <li>Obtenir une simulation avec Python </li> </ul> D\u00e9terminer une loi de probabilit\u00e9 Calculer l\u2019esp\u00e9rance, la variance et l\u2019\u00e9cart-type QCM : pour r\u00e9viser <p>Exos et correction</p>"},{"location":"maths/spe/deriv/","title":"D\u00e9rivation (1)","text":""},{"location":"maths/spe/deriv/#derivation-1","title":"D\u00e9rivation (1)","text":"Pr\u00e9requis <ul> <li>Lire graphiquement l\u2019\u00e9quation r\u00e9duite d\u2019une droite (1) </li> <li>Lire graphiquement l\u2019\u00e9quation r\u00e9duite d\u2019une droite (2) </li> <li>D\u00e9terminer l\u2019\u00e9quation r\u00e9duite d\u2019une droite </li> <li>Lire des images et des ant\u00e9c\u00e9dents </li> <li>Calculer des images </li> <li>D\u00e9velopper, r\u00e9duire, simplifier </li> </ul> Cours <p>Activit\u00e9s d\u2019introduction : ici Trace \u00e9crite du cours Fiche synth\u00e8se du cours </p> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Calculer un nombre d\u00e9riv\u00e9 <p></p> Interpr\u00e9ter g\u00e9om\u00e9triquement un nombre d\u00e9riv\u00e9 <p></p> D\u00e9terminer l\u2019\u00e9quation r\u00e9duite d\u2019une tangente <p></p> Conna\u00eetre les fonctions d\u00e9riv\u00e9es des fonctions usuelles <p></p> Calculer la fonction d\u00e9riv\u00e9e d\u2019une fonction <p></p> Calculatrice : afficher une \u00e9quation de tangente et afficher cette tangente <p></p> S\u2019entra\u00eener et r\u00e9viser \ud83c\udfac Vid\u00e9os \ud83c\udfacExos en ligneExos papier Calculer un nombre d\u00e9riv\u00e9(1) <p></p> D\u00e9terminer graphiquement une \u00e9quation de tangente <p></p> D\u00e9terminer une \u00e9quation de tangente <p></p> Exercice : D\u00e9river une fonction <p></p> <ul> <li>D\u00e9terminer un nombre d\u00e9riv\u00e9 </li> <li>D\u00e9terminer l\u2019\u00e9quation r\u00e9duite d\u2019une tangente </li> <li>D\u00e9terminer graphiquement un nombre d\u00e9riv\u00e9 </li> <li>D\u00e9terminer graphiquement un nombre d\u00e9riv\u00e9 \u2013 Tangente \u00e0 une courbe et nombre d\u00e9riv\u00e9 </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (1) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (2) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (3) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (4) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (5) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (6) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (7) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (8) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (9) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (10) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (11) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (12) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (13) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (14) </li> <li>D\u00e9terminer une fonction d\u00e9riv\u00e9e (15) </li> <li>D\u00e9terminer la fonction d\u00e9riv\u00e9e d\u2019une fonction compos\u00e9e x\u2192 f(ax+b) (1) </li> <li>D\u00e9terminer la fonction d\u00e9riv\u00e9e d\u2019une fonction compos\u00e9e x\u2192 f(ax+b) (2) </li> </ul> <p>exos et correction</p>"},{"location":"maths/spe/deriv2/","title":"D\u00e9rivation (2)","text":""},{"location":"maths/spe/deriv2/#derivation-2","title":"D\u00e9rivation (2)","text":"Pr\u00e9requis <ul> <li>\u00c9tudier le signe \u2013 Variations d\u2019une fonction affine </li> <li>\u00c9tudier le signe \u2013 Signe d\u2019un trin\u00f4me </li> <li>\u00c9tudier le signe \u2013 Signe d\u2019un produit de fonctions affines </li> <li>\u00c9tudier le signe \u2013 Signe d\u2019un quotient de fonctions affines </li> <li>R\u00e9aliser un tableau de variations </li> <li>Repr\u00e9senter et comparer </li> <li>D\u00e9river une fonction </li> <li>Encadrer avec les fonctions carr\u00e9e et inverse (1) </li> <li>Encadrer avec les fonctions carr\u00e9e et inverse (2) </li> </ul> Cours <ul> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes</li> </ul> Conna\u00eetre le lien entre le signe de f\u2019 et le sens de variation de f + Etudier les variations d\u2019une fonction Utiliser les variations d\u2019une fonction pour obtenir ses extrema, obtenir des in\u00e9galit\u00e9s, r\u00e9soudre un probl\u00e8me d\u2019optimisation S\u2019entra\u00eener et r\u00e9viser Vid\u00e9oExos en ligneExos papier \u00c9tudier les variations d\u2019une fonction QCM : pour r\u00e9viser <ul> <li>\u00c9tudier les variations d\u2019une fonction (1) </li> <li>\u00c9tudier les variations d\u2019une fonction (2) </li> <li>\u00c9tudier les variations d\u2019une fonction (3) </li> </ul> <p>exo et correction</p>"},{"location":"maths/spe/exponentielle/","title":"Fonctions exponentielles","text":""},{"location":"maths/spe/exponentielle/#fonctions-exponentielles","title":"Fonctions exponentielles","text":"Pr\u00e9requis <ul> <li>Calculer avec les puissances </li> <li>R\u00e9soudre une \u00e9quation du premier degr\u00e9 (1) </li> <li>R\u00e9soudre une \u00e9quation du premier degr\u00e9 (2) </li> <li>Factorisation par distributivit\u00e9 (1</li> <li>Factorisation par distributivit\u00e9 (2) </li> <li>Factorisation par distributivit\u00e9 (3) </li> <li>Factorisation par distributivit\u00e9 (4) </li> <li>D\u00e9terminer une \u00e9quation de tangente (1) </li> <li>D\u00e9terminer une \u00e9quation de tangente (2) </li> <li>Travailler avec les suites g\u00e9om\u00e9triques (1) </li> <li>Travailler avec les suites g\u00e9om\u00e9triques (2) </li> </ul> Cours <ul> <li>Act D\u00e9couvrir des propri\u00e9t\u00e9s de la fonction exponentielle </li> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Transformer une expression en utilisant les propri\u00e9t\u00e9s de la fonction exponentielle R\u00e9soudre des \u00e9quations ou in\u00e9quations contenant des exponentielles Repr\u00e9senter graphiquement les fonctions t \u2192 exp(\u2212kt) et t \u2192 exp(kt) (k &gt; 0) Mod\u00e9liser une situation par une croissance, une d\u00e9croissance exponentielle S\u2019entra\u00eener et r\u00e9viser Exos en vid\u00e9oExos en ligneExos papier D\u00e9river une fonction exponentielle \u00c9tudier une fonction exponentielle Exercice : \u00c9tudier une position relative <ul> <li>Calculer avec la fonction exponentielle (1) </li> <li>Calculer avec la fonction exponentielle (2) </li> <li>R\u00e9soudre une \u00e9quation ou une in\u00e9quation </li> <li>\u00c9tudier des variations </li> </ul> <p>exo et correction Calculs de d\u00e9riv\u00e9es avec la fonction exponentielle :\u00a0,\u00a0Corrig\u00e9 </p>"},{"location":"maths/spe/proba/","title":"Probabilit\u00e9s conditionnelles","text":""},{"location":"maths/spe/proba/#probabilites-conditionnelles","title":"Probabilit\u00e9s conditionnelles","text":"Pr\u00e9requis <ul> <li>Manipuler des \u00e9v\u00e9nements </li> <li>Manipuler des proportions de proportions</li> <li>Calculer une probabilit\u00e9 dans le cas de non-\u00e9quiprobabilit\u00e9 (1) </li> <li>Calculer une probabilit\u00e9 dans le cas de non-\u00e9quiprobabilit\u00e9 (2) </li> </ul> Cours <ul> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Passer du registre de la langue naturelle au registre symbolique et inversement. Distinguer PA(B) et PB(A) Construire et utiliser un arbre pond\u00e9r\u00e9 ou un tableau en lien avec une situation donn\u00e9e Utiliser la formule des probabilit\u00e9s totales D\u00e9montrer et utiliser l\u2019ind\u00e9pendance de deux \u00e9v\u00e9nements Repr\u00e9senter et utiliser une r\u00e9p\u00e9tition de deux \u00e9preuves ind\u00e9pendantes par un arbre ou un tableau Num\u00e9rique <ul> <li>TP1\u00a0: Fiabilit\u00e9 d\u2019un test de d\u00e9pistage (Tableur) </li> <li>TP2\u00a0: Marche al\u00e9atoire (Python) </li> </ul> S\u2019entra\u00eener et r\u00e9viser Exos papierExos en ligne <ul> <li>exo1 - Corrig\u00e91</li> <li>exo2 - corrig\u00e92 </li> <li>exo3 - corrig\u00e93</li> </ul> <ul> <li>Calculer avec un tableau \u00e0 double entr\u00e9e </li> <li>Calculer avec les probabilit\u00e9s conditionnelles </li> <li>Utiliser un arbre pond\u00e9r\u00e9 </li> <li>Repr\u00e9senter une succession de deux \u00e9preuves ind\u00e9pendantes </li> </ul>"},{"location":"maths/spe/scalaire/","title":"Produit scalaire","text":""},{"location":"maths/spe/scalaire/#produit-scalaire","title":"Produit scalaire","text":"Pr\u00e9requis <ul> <li>Calculer avec des coordonn\u00e9es</li> <li>Savoir additionner des vecteurs avec la relation de Chasles ou pas\u2026 \u2013 Additionner des vecteurs. (1) </li> <li>Savoir additionner des vecteurs avec la relation de Chasles ou pas\u2026 \u2013 Additionner des vecteurs. (2) </li> <li>Savoir additionner des vecteurs avec la relation de Chasles ou pas\u2026 \u2013 Soustraire des vecteurs. (1) </li> <li>Savoir additionner des vecteurs avec la relation de Chasles ou pas\u2026 \u2013 Soustraire des vecteurs. (2) </li> <li>Revoir la trigonom\u00e9trie </li> <li>D\u00e9terminer des valeurs remarquables (1) </li> <li>D\u00e9terminer des valeurs remarquables (2) </li> <li>Donner un vecteur directeur </li> </ul> Cours <ul> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Calculer un produit scalaire \u00e0 l\u2019aide de normes et d\u2019un angle Calculer le produit scalaire de deux vecteurs avec une projection orthogonale Calculer un produit scalaire dans un rep\u00e8re Utiliser le produit scalaire pour d\u00e9montrer une orthogonalit\u00e9, pour calculer une longueur ou un angle.\u00a0 S\u2019entra\u00eener et r\u00e9viser <ul> <li>TP lien entre produit scalaire et travail d\u2019une force en physique </li> </ul> Exos en vid\u00e9oExos en ligneExos papier Calculer un produit scalaire QCM : pour r\u00e9viser <ul> <li>Calculer un produit scalaire avec la projection ou la colin\u00e9arit\u00e9 \u2013 Calculer un prduit scalaire. </li> <li>Calculer un produit scalaire avec la projection ou la colin\u00e9arit\u00e9 \u2013 Calculer un produit scalaire avec des projet\u00e9s orthogonaux. (1) </li> <li>Calculer un produit scalaire avec la projection ou la colin\u00e9arit\u00e9 \u2013 Calculer un produit scalaire avec des projet\u00e9s orthogonaux. (2) </li> <li>Calculer un produit scalaire avec un angle </li> <li>Calculer un angle </li> <li>Calculer un produit scalaire avec les coordonn\u00e9es (1) </li> <li>Calculer un produit scalaire avec les coordonn\u00e9es (2) </li> <li>D\u00e9montrer une orthogonalit\u00e9 de vecteur ou un perpendicularit\u00e9 de droites (1) </li> <li>D\u00e9montrer une orthogonalit\u00e9 de vecteur ou un perpendicularit\u00e9 de droites (2) </li> <li>Utiliser la formule d\u2019Al-Kashi </li> <li>D\u00e9terminer un ensemble de points </li> </ul> <ul> <li>exo et correction</li> </ul>"},{"location":"maths/spe/suite/","title":"Suites num\u00e9riques (g\u00e9n\u00e9ralit\u00e9s)","text":""},{"location":"maths/spe/suite/#suites-1","title":"Suites (1)","text":"Pr\u00e9requis <ul> <li>D\u00e9terminer des images et des ant\u00e9c\u00e9dents</li> <li>Donner une expression en fonction d\u2019une inconnue </li> <li>Comprendre un algorithme en langage naturel (1)</li> <li>Comprendre un algorithme en langage naturel (2) </li> <li>Utiliser des pourcentages </li> <li>Calculer avec les puissances (1)</li> <li>Calculer avec les puissances (2)</li> <li>Calculer avec les puissances (3) </li> <li>Comprendre un algorithme en Python (1)</li> <li>Comprendre un algorithme en Python (2) </li> </ul> Cours <ul> <li>Trace \u00e9crite du cours</li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Mod\u00e9liser une situation \u00e0 l\u2019aide d\u2019une suite Calculer les termes d\u2019une suite Calculer les termes d\u2019une suite \u00e0 l\u2019aide d\u2019un algorithme S\u2019entra\u00eener et r\u00e9viser Exos en vid\u00e9oExos en ligneExos papier Repr\u00e9senter graphiquement une suite Calculer les termes d\u2019une suite avec un programme sur une calculatrice La suite de Syracuse <p>Vid\u00e9o </p> <ul> <li>Calculer des termes d\u2019une suite d\u00e9finie par une formule explicite </li> <li>Calculer des termes d\u2019une suite d\u00e9finie par une relation de r\u00e9currence (1)</li> <li>Calculer des termes d\u2019une suite d\u00e9finie par une relation de r\u00e9currence (2) </li> <li>Mod\u00e9liser avec une suite</li> <li>Utiliser et reconna\u00eetre une suite arithm\u00e9tique</li> <li>Utiliser et reconna\u00eetre une suite g\u00e9om\u00e9trique </li> <li>Calculer des sommes de termes pour des suites arithm\u00e9tiques et g\u00e9om\u00e9triques (1)</li> <li>Calculer des sommes de termes pour des suites arithm\u00e9tiques et g\u00e9om\u00e9triques (2) </li> </ul> <ul> <li>savoir-faire et correction</li> </ul>"},{"location":"maths/spe/suite2/","title":"Suites arithm\u00e9tiques et g\u00e9om\u00e9triques","text":""},{"location":"maths/spe/suite2/#suite-2","title":"Suite (2)","text":"Pr\u00e9requis <ul> <li>Calculer avec les puissances (1) </li> <li>Calculer avec les puissances (2) </li> <li>Calculer avec les puissances (3) </li> <li>Comprendre un algorithme en Python (1) </li> <li>Comprendre un algorithme en Python (2) </li> </ul> Cours <ul> <li>Trace \u00e9crite du cours </li> <li>Fiche synth\u00e8se du cours </li> </ul> Savoir-faire <ul> <li>Fiche sur les savoir-faire/m\u00e9thodes </li> </ul> Reconna\u00eetre une suite arithm\u00e9tique D\u00e9terminer et utiliser l\u2019expression explicite d\u2019une suite arithm\u00e9tique Calculer la somme des premiers termes d\u2019une suite arithm\u00e9tique Reconna\u00eetre une suite g\u00e9om\u00e9trique S\u2019entra\u00eener et r\u00e9viser Exos en vid\u00e9oExos en ligneExos papier Reconna\u00eetre la nature d\u2019une suite Calculer la somme des termes d\u2019une suite arithm\u00e9tique Calculer la somme des termes d\u2019une suite g\u00e9om\u00e9trique QCM : Pour r\u00e9viser <ul> <li>Mod\u00e9liser avec une suite </li> <li>Utiliser et reconna\u00eetre une suite arithm\u00e9tique </li> <li>Utiliser et reconna\u00eetre une suite g\u00e9om\u00e9trique </li> <li>Calculer des sommes de termes pour des suites arithm\u00e9tiques et g\u00e9om\u00e9triques (1) </li> <li>Calculer des sommes de termes pour des suites arithm\u00e9tiques et g\u00e9om\u00e9triques (2) </li> </ul> <p>exo1 et correction1 exo2 et correction2</p>"},{"location":"maths/tc/","title":"Tronc Commun Maths 1\u00e8re","text":""},{"location":"maths/tc/#tronc-commun-maths-1ere","title":"Tronc Commun Maths 1\u00e8re","text":"<p>Concerne tou.te.s les premi\u00e8res SAUF K\u00e9lian, Valentin et Lilou-Ann</p> Au programme <ul> <li>Chapitre 1: Automatismes</li> <li>Chapitre 2: Informations chiffr\u00e9es</li> <li>Chapitre 3: Ph\u00e9nom\u00e8nes al\u00e9atoires</li> <li>Chapitre 4: Croissance lin\u00e9aire</li> <li>Chapitre 5: Croissance exponentielle</li> <li>Chapitre 6: Variations</li> </ul> Sujets BAC <p> : Sujets  : Corrig\u00e9s  : Indices</p> <p>1- Organisation d'un marathon  -   -  </p> <p>2- Gestion d'un parc animalier  -    -  </p> <p>3- Etude d'une entreprise  -   -  </p> <p>4- Commercialisation d\u2019un produit  -   -  - </p> <p>5- Evolution de la population en Argentine  -   -  -  </p> <p>6- \u00c9tude d\u2019une production  -    -  -  </p> <p>7- \u00c9limination d\u2019une substance dans le sang  -   -  -  </p> <p>8- \u00c9tude de l\u2019accidentologie  -    -  -  </p> <p>9- \u00c9tude de l\u2019utilisation de supports musicaux  -   -  </p> <p>10- Tourisme  -    -  -  </p> <p>11- Production de calculatrices  -   -  </p> <p>12- \u00c9tude de population en Argentine et pr\u00e9carit\u00e9  -   -  </p>"},{"location":"maths/tc/automatismes/","title":"Automatismes","text":""},{"location":"maths/tc/automatismes/#automatismes","title":"Automatismes","text":"<p>Les comp\u00e9tences ci-dessous sont des rappels de coll\u00e8ge. Elle ne constituent pas en elles-m\u00eames un chapitre, mais sont indispensables pour les autres chapitres. Il faut dont les travailler r\u00e9guli\u00e8rement\u2026</p> Exercices interactifs HachetteS\u2019entra\u00eener sur papier <ul> <li>Pr\u00e9ciser sur un graphique les grandeurs en jeu</li> <li>Lire sur un graphique les variations d\u2019une grandeur </li> <li>Estimer graphiquement une valeur </li> <li>Appliquer un pourcentage </li> <li>Calculer un taux d\u2019\u00e9volution </li> <li>Effectuer mentalement des calculs simples </li> <li>Passer d\u2019une \u00e9criture d\u2019un nombre \u00e0 une autre</li> <li>Utiliser un ordre de grandeur</li> <li>Effectuer une application num\u00e9rique </li> <li>R\u00e9soudre une \u00e9quation </li> </ul> <p>Automatismes S\u00e9rie 1 et le corrig\u00e9 Automatismes S\u00e9rie 2 et le corrig\u00e9 Automatismes S\u00e9rie 3 et le corrig\u00e9 Automatismes S\u00e9rie 4 et le corrig\u00e9 Automatismes S\u00e9rie 5 et le corrig\u00e9</p>"},{"location":"maths/tc/exponentielle/","title":"Croissance exponentielle","text":""},{"location":"maths/tc/exponentielle/#croissance-exponentielle","title":"Croissance exponentielle","text":"<p>A venir....</p>"},{"location":"maths/tc/info-chiffree/","title":"Informations chiffr\u00e9es","text":""},{"location":"maths/tc/info-chiffree/#analyse-de-linformation-chiffree","title":"Analyse de l\u2019information chiffr\u00e9e","text":"Pr\u00e9requis <p>Exercices interactifs\u00a0: </p> <ul> <li>Lire un graphique cart\u00e9sien ( NIV 3) </li> <li>Lire un diagramme en b\u00e2tons ( NIV 3) </li> <li>Lire un diagramme circulaire ( NIV 3) </li> </ul> <p>Exercices corrig\u00e9s </p> <ul> <li>Proportionnalit\u00e9 \u2013 Exercice corrig\u00e9 : Utiliser et calculer un taux </li> </ul> <p>Exercices interactifs\u00a0: </p> <ul> <li>taux et coefficient multiplicateur </li> <li>taux d\u2019\u00e9volution et calculs d\u2019une valeur d\u2019arriv\u00e9e </li> <li>taux d\u2019\u00e9volution et calculs d\u2019une valeur d\u2019arriv\u00e9e et valeur de d\u00e9part </li> <li>Taux d\u2019\u00e9volution d\u2019une grandeur</li> </ul> Cours <ul> <li>Fiche synth\u00e8se du cours</li> </ul> Savoir-faire <p>Fiches par savoir-faire : Cahier_Sesamath et le corrig\u00e9 Exercices interactifs corrig\u00e9s sur les savoir-faire\u00a0: Fiche 1 Dresser un tableau crois\u00e9 d\u2019effectifs Fiche 6 Analyse d\u2019un diagramme en barres Fiche 8 Analyse d\u2019un diagramme circulaire</p> S\u2019entra\u00eener et r\u00e9viser <p>Probl\u00e8mes : Cahier_Sesamath et le corrig\u00e9 Entra\u00eenement \u00e0 l\u2019examen : QCM_Bilan et la correction</p>"},{"location":"maths/tc/lineaire/","title":"Croissance lin\u00e9aire","text":""},{"location":"maths/tc/lineaire/#croissance-lineaire","title":"Croissance lin\u00e9aire","text":"<p>A venir...</p> Pr\u00e9requis Cours Savoir-faire S\u2019entra\u00eener et r\u00e9viser"},{"location":"maths/tc/proba/","title":"Ph\u00e9nom\u00e8nes al\u00e9atoires","text":""},{"location":"maths/tc/proba/#phenomenes-aleatoires","title":"Ph\u00e9nom\u00e8nes al\u00e9atoires","text":"Pr\u00e9requis <p>Exercices interactifs\u00a0: Fr\u00e9quences pour un caract\u00e8re quantitatif discret Fr\u00e9quences pour un caract\u00e8re quantitatif continu Effectif \u00e0 partir d\u2019une fr\u00e9quence Calculer une probabilit\u00e9 Fiches comp\u00e9tences de 2nde Les fiches et les corrig\u00e9s Exercices interactifs associ\u00e9s\u00a0: Langage des probabilit\u00e9s Calculer une probabilit\u00e9 \u00e0 partir d\u2019une loi Loi de probabilit\u00e9 Calculer une probabilit\u00e9 Probabilit\u00e9 d\u2019intersection, de r\u00e9union avec \u00e9v\u00e9nement contraire Diagramme de Venn Probabilit\u00e9s dans un tableau Probabilit\u00e9 avec un arbre de probabilit\u00e9</p> Cours <p>Fiche synth\u00e8se du cours</p> Savoir-faire <p>Fiches par savoir-faire : Cahier_Sesamath et le corrig\u00e9 Exercices interactifs corrig\u00e9s sur les savoir-faire\u00a0: Fiche 13 D\u00e9finition d\u2019une probabilit\u00e9 conditionnelle Fiche 14 Construction d\u2019un arbre de probabilit\u00e9s Fiche 15 Utiliser un arbre de probabilit\u00e9s Fiche 16 Inverser le conditionnement Fiche 17 Ind\u00e9pendance de deux \u00e9v\u00e9nements Fiche 18 Succession d\u2019\u00e9v\u00e9nements ind\u00e9pendants</p> S\u2019entra\u00eener et r\u00e9viser <p>Probl\u00e8mes : Cahier_Sesamath et le corrig\u00e9 Entra\u00eenement \u00e0 l\u2019examen : QCM_Bilan et la correction</p>"},{"location":"maths/tc/variations/","title":"Variations instantan\u00e9es, variations globales","text":""},{"location":"meca/college/","title":"Rappels de coll\u00e8ge","text":""},{"location":"meca/college/#quelques-rappels-de-college-ou-pas","title":"Quelques rappels de coll\u00e8ge (ou pas...)","text":""},{"location":"meca/college/#forces","title":"Forces","text":""},{"location":"meca/college/#actions-mecaniques-de-contact-ou-a-distance","title":"Actions m\u00e9caniques de contact ou \u00e0 distance","text":""},{"location":"meca/college/#diagramme-objet-intercation","title":"Diagramme objet / intercation","text":""},{"location":"meca/college/#quest-ce-quune-force","title":"Qu'est-ce qu'une force","text":""},{"location":"meca/college/#differencier-direction-sens-et-valeur","title":"Diff\u00e9rencier direction, sens et valeur","text":""},{"location":"meca/college/#comment-representer-une-force","title":"Comment repr\u00e9senter une force ?","text":""},{"location":"meca/college/#exo-calcul-du-poids-dun-objet","title":"Exo : Calcul du poids d'un objet","text":""},{"location":"meca/college/#mouvement","title":"Mouvement","text":""},{"location":"meca/college/#comment-decrire-un-mouvement","title":"Comment d\u00e9crire un mouvement ?","text":""},{"location":"meca/college/#energies-mecaniques","title":"Energies m\u00e9caniques","text":""},{"location":"meca/college/#lenergie-cinetique","title":"L'\u00e9nergie cin\u00e9tique","text":""},{"location":"meca/college/#lenergie-potentielle-de-pesanteur","title":"L'\u00e9nergie potentielle de pesanteur","text":""},{"location":"meca/college/#quizz-energie-cinetique-et-potentielle","title":"Quizz : \u00e9nergie cin\u00e9tique et potentielle","text":""},{"location":"meca/intro/","title":"Introduction","text":""},{"location":"meca/intro/#la-mecanique","title":"La m\u00e9canique","text":"<p>Au programme</p> <p>0- Rappels de coll\u00e8ge</p>"},{"location":"meca/intro/#deter","title":"\ud83d\udfe2 D\u00e9ter","text":"<p>1- La notion de force</p> <p>2- Le mouvement</p> <p>3- Le principe d'inertie</p>"},{"location":"meca/intro/#premiere","title":"\ud83d\udfe1 Premi\u00e8re","text":"<p>4- Champs gravitationnels et \u00e9lectrostatiques</p> <p>5- Le vecteur variation de vitesse</p> <p>6- Travail d'une force</p> <p>7- Statique des fluides</p>"},{"location":"meca/intro/#terminale","title":"\ud83d\udd34 Terminale","text":"<p>8- Vecteur acc\u00e9l\u00e9ration</p> <p>9- Mouvement dans un champ uniforme</p> <p>10- Mouvements des satellites</p>"},{"location":"meca/ressources/","title":"Ressources","text":"<p>Outils math\u00e9matiques  https://www.youtube.com/playlist?list=PLFf1gA-ubk_TVCZmoUmm8OcUBIkJAtwlO</p> <p>https://www.youtube.com/@sciencesphysiquesastella</p> <p>Interactions : </p> <p>Mouvement : </p> <p>Modifier mouvement : </p> <p>Prof coudert </p> <p>2nde Force : </p>"},{"location":"meca/deter/force/","title":"La notion de force","text":""},{"location":"meca/deter/force/#les-forces-deter","title":"Les forces (d\u00e9ter)","text":""},{"location":"meca/deter/force/#la-force-pour-modeliser-une-action-mecanique","title":"La force pour mod\u00e9liser une action m\u00e9canique","text":""},{"location":"meca/deter/force/#construire-un-diagramme-objetinteraction","title":"Construire un diagramme objet/interaction","text":""},{"location":"meca/deter/force/#le-vecteur-pour-representer-une-force","title":"Le vecteur pour repr\u00e9senter une force","text":""},{"location":"meca/deter/force/#exemple-de-la-force-dinteraction-gravitationelle","title":"Exemple de la force d'interaction gravitationelle","text":""},{"location":"meca/deter/force/#exo-force-exercee-par-la-terre-sur-la-lune","title":"Exo : Force exerc\u00e9e par la Terre sur la Lune","text":"<p>Autres ressouces</p> <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Enqu\u00eate</p>"},{"location":"meca/deter/inertie/","title":"Le principe d'inertie","text":""},{"location":"meca/deter/inertie/#principe-dinertie","title":"Principe d'inertie","text":"<p>A savoir</p> <p>Le principe d'inertie est la premi\u00e8re des trois lois de Newton qui fondent la m\u00e9canique classique. Il dit que tout objet plac\u00e9 dans un r\u00e9f\u00e9rentiel galil\u00e9en et soumis \u00e0 des forces nulles ou qui se compensent est : - soit immobile - soit en mouvement rectiligne uniforme. </p>"},{"location":"meca/deter/inertie/#relativite-du-mouvement-et-referentiel","title":"Relativit\u00e9 du mouvement et r\u00e9f\u00e9rentiel","text":""},{"location":"meca/deter/inertie/#comment-utiliser-le-principe-dinertie","title":"Comment utiliser le principe d'inertie ?","text":""},{"location":"meca/deter/inertie/#principe-dinertie-applique-a-la-chutte-libre","title":"Principe d'inertie appliqu\u00e9 \u00e0 la chutte libre","text":""},{"location":"meca/deter/inertie/#exo-bilan-des-forces-et-principe-dinertie","title":"Exo : Bilan des forces et principe d'inertie","text":"<p>Autres ressouces</p> <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Classe invers\u00e9e</p>"},{"location":"meca/deter/mouvement/","title":"Le mouvement","text":""},{"location":"meca/deter/mouvement/#letude-du-mouvement","title":"L'\u00e9tude du mouvement","text":""},{"location":"meca/deter/mouvement/#relativite-du-mouvement-et-referentiel","title":"Relativit\u00e9 du mouvement et r\u00e9f\u00e9rentiel","text":""},{"location":"meca/deter/mouvement/#la-chronophotographie","title":"La chronophotographie","text":""},{"location":"meca/deter/mouvement/#exo-caracteriser-un-mouvement","title":"Exo : Caract\u00e9riser un mouvement","text":"<p>Autres ressouces</p> <p>Cours</p> <p>Bilan Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Python</p>"},{"location":"meca/premiere/champs/","title":"Champs gravitationnels et \u00e9lectrostatiques","text":""},{"location":"meca/premiere/champs/#champs-de-pesanteur-et-electrostatiques","title":"Champs de pesanteur et \u00e9lectrostatiques","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfaeAutres ressouces <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Classe invers\u00e9e</p>"},{"location":"meca/premiere/champs/#loi-de-coulomb","title":"Loi de Coulomb","text":""},{"location":"meca/premiere/champs/#calculer-une-force-electrostatique","title":"Calculer une force \u00e9lectrostatique","text":""},{"location":"meca/premiere/fluide/","title":"Statique des fluides","text":""},{"location":"meca/premiere/fluide/#statique-des-fluides","title":"Statique des fluides","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac"},{"location":"meca/premiere/fluide/#loi-fondamentale-de-la-statique-des-fluides","title":"Loi fondamentale de la statique des fluides","text":""},{"location":"meca/premiere/fluide/#force-pressante-exercee-par-un-fluide","title":"Force pressante exerc\u00e9e par un fluide","text":""},{"location":"meca/premiere/fluide/#exo-loi-fondamentale-de-la-statique-des-fluides","title":"Exo : Loi fondamentale de la statique des fluides","text":""},{"location":"meca/premiere/fluide/#calculer-une-pression-avec-la-loi-fondamentale-de-la-statique-des-fluides","title":"Calculer une pression avec la loi fondamentale de la statique des fluides","text":""},{"location":"meca/premiere/fluide/#exo-le-barometre-de-torricelli","title":"Exo : Le barom\u00eatre de Torricelli","text":""},{"location":"meca/premiere/fluide/#loi-de-mariotte","title":"Loi de Mariotte","text":""},{"location":"meca/premiere/fluide/#utilisation-de-la-loi-de-mariotte","title":"Utilisation de la loi de Mariotte","text":""},{"location":"meca/premiere/fluide/#exo-calculer-la-pression-dun-gaz-avec-la-loi-de-mariotte","title":"Exo : Calculer la pression d'un gaz avec la loi de Mariotte","text":"\ud83c\udfae Animations \ud83c\udfaeAutres ressouces <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Arduino</p>"},{"location":"meca/premiere/travail/","title":"Travail d'une force","text":""},{"location":"meca/premiere/travail/#travail-dune-force-et-theoreme-de-lenergie-cinetique","title":"Travail d'une force et th\u00e9or\u00e8me de l'\u00e9nergie cin\u00e9tique","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfaeAutres ressouces <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Geogebra</p>"},{"location":"meca/premiere/travail/#le-travail-dune-force","title":"Le travail d'une force","text":""},{"location":"meca/premiere/travail/#exo-calcul-du-travail-dune-force","title":"Exo : Calcul du travail d'une force","text":""},{"location":"meca/premiere/travail/#travail-dune-force-conservative-exemple-du-poids","title":"Travail d'une force conservative : exemple du poids","text":""},{"location":"meca/premiere/travail/#exo-application-du-theoreme-de-lenergie-cinetique","title":"Exo : Application du th\u00e9or\u00e8me de l'\u00e9nergie cin\u00e9tique","text":""},{"location":"meca/premiere/travail/#exo-calcul-dune-vitesse-a-partir-de-lenergie-cinetique","title":"Exo : Calcul d'une vitesse \u00e0 partir de l'\u00e9nergie cin\u00e9tique","text":""},{"location":"meca/premiere/vitesse/","title":"Le vecteur variation de vitesse","text":""},{"location":"meca/premiere/vitesse/#le-vecteur-variation-de-vitesse-1ere","title":"Le vecteur variation de vitesse (1\u00e8re)","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfaeAutres ressouces <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Aller plus loin</p> <p>Probl\u00e8me</p> <p>Python</p>"},{"location":"meca/premiere/vitesse/#methode-de-trace-du-vecteur-vitesse","title":"M\u00e9thode de trac\u00e9 du vecteur vitesse","text":""},{"location":"meca/premiere/vitesse/#somme-des-forces-et-vecteur-variation-de-vitesse","title":"Somme des forces et vecteur variation de vitesse","text":""},{"location":"meca/premiere/vitesse/#tracer-un-vecteur-variation-de-vitesse","title":"Tracer un vecteur variation de vitesse","text":""},{"location":"meca/premiere/vitesse/#exo-vecteur-variation-de-vitesse","title":"Exo : vecteur variation de vitesse","text":""},{"location":"meca/premiere/vitesse/#application-bilan-des-forces-et-vecteur-variation-de-vitesse","title":"Application : Bilan des forces et vecteur variation de vitesse","text":""},{"location":"meca/terminale/champs/","title":"Mouvement dans un champ uniforme","text":""},{"location":"meca/terminale/champs/#mouvement-dans-des-champs-uniformes","title":"Mouvement dans des champs uniformes","text":"\ud83c\udfac Vid\u00e9os \ud83c\udfac\ud83c\udfae Animations \ud83c\udfaeAutres ressouces <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9 #1</p> <p>Exo corrig\u00e9 #2</p> <p>S'entrainer</p> <p>Objectif bac</p> <p>Probl\u00e8me</p>"},{"location":"meca/terminale/champs/#exo-rappel-sur-la-force-de-gravitation","title":"Exo : Rappel sur la force de gravitation","text":""},{"location":"meca/terminale/champs/#exo-deuxieme-loi-de-newton","title":"Exo : Deuxi\u00e8me loi de Newton","text":""},{"location":"meca/terminale/champs/#exo-mouvement-dans-un-champ-de-pesanteur","title":"Exo : Mouvement dans un champ de pesanteur","text":""},{"location":"meca/terminale/champs/#exo-mouvement-dans-un-champ-de-pesanteur-avec-condition-initiale","title":"Exo : Mouvement dans un champ de pesanteur avec condition initiale","text":""},{"location":"meca/terminale/satellite/","title":"Mouvements des satellites","text":""},{"location":"meca/terminale/satellite/#mouvement-des-satellites-et-planetes","title":"Mouvement des satellites et plan\u00e8tes","text":""},{"location":"meca/terminale/satellite/#mouvement-circulaires-et-repere-de-frenet","title":"Mouvement circulaires et rep\u00e8re de Frenet","text":""},{"location":"meca/terminale/satellite/#vitesse-dun-satellite-dans-un-champ-de-gravitation","title":"Vitesse d'un satellite dans un champ de gravitation","text":""},{"location":"meca/terminale/satellite/#les-3-lois-de-kepler","title":"Les 3 lois de Kepler","text":"<p>Autres ressouces</p> <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>Exo corrig\u00e9 #2</p> <p>S'entrainer</p> <p>Objectif bac</p> <p>Probl\u00e8me</p> <p>Dossier</p>"},{"location":"meca/terminale/vecteur/","title":"Vecteur acc\u00e9l\u00e9ration","text":""},{"location":"meca/terminale/vecteur/#vecteurs-position-vitesse-et-acceleration","title":"Vecteurs position, vitesse et acc\u00e9l\u00e9ration","text":""},{"location":"meca/terminale/vecteur/#exo-decrire-un-mouvement","title":"Exo : D\u00e9crire un mouvement","text":""},{"location":"meca/terminale/vecteur/#exo-mouvement-parabolique","title":"Exo : Mouvement parabolique","text":"<p>Autres ressouces</p> <p>Cours</p> <p>Bilan</p> <p>Quiz</p> <p>S'\u00e9chauffer</p> <p>Exo corrig\u00e9</p> <p>S'entrainer</p> <p>Objectif bac</p> <p>Probl\u00e8me</p> <p>Classe invers\u00e9e</p>"},{"location":"nucleaire/","title":"Nucl\u00e9aire","text":""},{"location":"nucleaire/#nucleaire","title":"Nucl\u00e9aire","text":""},{"location":"nucleaire/#deter","title":"D\u00e9ter","text":""},{"location":"nucleaire/#transformations-nucleaires","title":"Transformations nucl\u00e9aires","text":""},{"location":"nucleaire/#fission-et-fusion-nucleaire","title":"Fission et fusion nucl\u00e9aire","text":""},{"location":"optique/couleurs/","title":"\ud83d\udfe1 Couleurs","text":""},{"location":"optique/couleurs/#la-perception-humaine-des-couleurs-la-trichromie","title":"La perception humaine des couleurs : la trichromie","text":""},{"location":"optique/couleurs/#superposition-de-couleurs-synthese-aditive","title":"Superposition de couleurs : synth\u00e8se aditive","text":""},{"location":"optique/couleurs/#quand-on-enleve-des-couleurs-synthese-soustractive","title":"Quand on enl\u00e8ve des couleurs : synth\u00e8se soustractive","text":""},{"location":"optique/interference/","title":"\ud83d\udd34 Interf\u00e9rence et diffraction","text":""},{"location":"optique/interference/#diffraction-et-interferences","title":"Diffraction et interf\u00e9rences","text":""},{"location":"optique/interference/#presentation-de-la-diffraction","title":"Pr\u00e9sentation de la diffraction","text":""},{"location":"optique/interference/#diffration-formule-de-base","title":"Diffration : formule de base","text":""},{"location":"optique/interference/#interference-de-2-ondes","title":"Interf\u00e9rence de 2 ondes","text":""},{"location":"optique/intro/","title":"Introduction","text":""},{"location":"optique/intro/#optique","title":"Optique","text":"<p>L'optique est le domaine de la physique qui s'int\u00e9resse au comportement de la lumi\u00e8re, c'est \u00e0 dire le domaine visible des ondes \u00e9lectromagn\u00e9tiques.</p>"},{"location":"optique/intro/#une-petite-introduction-sur-ce-quest-la-lumiere-a-la-fois-onde-et-particule","title":"Une petite introduction sur ce qu'est la lumi\u00e8re, \u00e0 la fois onde et particule.","text":"<p>Un peu de culture g\u00e9n\u00e9rale !</p> <p>Je vous conseille d'occuper vos longues soir\u00e9es d'hiver avec ce documentaire de 50 minutes tr\u00e8s enrichissant sur l'histoire de l'\u00e9tude scientifique de la lumi\u00e8re.  </p>"},{"location":"optique/photon/","title":"\ud83d\udfe1 Les photons","text":""},{"location":"optique/photon/#le-photon-particule-de-lumiere","title":"Le photon : particule de lumi\u00e8re","text":""},{"location":"optique/photon/#emission-dun-photon-par-un-atome","title":"Emission d'un photon par un atome","text":""},{"location":"optique/photon/#absorption-dun-photon-par-un-atome","title":"Absorption d'un photon par un atome","text":""},{"location":"optique/photon/#absorption-et-emission-resume","title":"Absorption et \u00e9mission : r\u00e9sum\u00e9","text":""},{"location":"optique/photon/#calculer-la-couleur-dun-photon","title":"Calculer la \"couleur\" d'un photon","text":""},{"location":"optique/photon/#lelectronvolt-unite-denergie","title":"L'\u00e9lectronvolt, unit\u00e9 d'\u00e9nergie","text":""},{"location":"optique/photon/#calcul-de-lenergie-dun-photon","title":"Calcul de l'\u00e9nergie d'un photon","text":""},{"location":"optique/propa/","title":"Propagation et autres","text":""},{"location":"optique/propa/#propagations-et-interactions-de-la-lumiere-avec-la-matiere","title":"Propagations et interactions de la lumi\u00e8re avec la mati\u00e8re","text":"<p>Abstract</p> <p>Propagation, transmission, r\u00e9flexion, absoption, diffusion, r\u00e9fraction, dispertion</p>"},{"location":"optique/spectres/","title":"Les spectres","text":""},{"location":"optique/spectres/#les-spectres-demission-de-la-lumiere","title":"Les spectres d'\u00e9mission de la lumi\u00e8re","text":""},{"location":"optique/spectres/#les-spectres-demission","title":"Les spectres d'\u00e9mission","text":""},{"location":"optique/spectres/#quest-ce-que-la-spectroscopie","title":"Qu'est-ce que la spectroscopie ?","text":""},{"location":"optique/telescope/","title":"\ud83d\udd34 Les t\u00e9l\u00e9scopes","text":""},{"location":"optique/telescope/#la-lunette-astronomique-term","title":"La lunette astronomique (Term)","text":""},{"location":"optique/telescope/#vocabulaire-et-trace","title":"Vocabulaire et trac\u00e9","text":""},{"location":"optique/telescope/#grossissement-dune-lunette","title":"Grossissement d'une lunette","text":""},{"location":"optique/lentille/lentille-calcul/","title":"Calculs","text":""},{"location":"optique/lentille/lentille-calcul/#determiner-les-caracteristiques-dune-image-ou-dun-objet-par-le-calcul","title":"D\u00e9terminer les caract\u00e9ristiques d'une image ou d'un objet par le calcul","text":""},{"location":"optique/lentille/lentille-calcul/#grandeur-algebrique","title":"Grandeur alg\u00e9brique","text":""},{"location":"optique/lentille/lentille-calcul/#relation-de-conjugaison","title":"Relation de conjugaison","text":""},{"location":"optique/lentille/lentille-calcul/#grandissement","title":"Grandissement","text":""},{"location":"optique/lentille/lentille-calcul/#un-exercice-resolu","title":"Un exercice r\u00e9solu","text":""},{"location":"optique/lentille/lentille-graphique/","title":"Constructions graphiques","text":""},{"location":"optique/lentille/lentille-graphique/#optique-geometrique-lentilles-et-constructions-graphiques","title":"Optique g\u00e9om\u00e9trique : lentilles et constructions graphiques","text":"<p>Le comportement simplifi\u00e9 de la lumi\u00e8re au passage d'une lentille est d\u00e9termin\u00e9 avec les 3 r\u00e8gles de construction suivantes :</p> <p></p>"},{"location":"optique/lentille/lentille-graphique/#la-lentille-optique-quelques-definitions","title":"La lentille optique : quelques d\u00e9finitions","text":"<p>Abstract</p> <p>Lentille convergente, Axe optique, rayon lumineux, foyer objet, foyer image, distance focale</p>"},{"location":"optique/lentille/lentille-graphique/#construction-graphique-dune-image-reelle","title":"Construction graphique d'une image r\u00e9elle","text":"<p>Abstract</p> <p>Image r\u00e9elle</p>"},{"location":"optique/lentille/lentille-graphique/#construction-graphique-dune-image-virtuelle","title":"Construction graphique d'une image virtuelle","text":"<p>Abstract</p> <p>Image virtuelle</p>"}]}